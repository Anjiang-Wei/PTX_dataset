//
// Generated by LLVM NVPTX Back-End
//

.version 8.7
.target sm_80
.address_size 64

	// .globl	matmul_kernel           // -- Begin function matmul_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @matmul_kernel
.visible .entry matmul_kernel(
	.param .u64 .ptr .global .align 1 matmul_kernel_param_0,
	.param .u64 .ptr .global .align 1 matmul_kernel_param_1,
	.param .u64 .ptr .global .align 1 matmul_kernel_param_2,
	.param .u32 matmul_kernel_param_3,
	.param .u32 matmul_kernel_param_4,
	.param .u32 matmul_kernel_param_5,
	.param .u32 matmul_kernel_param_6,
	.param .u32 matmul_kernel_param_7,
	.param .u64 .ptr .global .align 1 matmul_kernel_param_8
)
.reqntid 128
{
	.reg .pred 	%p<50>;
	.reg .b32 	%r<1965>;
	.reg .b64 	%rd<111>;
	.loc	1 68 0                          // gated_mlp.py:68:0
$L__func_begin0:
	.loc	1 68 0                          // gated_mlp.py:68:0

// %bb.0:
	ld.param.b32 	%r433, [matmul_kernel_param_7];
	ld.param.b32 	%r432, [matmul_kernel_param_4];
	ld.param.b32 	%r431, [matmul_kernel_param_3];
	ld.param.b64 	%rd19, [matmul_kernel_param_2];
	ld.param.b64 	%rd18, [matmul_kernel_param_1];
	ld.param.b64 	%rd17, [matmul_kernel_param_0];
$L__tmp0:
	.loc	1 91 24                         // gated_mlp.py:91:24
	mov.u32 	%r482, %ctaid.x;
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22 @[ gated_mlp.py:93:27 ]
	add.s32 	%r483, %r431, 127;
	.loc	2 40 28                         // standard.py:40:28 @[ gated_mlp.py:93:27 ]
	shr.s32 	%r484, %r483, 31;
	shr.u32 	%r485, %r484, 25;
	add.s32 	%r486, %r483, %r485;
	shr.s32 	%r487, %r486, 7;
$L__tmp2:
	.loc	1 94 38                         // gated_mlp.py:94:38
	shl.b32 	%r489, %r487, 3;
	.loc	1 95 22                         // gated_mlp.py:95:22
	div.s32 	%r490, %r482, %r489;
	ld.param.b32 	%r491, [matmul_kernel_param_6];
	.loc	1 96 29                         // gated_mlp.py:96:29
	shl.b32 	%r1, %r490, 3;
	.loc	1 97 35                         // gated_mlp.py:97:35
	sub.s32 	%r492, 1, %r1;
	.loc	1 97 48                         // gated_mlp.py:97:48
	min.s32 	%r2, %r492, 8;
	.loc	1 98 34                         // gated_mlp.py:98:34
	mul.lo.s32 	%r493, %r490, %r489;
	sub.s32 	%r3, %r482, %r493;
	.loc	1 99 40                         // gated_mlp.py:99:40
	div.s32 	%r4, %r3, %r2;
	.loc	1 109 23                        // gated_mlp.py:109:23
	shl.b32 	%r494, %r4, 7;
	.loc	1 109 51                        // gated_mlp.py:109:51
	mov.u32 	%r5, %tid.x;
	shl.b32 	%r6, %r5, 3;
	and.b32 	%r7, %r6, 24;
	and.b32 	%r495, %r6, 120;
	and.b32 	%r8, %r5, 64;
	shr.u32 	%r9, %r5, 4;
	bfe.u32 	%r10, %r5, 4, 3;
	or.b32 	%r11, %r10, 8;
	or.b32 	%r12, %r10, 16;
	or.b32 	%r13, %r10, 24;
	.loc	1 109 38                        // gated_mlp.py:109:38
	or.b32 	%r14, %r494, %r495;
	.loc	1 109 68                        // gated_mlp.py:109:68
	rem.s32 	%r496, %r14, %r431;
	.loc	1 111 22                        // gated_mlp.py:111:22
	mul.wide.u32 	%rd44, %r7, 2;
	add.s64 	%rd20, %rd17, %rd44;
	.loc	1 112 40                        // gated_mlp.py:112:40
	shl.b32 	%r497, %r491, 3;
	.loc	1 112 52                        // gated_mlp.py:112:52
	mad.lo.s32 	%r498, %r491, %r10, %r496;
	add.s32 	%r499, %r498, %r497;
	add.s32 	%r500, %r499, %r497;
	add.s32 	%r501, %r500, %r497;
	.loc	1 112 22                        // gated_mlp.py:112:22
	mul.wide.s32 	%rd45, %r498, 2;
	add.s64 	%rd24, %rd18, %rd45;
	mul.wide.s32 	%rd46, %r499, 2;
	add.s64 	%rd25, %rd18, %rd46;
	mul.wide.s32 	%rd47, %r500, 2;
	add.s64 	%rd26, %rd18, %rd47;
	mul.wide.s32 	%rd48, %r501, 2;
	add.s64 	%rd27, %rd18, %rd48;
$L__tmp3:
	.loc	2 40 22                         // standard.py:40:22 @[ gated_mlp.py:120:33 ]
	add.s32 	%r502, %r432, 31;
$L__tmp4:
	.loc	1 129 33                        // gated_mlp.py:129:33
	shl.b32 	%r506, %r491, 5;
	.loc	1 120 22                        // gated_mlp.py:120:22
	setp.gt.s32 	%p1, %r502, 31;
	.loc	1 123 51                        // gated_mlp.py:123:51
	setp.lt.s32 	%p2, %r7, %r432;
	.loc	1 123 20                        // gated_mlp.py:123:20
	xor.b32 	%r507, %r6, %r5;
	and.b32 	%r508, %r507, 24;
	shr.u32 	%r509, %r5, 2;
	and.b32 	%r16, %r509, 8;
	bfe.u32 	%r510, %r5, 2, 4;
	shr.u32 	%r511, %r8, 2;
	or.b32 	%r512, %r510, %r511;
	shl.b32 	%r513, %r512, 5;
	or.b32 	%r17, %r513, %r508;
	shl.b32 	%r514, %r17, 1;
	mov.b32 	%r515, global_smem;
	add.s32 	%r434, %r515, %r514;
	add.s32 	%r436, %r434, 2048;
	add.s32 	%r438, %r434, 4096;
	add.s32 	%r440, %r434, 6144;
	selp.b32 	%r516, 16, 0, %p1;
	selp.b32 	%r437, %r516, 0, %p2;
	// begin inline asm
	cp.async.cg.shared.global [ %r434 + 0 ], [ %rd20 + 0 ], 0x10, %r437;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r436 + 0 ], [ %rd20 + 0 ], 0x10, %r437;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r438 + 0 ], [ %rd20 + 0 ], 0x10, %r437;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r440 + 0 ], [ %rd20 + 0 ], 0x10, %r437;
	// end inline asm
	cp.async.commit_group;
	.loc	1 124 51                        // gated_mlp.py:124:51
	setp.lt.s32 	%p3, %r10, %r432;
	setp.lt.s32 	%p4, %r11, %r432;
	setp.lt.s32 	%p5, %r12, %r432;
	setp.lt.s32 	%p6, %r13, %r432;
	.loc	1 124 20                        // gated_mlp.py:124:20
	shr.u32 	%r18, %r5, 1;
	and.b32 	%r19, %r18, 56;
	xor.b32 	%r517, %r19, %r495;
	shl.b32 	%r518, %r10, 7;
	or.b32 	%r20, %r517, %r518;
	shl.b32 	%r519, %r20, 1;
	add.s32 	%r520, %r515, %r519;
	add.s32 	%r442, %r520, 24576;
	add.s32 	%r444, %r520, 26624;
	add.s32 	%r446, %r520, 28672;
	add.s32 	%r448, %r520, 30720;
	selp.b32 	%r443, %r516, 0, %p3;
	// begin inline asm
	cp.async.cg.shared.global [ %r442 + 0 ], [ %rd24 + 0 ], 0x10, %r443;
	// end inline asm
	selp.b32 	%r445, %r516, 0, %p4;
	// begin inline asm
	cp.async.cg.shared.global [ %r444 + 0 ], [ %rd25 + 0 ], 0x10, %r445;
	// end inline asm
	selp.b32 	%r447, %r516, 0, %p5;
	// begin inline asm
	cp.async.cg.shared.global [ %r446 + 0 ], [ %rd26 + 0 ], 0x10, %r447;
	// end inline asm
	selp.b32 	%r449, %r516, 0, %p6;
	// begin inline asm
	cp.async.cg.shared.global [ %r448 + 0 ], [ %rd27 + 0 ], 0x10, %r449;
	// end inline asm
	cp.async.commit_group;
	.loc	1 120 22                        // gated_mlp.py:120:22
	setp.gt.s32 	%p7, %r502, 63;
	.loc	1 128 18                        // gated_mlp.py:128:18
	add.s64 	%rd28, %rd20, 64;
	.loc	1 129 18                        // gated_mlp.py:129:18
	mul.wide.s32 	%rd49, %r506, 2;
	add.s64 	%rd32, %rd24, %rd49;
	add.s64 	%rd33, %rd25, %rd49;
	add.s64 	%rd34, %rd26, %rd49;
	add.s64 	%rd35, %rd27, %rd49;
	.loc	1 123 55                        // gated_mlp.py:123:55
	add.s32 	%r521, %r432, -32;
	.loc	1 123 51                        // gated_mlp.py:123:51
	setp.lt.s32 	%p8, %r7, %r521;
	.loc	1 123 20                        // gated_mlp.py:123:20
	bar.sync 	0;
	add.s32 	%r450, %r434, 8192;
	add.s32 	%r452, %r434, 10240;
	add.s32 	%r454, %r434, 12288;
	add.s32 	%r456, %r434, 14336;
	selp.b32 	%r522, 16, 0, %p8;
	selp.b32 	%r453, %r522, 0, %p7;
	// begin inline asm
	cp.async.cg.shared.global [ %r450 + 0 ], [ %rd28 + 0 ], 0x10, %r453;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r452 + 0 ], [ %rd28 + 0 ], 0x10, %r453;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r454 + 0 ], [ %rd28 + 0 ], 0x10, %r453;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r456 + 0 ], [ %rd28 + 0 ], 0x10, %r453;
	// end inline asm
	cp.async.commit_group;
	.loc	1 124 51                        // gated_mlp.py:124:51
	setp.lt.s32 	%p9, %r10, %r521;
	setp.lt.s32 	%p10, %r11, %r521;
	setp.lt.s32 	%p11, %r12, %r521;
	setp.lt.s32 	%p12, %r13, %r521;
	.loc	1 124 20                        // gated_mlp.py:124:20
	add.s32 	%r458, %r520, 32768;
	add.s32 	%r460, %r520, 34816;
	add.s32 	%r462, %r520, 36864;
	add.s32 	%r464, %r520, 38912;
	selp.b32 	%r523, 16, 0, %p9;
	selp.b32 	%r459, %r523, 0, %p7;
	// begin inline asm
	cp.async.cg.shared.global [ %r458 + 0 ], [ %rd32 + 0 ], 0x10, %r459;
	// end inline asm
	selp.b32 	%r524, 16, 0, %p10;
	selp.b32 	%r461, %r524, 0, %p7;
	// begin inline asm
	cp.async.cg.shared.global [ %r460 + 0 ], [ %rd33 + 0 ], 0x10, %r461;
	// end inline asm
	selp.b32 	%r525, 16, 0, %p11;
	selp.b32 	%r463, %r525, 0, %p7;
	// begin inline asm
	cp.async.cg.shared.global [ %r462 + 0 ], [ %rd34 + 0 ], 0x10, %r463;
	// end inline asm
	selp.b32 	%r526, 16, 0, %p12;
	selp.b32 	%r465, %r526, 0, %p7;
	// begin inline asm
	cp.async.cg.shared.global [ %r464 + 0 ], [ %rd35 + 0 ], 0x10, %r465;
	// end inline asm
	cp.async.commit_group;
	.loc	1 120 22                        // gated_mlp.py:120:22
	setp.gt.s32 	%p13, %r502, 95;
	.loc	1 128 18                        // gated_mlp.py:128:18
	add.s64 	%rd36, %rd20, 128;
	.loc	1 129 18                        // gated_mlp.py:129:18
	add.s64 	%rd40, %rd32, %rd49;
	add.s64 	%rd41, %rd33, %rd49;
	add.s64 	%rd42, %rd34, %rd49;
	add.s64 	%rd43, %rd35, %rd49;
	.loc	1 123 55                        // gated_mlp.py:123:55
	add.s32 	%r527, %r432, -64;
	.loc	1 123 51                        // gated_mlp.py:123:51
	setp.lt.s32 	%p14, %r7, %r527;
	.loc	1 123 20                        // gated_mlp.py:123:20
	bar.sync 	0;
	add.s32 	%r466, %r434, 16384;
	add.s32 	%r468, %r434, 18432;
	add.s32 	%r470, %r434, 20480;
	add.s32 	%r472, %r434, 22528;
	selp.b32 	%r528, 16, 0, %p14;
	selp.b32 	%r469, %r528, 0, %p13;
	// begin inline asm
	cp.async.cg.shared.global [ %r466 + 0 ], [ %rd36 + 0 ], 0x10, %r469;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r468 + 0 ], [ %rd36 + 0 ], 0x10, %r469;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r470 + 0 ], [ %rd36 + 0 ], 0x10, %r469;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r472 + 0 ], [ %rd36 + 0 ], 0x10, %r469;
	// end inline asm
	cp.async.commit_group;
	.loc	1 124 51                        // gated_mlp.py:124:51
	setp.lt.s32 	%p15, %r10, %r527;
	setp.lt.s32 	%p16, %r11, %r527;
	setp.lt.s32 	%p17, %r12, %r527;
	setp.lt.s32 	%p18, %r13, %r527;
	.loc	1 124 20                        // gated_mlp.py:124:20
	add.s32 	%r474, %r520, 40960;
	add.s32 	%r476, %r520, 43008;
	add.s32 	%r478, %r520, 45056;
	add.s32 	%r480, %r520, 47104;
	selp.b32 	%r529, 16, 0, %p15;
	selp.b32 	%r475, %r529, 0, %p13;
	// begin inline asm
	cp.async.cg.shared.global [ %r474 + 0 ], [ %rd40 + 0 ], 0x10, %r475;
	// end inline asm
	selp.b32 	%r530, 16, 0, %p16;
	selp.b32 	%r477, %r530, 0, %p13;
	// begin inline asm
	cp.async.cg.shared.global [ %r476 + 0 ], [ %rd41 + 0 ], 0x10, %r477;
	// end inline asm
	selp.b32 	%r531, 16, 0, %p17;
	selp.b32 	%r479, %r531, 0, %p13;
	// begin inline asm
	cp.async.cg.shared.global [ %r478 + 0 ], [ %rd42 + 0 ], 0x10, %r479;
	// end inline asm
	selp.b32 	%r532, 16, 0, %p18;
	selp.b32 	%r481, %r532, 0, %p13;
	// begin inline asm
	cp.async.cg.shared.global [ %r480 + 0 ], [ %rd43 + 0 ], 0x10, %r481;
	// end inline asm
	cp.async.commit_group;
	.loc	1 120 22                        // gated_mlp.py:120:22
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %.lr.ph
	.loc	1 0 0                           // gated_mlp.py:0
	cvt.s64.s32 	%rd1, %r498;
	cvt.s64.s32 	%rd2, %r499;
	cvt.s64.s32 	%rd3, %r500;
	cvt.s64.s32 	%rd4, %r501;
	shr.s32 	%r503, %r502, 31;
	shr.u32 	%r504, %r503, 27;
	add.s32 	%r505, %r502, %r504;
	shr.s32 	%r15, %r505, 5;
	cvt.s64.s32 	%rd5, %r506;
	.loc	1 124 20                        // gated_mlp.py:124:20
	and.b32 	%r601, %r18, 8;
	.loc	1 109 51                        // gated_mlp.py:109:51
	bfe.s32 	%r602, %r5, 2, 1;
	bfe.s32 	%r603, %r5, 1, 1;
	add.s32 	%r22, %r15, -3;
	shl.b32 	%r1900, %r5, 5;
	and.b32 	%r604, %r603, 72;
	and.b32 	%r605, %r602, 144;
	and.b32 	%r606, %r1900, 288;
	or.b32 	%r607, %r606, %r604;
	or.b32 	%r608, %r607, %r605;
	xor.b32 	%r609, %r608, %r601;
	shl.b32 	%r610, %r8, 3;
	or.b32 	%r24, %r609, %r610;
	xor.b32 	%r25, %r24, 16;
	xor.b32 	%r26, %r24, 1040;
	xor.b32 	%r27, %r24, 2064;
	xor.b32 	%r28, %r24, 3088;
	and.b32 	%r611, %r5, 3;
	mul.lo.s32 	%r612, %r611, 136;
	and.b32 	%r613, %r602, 544;
	xor.b32 	%r614, %r613, %r612;
	shl.b32 	%r615, %r5, 7;
	and.b32 	%r616, %r615, 3072;
	or.b32 	%r617, %r614, %r616;
	xor.b32 	%r29, %r617, %r16;
	xor.b32 	%r30, %r29, 16;
	xor.b32 	%r31, %r29, 32;
	xor.b32 	%r32, %r29, 48;
	xor.b32 	%r33, %r29, 64;
	xor.b32 	%r34, %r29, 80;
	xor.b32 	%r35, %r29, 96;
	xor.b32 	%r36, %r29, 112;
	add.s32 	%r1768, %r432, -96;
	.loc	1 120 22                        // gated_mlp.py:120:22
	shl.b64 	%rd6, %rd4, 1;
	mad.lo.s64 	%rd110, %rd5, 6, %rd18;
	shl.b64 	%rd8, %rd5, 1;
	shl.b64 	%rd9, %rd3, 1;
	shl.b64 	%rd10, %rd2, 1;
	shl.b64 	%rd11, %rd1, 1;
	mul.wide.u32 	%rd50, %r611, 16;
	add.s64 	%rd51, %rd50, %rd17;
	add.s64 	%rd109, %rd51, 192;
	mov.b32 	%r1899, 0;
	mov.b32 	%r1771, 0f00000000;
	mov.b32 	%r1770, 2;
	mov.b32 	%r1769, -1;
	shl.b32 	%r1615, %r25, 1;
	shl.b32 	%r1616, %r26, 1;
	shl.b32 	%r1617, %r27, 1;
	shl.b32 	%r1618, %r28, 1;
	shl.b32 	%r1622, %r30, 1;
	shl.b32 	%r1623, %r31, 1;
	shl.b32 	%r1624, %r32, 1;
	shl.b32 	%r1625, %r33, 1;
	shl.b32 	%r1626, %r34, 1;
	shl.b32 	%r1627, %r35, 1;
	shl.b32 	%r1628, %r36, 1;
	mov.b32 	%r1772, %r1771;
	mov.b32 	%r1773, %r1771;
	mov.b32 	%r1774, %r1771;
	mov.b32 	%r1775, %r1771;
	mov.b32 	%r1776, %r1771;
	mov.b32 	%r1777, %r1771;
	mov.b32 	%r1778, %r1771;
	mov.b32 	%r1779, %r1771;
	mov.b32 	%r1780, %r1771;
	mov.b32 	%r1781, %r1771;
	mov.b32 	%r1782, %r1771;
	mov.b32 	%r1783, %r1771;
	mov.b32 	%r1784, %r1771;
	mov.b32 	%r1785, %r1771;
	mov.b32 	%r1786, %r1771;
	mov.b32 	%r1787, %r1771;
	mov.b32 	%r1788, %r1771;
	mov.b32 	%r1789, %r1771;
	mov.b32 	%r1790, %r1771;
	mov.b32 	%r1791, %r1771;
	mov.b32 	%r1792, %r1771;
	mov.b32 	%r1793, %r1771;
	mov.b32 	%r1794, %r1771;
	mov.b32 	%r1795, %r1771;
	mov.b32 	%r1796, %r1771;
	mov.b32 	%r1797, %r1771;
	mov.b32 	%r1798, %r1771;
	mov.b32 	%r1799, %r1771;
	mov.b32 	%r1800, %r1771;
	mov.b32 	%r1801, %r1771;
	mov.b32 	%r1802, %r1771;
	mov.b32 	%r1803, %r1771;
	mov.b32 	%r1804, %r1771;
	mov.b32 	%r1805, %r1771;
	mov.b32 	%r1806, %r1771;
	mov.b32 	%r1807, %r1771;
	mov.b32 	%r1808, %r1771;
	mov.b32 	%r1809, %r1771;
	mov.b32 	%r1810, %r1771;
	mov.b32 	%r1811, %r1771;
	mov.b32 	%r1812, %r1771;
	mov.b32 	%r1813, %r1771;
	mov.b32 	%r1814, %r1771;
	mov.b32 	%r1815, %r1771;
	mov.b32 	%r1816, %r1771;
	mov.b32 	%r1817, %r1771;
	mov.b32 	%r1818, %r1771;
	mov.b32 	%r1819, %r1771;
	mov.b32 	%r1820, %r1771;
	mov.b32 	%r1821, %r1771;
	mov.b32 	%r1822, %r1771;
	mov.b32 	%r1823, %r1771;
	mov.b32 	%r1824, %r1771;
	mov.b32 	%r1825, %r1771;
	mov.b32 	%r1826, %r1771;
	mov.b32 	%r1827, %r1771;
	mov.b32 	%r1828, %r1771;
	mov.b32 	%r1829, %r1771;
	mov.b32 	%r1830, %r1771;
	mov.b32 	%r1831, %r1771;
	mov.b32 	%r1832, %r1771;
	mov.b32 	%r1833, %r1771;
	mov.b32 	%r1834, %r1771;
	mov.b32 	%r1835, %r1771;
	mov.b32 	%r1836, %r1771;
	mov.b32 	%r1837, %r1771;
	mov.b32 	%r1838, %r1771;
	mov.b32 	%r1839, %r1771;
	mov.b32 	%r1840, %r1771;
	mov.b32 	%r1841, %r1771;
	mov.b32 	%r1842, %r1771;
	mov.b32 	%r1843, %r1771;
	mov.b32 	%r1844, %r1771;
	mov.b32 	%r1845, %r1771;
	mov.b32 	%r1846, %r1771;
	mov.b32 	%r1847, %r1771;
	mov.b32 	%r1848, %r1771;
	mov.b32 	%r1849, %r1771;
	mov.b32 	%r1850, %r1771;
	mov.b32 	%r1851, %r1771;
	mov.b32 	%r1852, %r1771;
	mov.b32 	%r1853, %r1771;
	mov.b32 	%r1854, %r1771;
	mov.b32 	%r1855, %r1771;
	mov.b32 	%r1856, %r1771;
	mov.b32 	%r1857, %r1771;
	mov.b32 	%r1858, %r1771;
	mov.b32 	%r1859, %r1771;
	mov.b32 	%r1860, %r1771;
	mov.b32 	%r1861, %r1771;
	mov.b32 	%r1862, %r1771;
	mov.b32 	%r1863, %r1771;
	mov.b32 	%r1864, %r1771;
	mov.b32 	%r1865, %r1771;
	mov.b32 	%r1866, %r1771;
	mov.b32 	%r1867, %r1771;
	mov.b32 	%r1868, %r1771;
	mov.b32 	%r1869, %r1771;
	mov.b32 	%r1870, %r1771;
	mov.b32 	%r1871, %r1771;
	mov.b32 	%r1872, %r1771;
	mov.b32 	%r1873, %r1771;
	mov.b32 	%r1874, %r1771;
	mov.b32 	%r1875, %r1771;
	mov.b32 	%r1876, %r1771;
	mov.b32 	%r1877, %r1771;
	mov.b32 	%r1878, %r1771;
	mov.b32 	%r1879, %r1771;
	mov.b32 	%r1880, %r1771;
	mov.b32 	%r1881, %r1771;
	mov.b32 	%r1882, %r1771;
	mov.b32 	%r1883, %r1771;
	mov.b32 	%r1884, %r1771;
	mov.b32 	%r1885, %r1771;
	mov.b32 	%r1886, %r1771;
	mov.b32 	%r1887, %r1771;
	mov.b32 	%r1888, %r1771;
	mov.b32 	%r1889, %r1771;
	mov.b32 	%r1890, %r1771;
	mov.b32 	%r1891, %r1771;
	mov.b32 	%r1892, %r1771;
	mov.b32 	%r1893, %r1771;
	mov.b32 	%r1894, %r1771;
	mov.b32 	%r1895, %r1771;
	mov.b32 	%r1896, %r1771;
	mov.b32 	%r1897, %r1771;
	mov.b32 	%r1898, %r1771;
$L__BB0_3:                              // =>This Inner Loop Header: Depth=1
	setp.lt.s32 	%p19, %r1899, %r22;
	add.s32 	%r1610, %r1769, 1;
	setp.gt.s32 	%p20, %r1610, 2;
	selp.b32 	%r1769, 0, %r1610, %p20;
	.loc	1 123 20                        // gated_mlp.py:123:20
	cp.async.wait_group 	4;
	bar.sync 	0;
	shl.b32 	%r1611, %r1769, 13;
	add.s32 	%r1613, %r515, %r1611;
	shl.b32 	%r1614, %r24, 1;
	add.s32 	%r622, %r1613, %r1614;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r706, %r707, %r708, %r709}, [%r622];
	// end inline asm
	add.s32 	%r627, %r1613, %r1615;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1154, %r1155, %r1156, %r1157}, [%r627];
	// end inline asm
	add.s32 	%r632, %r622, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r818, %r819, %r820, %r821}, [%r632];
	// end inline asm
	add.s32 	%r637, %r1613, %r1616;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1266, %r1267, %r1268, %r1269}, [%r637];
	// end inline asm
	add.s32 	%r642, %r622, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r930, %r931, %r932, %r933}, [%r642];
	// end inline asm
	add.s32 	%r647, %r1613, %r1617;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1378, %r1379, %r1380, %r1381}, [%r647];
	// end inline asm
	add.s32 	%r652, %r622, 6144;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1042, %r1043, %r1044, %r1045}, [%r652];
	// end inline asm
	add.s32 	%r657, %r1613, %r1618;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1490, %r1491, %r1492, %r1493}, [%r657];
	// end inline asm
	.loc	1 124 20                        // gated_mlp.py:124:20
	add.s32 	%r1619, %r515, 24576;
	add.s32 	%r1620, %r1619, %r1611;
	shl.b32 	%r1621, %r29, 1;
	add.s32 	%r662, %r1620, %r1621;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r710, %r711, %r1158, %r1159}, [%r662];
	// end inline asm
	add.s32 	%r667, %r1620, %r1622;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r724, %r725, %r1172, %r1173}, [%r667];
	// end inline asm
	add.s32 	%r672, %r1620, %r1623;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r738, %r739, %r1186, %r1187}, [%r672];
	// end inline asm
	add.s32 	%r677, %r1620, %r1624;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r752, %r753, %r1200, %r1201}, [%r677];
	// end inline asm
	add.s32 	%r682, %r1620, %r1625;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r766, %r767, %r1214, %r1215}, [%r682];
	// end inline asm
	add.s32 	%r687, %r1620, %r1626;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r780, %r781, %r1228, %r1229}, [%r687];
	// end inline asm
	add.s32 	%r692, %r1620, %r1627;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r794, %r795, %r1242, %r1243}, [%r692];
	// end inline asm
	add.s32 	%r697, %r1620, %r1628;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r808, %r809, %r1256, %r1257}, [%r697];
	// end inline asm
	.loc	1 126 35                        // gated_mlp.py:126:35
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1771, %r1772, %r1773, %r1774 }, { %r706, %r707, %r708, %r709 }, { %r710, %r711 }, { %r1771, %r1772, %r1773, %r1774 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1775, %r1776, %r1777, %r1778 }, { %r706, %r707, %r708, %r709 }, { %r724, %r725 }, { %r1775, %r1776, %r1777, %r1778 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1779, %r1780, %r1781, %r1782 }, { %r706, %r707, %r708, %r709 }, { %r738, %r739 }, { %r1779, %r1780, %r1781, %r1782 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1783, %r1784, %r1785, %r1786 }, { %r706, %r707, %r708, %r709 }, { %r752, %r753 }, { %r1783, %r1784, %r1785, %r1786 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1787, %r1788, %r1789, %r1790 }, { %r706, %r707, %r708, %r709 }, { %r766, %r767 }, { %r1787, %r1788, %r1789, %r1790 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1791, %r1792, %r1793, %r1794 }, { %r706, %r707, %r708, %r709 }, { %r780, %r781 }, { %r1791, %r1792, %r1793, %r1794 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1795, %r1796, %r1797, %r1798 }, { %r706, %r707, %r708, %r709 }, { %r794, %r795 }, { %r1795, %r1796, %r1797, %r1798 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1799, %r1800, %r1801, %r1802 }, { %r706, %r707, %r708, %r709 }, { %r808, %r809 }, { %r1799, %r1800, %r1801, %r1802 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1803, %r1804, %r1805, %r1806 }, { %r818, %r819, %r820, %r821 }, { %r710, %r711 }, { %r1803, %r1804, %r1805, %r1806 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1807, %r1808, %r1809, %r1810 }, { %r818, %r819, %r820, %r821 }, { %r724, %r725 }, { %r1807, %r1808, %r1809, %r1810 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1811, %r1812, %r1813, %r1814 }, { %r818, %r819, %r820, %r821 }, { %r738, %r739 }, { %r1811, %r1812, %r1813, %r1814 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1815, %r1816, %r1817, %r1818 }, { %r818, %r819, %r820, %r821 }, { %r752, %r753 }, { %r1815, %r1816, %r1817, %r1818 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1819, %r1820, %r1821, %r1822 }, { %r818, %r819, %r820, %r821 }, { %r766, %r767 }, { %r1819, %r1820, %r1821, %r1822 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1823, %r1824, %r1825, %r1826 }, { %r818, %r819, %r820, %r821 }, { %r780, %r781 }, { %r1823, %r1824, %r1825, %r1826 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1827, %r1828, %r1829, %r1830 }, { %r818, %r819, %r820, %r821 }, { %r794, %r795 }, { %r1827, %r1828, %r1829, %r1830 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1831, %r1832, %r1833, %r1834 }, { %r818, %r819, %r820, %r821 }, { %r808, %r809 }, { %r1831, %r1832, %r1833, %r1834 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1835, %r1836, %r1837, %r1838 }, { %r930, %r931, %r932, %r933 }, { %r710, %r711 }, { %r1835, %r1836, %r1837, %r1838 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1839, %r1840, %r1841, %r1842 }, { %r930, %r931, %r932, %r933 }, { %r724, %r725 }, { %r1839, %r1840, %r1841, %r1842 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1843, %r1844, %r1845, %r1846 }, { %r930, %r931, %r932, %r933 }, { %r738, %r739 }, { %r1843, %r1844, %r1845, %r1846 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1847, %r1848, %r1849, %r1850 }, { %r930, %r931, %r932, %r933 }, { %r752, %r753 }, { %r1847, %r1848, %r1849, %r1850 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1851, %r1852, %r1853, %r1854 }, { %r930, %r931, %r932, %r933 }, { %r766, %r767 }, { %r1851, %r1852, %r1853, %r1854 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1855, %r1856, %r1857, %r1858 }, { %r930, %r931, %r932, %r933 }, { %r780, %r781 }, { %r1855, %r1856, %r1857, %r1858 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1859, %r1860, %r1861, %r1862 }, { %r930, %r931, %r932, %r933 }, { %r794, %r795 }, { %r1859, %r1860, %r1861, %r1862 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1863, %r1864, %r1865, %r1866 }, { %r930, %r931, %r932, %r933 }, { %r808, %r809 }, { %r1863, %r1864, %r1865, %r1866 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1867, %r1868, %r1869, %r1870 }, { %r1042, %r1043, %r1044, %r1045 }, { %r710, %r711 }, { %r1867, %r1868, %r1869, %r1870 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1871, %r1872, %r1873, %r1874 }, { %r1042, %r1043, %r1044, %r1045 }, { %r724, %r725 }, { %r1871, %r1872, %r1873, %r1874 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1875, %r1876, %r1877, %r1878 }, { %r1042, %r1043, %r1044, %r1045 }, { %r738, %r739 }, { %r1875, %r1876, %r1877, %r1878 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1879, %r1880, %r1881, %r1882 }, { %r1042, %r1043, %r1044, %r1045 }, { %r752, %r753 }, { %r1879, %r1880, %r1881, %r1882 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1883, %r1884, %r1885, %r1886 }, { %r1042, %r1043, %r1044, %r1045 }, { %r766, %r767 }, { %r1883, %r1884, %r1885, %r1886 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1887, %r1888, %r1889, %r1890 }, { %r1042, %r1043, %r1044, %r1045 }, { %r780, %r781 }, { %r1887, %r1888, %r1889, %r1890 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1891, %r1892, %r1893, %r1894 }, { %r1042, %r1043, %r1044, %r1045 }, { %r794, %r795 }, { %r1891, %r1892, %r1893, %r1894 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1895, %r1896, %r1897, %r1898 }, { %r1042, %r1043, %r1044, %r1045 }, { %r808, %r809 }, { %r1895, %r1896, %r1897, %r1898 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1771, %r1772, %r1773, %r1774 }, { %r1154, %r1155, %r1156, %r1157 }, { %r1158, %r1159 }, { %r1771, %r1772, %r1773, %r1774 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1775, %r1776, %r1777, %r1778 }, { %r1154, %r1155, %r1156, %r1157 }, { %r1172, %r1173 }, { %r1775, %r1776, %r1777, %r1778 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1779, %r1780, %r1781, %r1782 }, { %r1154, %r1155, %r1156, %r1157 }, { %r1186, %r1187 }, { %r1779, %r1780, %r1781, %r1782 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1783, %r1784, %r1785, %r1786 }, { %r1154, %r1155, %r1156, %r1157 }, { %r1200, %r1201 }, { %r1783, %r1784, %r1785, %r1786 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1787, %r1788, %r1789, %r1790 }, { %r1154, %r1155, %r1156, %r1157 }, { %r1214, %r1215 }, { %r1787, %r1788, %r1789, %r1790 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1791, %r1792, %r1793, %r1794 }, { %r1154, %r1155, %r1156, %r1157 }, { %r1228, %r1229 }, { %r1791, %r1792, %r1793, %r1794 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1795, %r1796, %r1797, %r1798 }, { %r1154, %r1155, %r1156, %r1157 }, { %r1242, %r1243 }, { %r1795, %r1796, %r1797, %r1798 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1799, %r1800, %r1801, %r1802 }, { %r1154, %r1155, %r1156, %r1157 }, { %r1256, %r1257 }, { %r1799, %r1800, %r1801, %r1802 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1803, %r1804, %r1805, %r1806 }, { %r1266, %r1267, %r1268, %r1269 }, { %r1158, %r1159 }, { %r1803, %r1804, %r1805, %r1806 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1807, %r1808, %r1809, %r1810 }, { %r1266, %r1267, %r1268, %r1269 }, { %r1172, %r1173 }, { %r1807, %r1808, %r1809, %r1810 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1811, %r1812, %r1813, %r1814 }, { %r1266, %r1267, %r1268, %r1269 }, { %r1186, %r1187 }, { %r1811, %r1812, %r1813, %r1814 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1815, %r1816, %r1817, %r1818 }, { %r1266, %r1267, %r1268, %r1269 }, { %r1200, %r1201 }, { %r1815, %r1816, %r1817, %r1818 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1819, %r1820, %r1821, %r1822 }, { %r1266, %r1267, %r1268, %r1269 }, { %r1214, %r1215 }, { %r1819, %r1820, %r1821, %r1822 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1823, %r1824, %r1825, %r1826 }, { %r1266, %r1267, %r1268, %r1269 }, { %r1228, %r1229 }, { %r1823, %r1824, %r1825, %r1826 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1827, %r1828, %r1829, %r1830 }, { %r1266, %r1267, %r1268, %r1269 }, { %r1242, %r1243 }, { %r1827, %r1828, %r1829, %r1830 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1831, %r1832, %r1833, %r1834 }, { %r1266, %r1267, %r1268, %r1269 }, { %r1256, %r1257 }, { %r1831, %r1832, %r1833, %r1834 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1835, %r1836, %r1837, %r1838 }, { %r1378, %r1379, %r1380, %r1381 }, { %r1158, %r1159 }, { %r1835, %r1836, %r1837, %r1838 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1839, %r1840, %r1841, %r1842 }, { %r1378, %r1379, %r1380, %r1381 }, { %r1172, %r1173 }, { %r1839, %r1840, %r1841, %r1842 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1843, %r1844, %r1845, %r1846 }, { %r1378, %r1379, %r1380, %r1381 }, { %r1186, %r1187 }, { %r1843, %r1844, %r1845, %r1846 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1847, %r1848, %r1849, %r1850 }, { %r1378, %r1379, %r1380, %r1381 }, { %r1200, %r1201 }, { %r1847, %r1848, %r1849, %r1850 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1851, %r1852, %r1853, %r1854 }, { %r1378, %r1379, %r1380, %r1381 }, { %r1214, %r1215 }, { %r1851, %r1852, %r1853, %r1854 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1855, %r1856, %r1857, %r1858 }, { %r1378, %r1379, %r1380, %r1381 }, { %r1228, %r1229 }, { %r1855, %r1856, %r1857, %r1858 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1859, %r1860, %r1861, %r1862 }, { %r1378, %r1379, %r1380, %r1381 }, { %r1242, %r1243 }, { %r1859, %r1860, %r1861, %r1862 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1863, %r1864, %r1865, %r1866 }, { %r1378, %r1379, %r1380, %r1381 }, { %r1256, %r1257 }, { %r1863, %r1864, %r1865, %r1866 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1867, %r1868, %r1869, %r1870 }, { %r1490, %r1491, %r1492, %r1493 }, { %r1158, %r1159 }, { %r1867, %r1868, %r1869, %r1870 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1871, %r1872, %r1873, %r1874 }, { %r1490, %r1491, %r1492, %r1493 }, { %r1172, %r1173 }, { %r1871, %r1872, %r1873, %r1874 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1875, %r1876, %r1877, %r1878 }, { %r1490, %r1491, %r1492, %r1493 }, { %r1186, %r1187 }, { %r1875, %r1876, %r1877, %r1878 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1879, %r1880, %r1881, %r1882 }, { %r1490, %r1491, %r1492, %r1493 }, { %r1200, %r1201 }, { %r1879, %r1880, %r1881, %r1882 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1883, %r1884, %r1885, %r1886 }, { %r1490, %r1491, %r1492, %r1493 }, { %r1214, %r1215 }, { %r1883, %r1884, %r1885, %r1886 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1887, %r1888, %r1889, %r1890 }, { %r1490, %r1491, %r1492, %r1493 }, { %r1228, %r1229 }, { %r1887, %r1888, %r1889, %r1890 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1891, %r1892, %r1893, %r1894 }, { %r1490, %r1491, %r1492, %r1493 }, { %r1242, %r1243 }, { %r1891, %r1892, %r1893, %r1894 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1895, %r1896, %r1897, %r1898 }, { %r1490, %r1491, %r1492, %r1493 }, { %r1256, %r1257 }, { %r1895, %r1896, %r1897, %r1898 };
	// end inline asm
	.loc	1 129 18                        // gated_mlp.py:129:18
	add.s64 	%rd56, %rd110, %rd11;
	add.s64 	%rd57, %rd110, %rd10;
	add.s64 	%rd58, %rd110, %rd9;
	.loc	1 120 22                        // gated_mlp.py:120:22
	add.s64 	%rd59, %rd110, %rd6;
	add.s32 	%r1629, %r1770, 1;
	setp.gt.s32 	%p21, %r1629, 2;
	selp.b32 	%r1770, 0, %r1629, %p21;
	.loc	1 123 51                        // gated_mlp.py:123:51
	setp.lt.s32 	%p22, %r7, %r1768;
	.loc	1 123 20                        // gated_mlp.py:123:20
	shl.b32 	%r1630, %r1770, 13;
	add.s32 	%r1631, %r515, %r1630;
	bar.sync 	0;
	add.s32 	%r1594, %r1631, %r514;
	add.s32 	%r1596, %r1594, 2048;
	add.s32 	%r1598, %r1594, 4096;
	add.s32 	%r1600, %r1594, 6144;
	selp.b32 	%r1633, 16, 0, %p22;
	selp.b32 	%r1597, %r1633, 0, %p19;
	// begin inline asm
	cp.async.cg.shared.global [ %r1594 + 0 ], [ %rd109 + 0 ], 0x10, %r1597;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r1596 + 0 ], [ %rd109 + 0 ], 0x10, %r1597;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r1598 + 0 ], [ %rd109 + 0 ], 0x10, %r1597;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r1600 + 0 ], [ %rd109 + 0 ], 0x10, %r1597;
	// end inline asm
	cp.async.commit_group;
	.loc	1 124 51                        // gated_mlp.py:124:51
	setp.lt.s32 	%p23, %r10, %r1768;
	setp.lt.s32 	%p24, %r11, %r1768;
	setp.lt.s32 	%p25, %r12, %r1768;
	setp.lt.s32 	%p26, %r13, %r1768;
	.loc	1 124 20                        // gated_mlp.py:124:20
	add.s32 	%r1634, %r1619, %r1630;
	add.s32 	%r1602, %r1634, %r519;
	add.s32 	%r1604, %r1602, 2048;
	add.s32 	%r1606, %r1602, 4096;
	add.s32 	%r1608, %r1602, 6144;
	selp.b32 	%r1636, 16, 0, %p23;
	selp.b32 	%r1603, %r1636, 0, %p19;
	// begin inline asm
	cp.async.cg.shared.global [ %r1602 + 0 ], [ %rd56 + 0 ], 0x10, %r1603;
	// end inline asm
	selp.b32 	%r1637, 16, 0, %p24;
	selp.b32 	%r1605, %r1637, 0, %p19;
	// begin inline asm
	cp.async.cg.shared.global [ %r1604 + 0 ], [ %rd57 + 0 ], 0x10, %r1605;
	// end inline asm
	selp.b32 	%r1638, 16, 0, %p25;
	selp.b32 	%r1607, %r1638, 0, %p19;
	// begin inline asm
	cp.async.cg.shared.global [ %r1606 + 0 ], [ %rd58 + 0 ], 0x10, %r1607;
	// end inline asm
	selp.b32 	%r1639, 16, 0, %p26;
	selp.b32 	%r1609, %r1639, 0, %p19;
	// begin inline asm
	cp.async.cg.shared.global [ %r1608 + 0 ], [ %rd59 + 0 ], 0x10, %r1609;
	// end inline asm
	cp.async.commit_group;
	.loc	1 120 22                        // gated_mlp.py:120:22
	add.s32 	%r1899, %r1899, 1;
	add.s64 	%rd110, %rd110, %rd8;
	add.s64 	%rd109, %rd109, 64;
	add.s32 	%r1768, %r1768, -32;
	setp.ne.s32 	%p27, %r15, %r1899;
	@%p27 bra 	$L__BB0_3;
// %bb.4:                               // %._crit_edge.loopexit
	.loc	1 134 23                        // gated_mlp.py:134:23
	cvt.rn.f16x2.f32 	%r1964, %r1898, %r1897;
	cvt.rn.f16x2.f32 	%r1963, %r1896, %r1895;
	cvt.rn.f16x2.f32 	%r1962, %r1894, %r1893;
	cvt.rn.f16x2.f32 	%r1961, %r1892, %r1891;
	cvt.rn.f16x2.f32 	%r1960, %r1890, %r1889;
	cvt.rn.f16x2.f32 	%r1959, %r1888, %r1887;
	cvt.rn.f16x2.f32 	%r1958, %r1886, %r1885;
	cvt.rn.f16x2.f32 	%r1957, %r1884, %r1883;
	cvt.rn.f16x2.f32 	%r1956, %r1882, %r1881;
	cvt.rn.f16x2.f32 	%r1955, %r1880, %r1879;
	cvt.rn.f16x2.f32 	%r1954, %r1878, %r1877;
	cvt.rn.f16x2.f32 	%r1953, %r1876, %r1875;
	cvt.rn.f16x2.f32 	%r1952, %r1874, %r1873;
	cvt.rn.f16x2.f32 	%r1951, %r1872, %r1871;
	cvt.rn.f16x2.f32 	%r1950, %r1870, %r1869;
	cvt.rn.f16x2.f32 	%r1949, %r1868, %r1867;
	cvt.rn.f16x2.f32 	%r1948, %r1866, %r1865;
	cvt.rn.f16x2.f32 	%r1947, %r1864, %r1863;
	cvt.rn.f16x2.f32 	%r1946, %r1862, %r1861;
	cvt.rn.f16x2.f32 	%r1945, %r1860, %r1859;
	cvt.rn.f16x2.f32 	%r1944, %r1858, %r1857;
	cvt.rn.f16x2.f32 	%r1943, %r1856, %r1855;
	cvt.rn.f16x2.f32 	%r1942, %r1854, %r1853;
	cvt.rn.f16x2.f32 	%r1941, %r1852, %r1851;
	cvt.rn.f16x2.f32 	%r1940, %r1850, %r1849;
	cvt.rn.f16x2.f32 	%r1939, %r1848, %r1847;
	cvt.rn.f16x2.f32 	%r1938, %r1846, %r1845;
	cvt.rn.f16x2.f32 	%r1937, %r1844, %r1843;
	cvt.rn.f16x2.f32 	%r1936, %r1842, %r1841;
	cvt.rn.f16x2.f32 	%r1935, %r1840, %r1839;
	cvt.rn.f16x2.f32 	%r1934, %r1838, %r1837;
	cvt.rn.f16x2.f32 	%r1933, %r1836, %r1835;
	cvt.rn.f16x2.f32 	%r1932, %r1834, %r1833;
	cvt.rn.f16x2.f32 	%r1931, %r1832, %r1831;
	cvt.rn.f16x2.f32 	%r1930, %r1830, %r1829;
	cvt.rn.f16x2.f32 	%r1929, %r1828, %r1827;
	cvt.rn.f16x2.f32 	%r1928, %r1826, %r1825;
	cvt.rn.f16x2.f32 	%r1927, %r1824, %r1823;
	cvt.rn.f16x2.f32 	%r1926, %r1822, %r1821;
	cvt.rn.f16x2.f32 	%r1925, %r1820, %r1819;
	cvt.rn.f16x2.f32 	%r1924, %r1818, %r1817;
	cvt.rn.f16x2.f32 	%r1923, %r1816, %r1815;
	cvt.rn.f16x2.f32 	%r1922, %r1814, %r1813;
	cvt.rn.f16x2.f32 	%r1921, %r1812, %r1811;
	cvt.rn.f16x2.f32 	%r1920, %r1810, %r1809;
	cvt.rn.f16x2.f32 	%r1919, %r1808, %r1807;
	cvt.rn.f16x2.f32 	%r1918, %r1806, %r1805;
	cvt.rn.f16x2.f32 	%r1917, %r1804, %r1803;
	cvt.rn.f16x2.f32 	%r1916, %r1802, %r1801;
	cvt.rn.f16x2.f32 	%r1915, %r1800, %r1799;
	cvt.rn.f16x2.f32 	%r1914, %r1798, %r1797;
	cvt.rn.f16x2.f32 	%r1913, %r1796, %r1795;
	cvt.rn.f16x2.f32 	%r1912, %r1794, %r1793;
	cvt.rn.f16x2.f32 	%r1911, %r1792, %r1791;
	cvt.rn.f16x2.f32 	%r1910, %r1790, %r1789;
	cvt.rn.f16x2.f32 	%r1909, %r1788, %r1787;
	cvt.rn.f16x2.f32 	%r1908, %r1786, %r1785;
	cvt.rn.f16x2.f32 	%r1907, %r1784, %r1783;
	cvt.rn.f16x2.f32 	%r1906, %r1782, %r1781;
	cvt.rn.f16x2.f32 	%r1905, %r1780, %r1779;
	cvt.rn.f16x2.f32 	%r1904, %r1778, %r1777;
	cvt.rn.f16x2.f32 	%r1903, %r1776, %r1775;
	cvt.rn.f16x2.f32 	%r1902, %r1774, %r1773;
	cvt.rn.f16x2.f32 	%r1901, %r1772, %r1771;
	bra.uni 	$L__BB0_5;
$L__BB0_1:                              // %.._crit_edge_crit_edge
	.loc	1 142 21                        // gated_mlp.py:142:21
	shl.b32 	%r1900, %r5, 5;
	mov.b32 	%r1901, 0;
	mov.b32 	%r1902, %r1901;
	mov.b32 	%r1903, %r1901;
	mov.b32 	%r1904, %r1901;
	mov.b32 	%r1905, %r1901;
	mov.b32 	%r1906, %r1901;
	mov.b32 	%r1907, %r1901;
	mov.b32 	%r1908, %r1901;
	mov.b32 	%r1909, %r1901;
	mov.b32 	%r1910, %r1901;
	mov.b32 	%r1911, %r1901;
	mov.b32 	%r1912, %r1901;
	mov.b32 	%r1913, %r1901;
	mov.b32 	%r1914, %r1901;
	mov.b32 	%r1915, %r1901;
	mov.b32 	%r1916, %r1901;
	mov.b32 	%r1917, %r1901;
	mov.b32 	%r1918, %r1901;
	mov.b32 	%r1919, %r1901;
	mov.b32 	%r1920, %r1901;
	mov.b32 	%r1921, %r1901;
	mov.b32 	%r1922, %r1901;
	mov.b32 	%r1923, %r1901;
	mov.b32 	%r1924, %r1901;
	mov.b32 	%r1925, %r1901;
	mov.b32 	%r1926, %r1901;
	mov.b32 	%r1927, %r1901;
	mov.b32 	%r1928, %r1901;
	mov.b32 	%r1929, %r1901;
	mov.b32 	%r1930, %r1901;
	mov.b32 	%r1931, %r1901;
	mov.b32 	%r1932, %r1901;
	mov.b32 	%r1933, %r1901;
	mov.b32 	%r1934, %r1901;
	mov.b32 	%r1935, %r1901;
	mov.b32 	%r1936, %r1901;
	mov.b32 	%r1937, %r1901;
	mov.b32 	%r1938, %r1901;
	mov.b32 	%r1939, %r1901;
	mov.b32 	%r1940, %r1901;
	mov.b32 	%r1941, %r1901;
	mov.b32 	%r1942, %r1901;
	mov.b32 	%r1943, %r1901;
	mov.b32 	%r1944, %r1901;
	mov.b32 	%r1945, %r1901;
	mov.b32 	%r1946, %r1901;
	mov.b32 	%r1947, %r1901;
	mov.b32 	%r1948, %r1901;
	mov.b32 	%r1949, %r1901;
	mov.b32 	%r1950, %r1901;
	mov.b32 	%r1951, %r1901;
	mov.b32 	%r1952, %r1901;
	mov.b32 	%r1953, %r1901;
	mov.b32 	%r1954, %r1901;
	mov.b32 	%r1955, %r1901;
	mov.b32 	%r1956, %r1901;
	mov.b32 	%r1957, %r1901;
	mov.b32 	%r1958, %r1901;
	mov.b32 	%r1959, %r1901;
	mov.b32 	%r1960, %r1901;
	mov.b32 	%r1961, %r1901;
	mov.b32 	%r1962, %r1901;
	mov.b32 	%r1963, %r1901;
	mov.b32 	%r1964, %r1901;
$L__BB0_5:                              // %._crit_edge
	.loc	1 98 54                         // gated_mlp.py:98:54
	mul.lo.s32 	%r1704, %r4, %r2;
	sub.s32 	%r1705, %r3, %r1704;
	.loc	1 98 27                         // gated_mlp.py:98:27
	add.s32 	%r1706, %r1705, %r1;
	.loc	1 120 22                        // gated_mlp.py:120:22
	cp.async.wait_group 	0;
	bar.sync 	0;
	.loc	1 138 22                        // gated_mlp.py:138:22
	shl.b32 	%r1707, %r1706, 7;
	.loc	1 138 37                        // gated_mlp.py:138:37
	or.b32 	%r1708, %r1707, %r10;
	or.b32 	%r1709, %r1707, %r11;
	or.b32 	%r1710, %r1707, %r12;
	or.b32 	%r1711, %r1707, %r13;
	or.b32 	%r1712, %r9, %r1707;
	or.b32 	%r1713, %r1712, 56;
	or.b32 	%r1714, %r1712, 120;
	.loc	1 140 33                        // gated_mlp.py:140:33
	mul.lo.s32 	%r1715, %r1708, %r433;
	mul.lo.s32 	%r1716, %r1709, %r433;
	mul.lo.s32 	%r1717, %r1710, %r433;
	mul.lo.s32 	%r1718, %r1711, %r433;
	shl.b32 	%r1719, %r433, 5;
	add.s32 	%r1720, %r1715, %r1719;
	shl.b32 	%r1721, %r433, 3;
	add.s32 	%r1722, %r1720, %r1721;
	add.s32 	%r1723, %r1722, %r1721;
	mul.lo.s32 	%r1724, %r1713, %r433;
	shl.b32 	%r1725, %r433, 4;
	add.s32 	%r1726, %r1723, %r1725;
	add.s32 	%r1727, %r1726, %r1721;
	add.s32 	%r1728, %r1727, %r1721;
	add.s32 	%r1729, %r1728, %r1721;
	add.s32 	%r1730, %r1729, %r1721;
	add.s32 	%r1731, %r1730, %r1721;
	add.s32 	%r1732, %r1731, %r1721;
	mul.lo.s32 	%r1733, %r1714, %r433;
	.loc	1 140 21                        // gated_mlp.py:140:21
	mul.wide.s32 	%rd76, %r1715, 2;
	add.s64 	%rd77, %rd19, %rd76;
	mul.wide.s32 	%rd78, %r1716, 2;
	add.s64 	%rd79, %rd19, %rd78;
	mul.wide.s32 	%rd80, %r1717, 2;
	add.s64 	%rd81, %rd19, %rd80;
	mul.wide.s32 	%rd82, %r1718, 2;
	add.s64 	%rd83, %rd19, %rd82;
	mul.wide.s32 	%rd84, %r1720, 2;
	add.s64 	%rd85, %rd19, %rd84;
	mul.wide.s32 	%rd86, %r1722, 2;
	add.s64 	%rd87, %rd19, %rd86;
	mul.wide.s32 	%rd88, %r1723, 2;
	add.s64 	%rd89, %rd19, %rd88;
	mul.wide.s32 	%rd90, %r1724, 2;
	add.s64 	%rd91, %rd19, %rd90;
	mul.wide.s32 	%rd92, %r1726, 2;
	add.s64 	%rd93, %rd19, %rd92;
	mul.wide.s32 	%rd94, %r1727, 2;
	add.s64 	%rd95, %rd19, %rd94;
	mul.wide.s32 	%rd96, %r1728, 2;
	add.s64 	%rd97, %rd19, %rd96;
	mul.wide.s32 	%rd98, %r1729, 2;
	add.s64 	%rd99, %rd19, %rd98;
	mul.wide.s32 	%rd100, %r1730, 2;
	add.s64 	%rd101, %rd19, %rd100;
	mul.wide.s32 	%rd102, %r1731, 2;
	add.s64 	%rd103, %rd19, %rd102;
	mul.wide.s32 	%rd104, %r1732, 2;
	add.s64 	%rd105, %rd19, %rd104;
	mul.wide.s32 	%rd106, %r1733, 2;
	add.s64 	%rd107, %rd19, %rd106;
	.loc	1 140 52                        // gated_mlp.py:140:52
	mul.wide.s32 	%rd108, %r14, 2;
	add.s64 	%rd60, %rd77, %rd108;
	add.s64 	%rd61, %rd79, %rd108;
	add.s64 	%rd62, %rd81, %rd108;
	add.s64 	%rd63, %rd83, %rd108;
	add.s64 	%rd64, %rd85, %rd108;
	add.s64 	%rd65, %rd87, %rd108;
	add.s64 	%rd66, %rd89, %rd108;
	add.s64 	%rd67, %rd91, %rd108;
	add.s64 	%rd68, %rd93, %rd108;
	add.s64 	%rd69, %rd95, %rd108;
	add.s64 	%rd70, %rd97, %rd108;
	add.s64 	%rd71, %rd99, %rd108;
	add.s64 	%rd72, %rd101, %rd108;
	add.s64 	%rd73, %rd103, %rd108;
	add.s64 	%rd74, %rd105, %rd108;
	add.s64 	%rd75, %rd107, %rd108;
	.loc	1 141 33                        // gated_mlp.py:141:33
	setp.lt.s32 	%p44, %r1708, 1;
	setp.lt.s32 	%p45, %r1709, 1;
	setp.lt.s32 	%p46, %r1710, 1;
	setp.lt.s32 	%p47, %r1711, 1;
	setp.lt.s32 	%p48, %r1707, 0;
	.loc	1 141 58                        // gated_mlp.py:141:58
	setp.lt.s32 	%p49, %r14, %r431;
	.loc	1 141 39                        // gated_mlp.py:141:39
	and.pred 	%p28, %p49, %p44;
	and.pred 	%p29, %p49, %p45;
	and.pred 	%p30, %p49, %p46;
	and.pred 	%p31, %p49, %p47;
	and.pred 	%p32, %p49, %p48;
	.loc	1 142 21                        // gated_mlp.py:142:21
	shl.b32 	%r1734, %r5, 1;
	and.b32 	%r1735, %r1734, 6;
	and.b32 	%r1736, %r1900, 2944;
	or.b32 	%r1737, %r1736, %r1735;
	or.b32 	%r1738, %r1737, %r16;
	and.b32 	%r1739, %r6, 1016;
	shr.u32 	%r1740, %r1736, 3;
	add.s32 	%r1742, %r515, %r1740;
	shl.b32 	%r1743, %r1738, 1;
	add.s32 	%r1744, %r1742, %r1743;
	st.shared.b32 	[%r1744], %r1901;
	or.b32 	%r1745, %r1736, 1024;
	shr.u32 	%r1746, %r1745, 3;
	add.s32 	%r1747, %r515, %r1746;
	add.s32 	%r1748, %r1747, %r1743;
	st.shared.b32 	[%r1748+2048], %r1902;
	st.shared.b32 	[%r1744+32], %r1903;
	st.shared.b32 	[%r1748+2080], %r1904;
	st.shared.b32 	[%r1744+64], %r1905;
	st.shared.b32 	[%r1748+2112], %r1906;
	st.shared.b32 	[%r1744+96], %r1907;
	st.shared.b32 	[%r1748+2144], %r1908;
	st.shared.b32 	[%r1744+128], %r1909;
	st.shared.b32 	[%r1748+2176], %r1910;
	st.shared.b32 	[%r1744+160], %r1911;
	st.shared.b32 	[%r1748+2208], %r1912;
	st.shared.b32 	[%r1744+192], %r1913;
	st.shared.b32 	[%r1748+2240], %r1914;
	st.shared.b32 	[%r1744+224], %r1915;
	st.shared.b32 	[%r1748+2272], %r1916;
	bar.sync 	0;
	shl.b32 	%r1749, %r19, 1;
	add.s32 	%r1750, %r515, %r1749;
	shl.b32 	%r1751, %r1739, 1;
	add.s32 	%r1752, %r1750, %r1751;
	ld.shared.v4.b32 	{%r1640, %r1641, %r1642, %r1643}, [%r1752];
	or.b32 	%r1753, %r1739, 1024;
	shr.u32 	%r1754, %r1753, 3;
	and.b32 	%r1755, %r1754, 240;
	add.s32 	%r1756, %r515, %r1755;
	add.s32 	%r1757, %r1756, %r1751;
	ld.shared.v4.b32 	{%r1644, %r1645, %r1646, %r1647}, [%r1757+2048];
	or.b32 	%r1758, %r1739, 2048;
	shr.u32 	%r1759, %r1758, 3;
	and.b32 	%r1760, %r1759, 368;
	add.s32 	%r1761, %r515, %r1760;
	add.s32 	%r1762, %r1761, %r1751;
	ld.shared.v4.b32 	{%r1648, %r1649, %r1650, %r1651}, [%r1762+4096];
	or.b32 	%r1763, %r1739, 3072;
	shr.u32 	%r1764, %r1763, 3;
	and.b32 	%r1765, %r1764, 496;
	add.s32 	%r1766, %r515, %r1765;
	add.s32 	%r1767, %r1766, %r1751;
	ld.shared.v4.b32 	{%r1652, %r1653, %r1654, %r1655}, [%r1767+6144];
	bar.sync 	0;
	st.shared.b32 	[%r1744], %r1917;
	st.shared.b32 	[%r1748+2048], %r1918;
	st.shared.b32 	[%r1744+32], %r1919;
	st.shared.b32 	[%r1748+2080], %r1920;
	st.shared.b32 	[%r1744+64], %r1921;
	st.shared.b32 	[%r1748+2112], %r1922;
	st.shared.b32 	[%r1744+96], %r1923;
	st.shared.b32 	[%r1748+2144], %r1924;
	st.shared.b32 	[%r1744+128], %r1925;
	st.shared.b32 	[%r1748+2176], %r1926;
	st.shared.b32 	[%r1744+160], %r1927;
	st.shared.b32 	[%r1748+2208], %r1928;
	st.shared.b32 	[%r1744+192], %r1929;
	st.shared.b32 	[%r1748+2240], %r1930;
	st.shared.b32 	[%r1744+224], %r1931;
	st.shared.b32 	[%r1748+2272], %r1932;
	bar.sync 	0;
	ld.shared.v4.b32 	{%r1656, %r1657, %r1658, %r1659}, [%r1752];
	ld.shared.v4.b32 	{%r1660, %r1661, %r1662, %r1663}, [%r1757+2048];
	ld.shared.v4.b32 	{%r1664, %r1665, %r1666, %r1667}, [%r1762+4096];
	ld.shared.v4.b32 	{%r1668, %r1669, %r1670, %r1671}, [%r1767+6144];
	bar.sync 	0;
	st.shared.b32 	[%r1744], %r1933;
	st.shared.b32 	[%r1748+2048], %r1934;
	st.shared.b32 	[%r1744+32], %r1935;
	st.shared.b32 	[%r1748+2080], %r1936;
	st.shared.b32 	[%r1744+64], %r1937;
	st.shared.b32 	[%r1748+2112], %r1938;
	st.shared.b32 	[%r1744+96], %r1939;
	st.shared.b32 	[%r1748+2144], %r1940;
	st.shared.b32 	[%r1744+128], %r1941;
	st.shared.b32 	[%r1748+2176], %r1942;
	st.shared.b32 	[%r1744+160], %r1943;
	st.shared.b32 	[%r1748+2208], %r1944;
	st.shared.b32 	[%r1744+192], %r1945;
	st.shared.b32 	[%r1748+2240], %r1946;
	st.shared.b32 	[%r1744+224], %r1947;
	st.shared.b32 	[%r1748+2272], %r1948;
	bar.sync 	0;
	ld.shared.v4.b32 	{%r1672, %r1673, %r1674, %r1675}, [%r1752];
	ld.shared.v4.b32 	{%r1676, %r1677, %r1678, %r1679}, [%r1757+2048];
	ld.shared.v4.b32 	{%r1680, %r1681, %r1682, %r1683}, [%r1762+4096];
	ld.shared.v4.b32 	{%r1684, %r1685, %r1686, %r1687}, [%r1767+6144];
	bar.sync 	0;
	st.shared.b32 	[%r1744], %r1949;
	st.shared.b32 	[%r1748+2048], %r1950;
	st.shared.b32 	[%r1744+32], %r1951;
	st.shared.b32 	[%r1748+2080], %r1952;
	st.shared.b32 	[%r1744+64], %r1953;
	st.shared.b32 	[%r1748+2112], %r1954;
	st.shared.b32 	[%r1744+96], %r1955;
	st.shared.b32 	[%r1748+2144], %r1956;
	st.shared.b32 	[%r1744+128], %r1957;
	st.shared.b32 	[%r1748+2176], %r1958;
	st.shared.b32 	[%r1744+160], %r1959;
	st.shared.b32 	[%r1748+2208], %r1960;
	st.shared.b32 	[%r1744+192], %r1961;
	st.shared.b32 	[%r1748+2240], %r1962;
	st.shared.b32 	[%r1744+224], %r1963;
	st.shared.b32 	[%r1748+2272], %r1964;
	bar.sync 	0;
	ld.shared.v4.b32 	{%r1688, %r1689, %r1690, %r1691}, [%r1752];
	ld.shared.v4.b32 	{%r1692, %r1693, %r1694, %r1695}, [%r1757+2048];
	ld.shared.v4.b32 	{%r1696, %r1697, %r1698, %r1699}, [%r1762+4096];
	ld.shared.v4.b32 	{%r1700, %r1701, %r1702, %r1703}, [%r1767+6144];
	// begin inline asm
	@%p28 st.global.v4.b32 [ %rd60 + 0 ], { %r1640, %r1641, %r1642, %r1643 };
	// end inline asm
	// begin inline asm
	@%p29 st.global.v4.b32 [ %rd61 + 0 ], { %r1644, %r1645, %r1646, %r1647 };
	// end inline asm
	// begin inline asm
	@%p30 st.global.v4.b32 [ %rd62 + 0 ], { %r1648, %r1649, %r1650, %r1651 };
	// end inline asm
	// begin inline asm
	@%p31 st.global.v4.b32 [ %rd63 + 0 ], { %r1652, %r1653, %r1654, %r1655 };
	// end inline asm
	// begin inline asm
	@%p32 st.global.v4.b32 [ %rd64 + 0 ], { %r1656, %r1657, %r1658, %r1659 };
	// end inline asm
	// begin inline asm
	@%p32 st.global.v4.b32 [ %rd65 + 0 ], { %r1660, %r1661, %r1662, %r1663 };
	// end inline asm
	// begin inline asm
	@%p32 st.global.v4.b32 [ %rd66 + 0 ], { %r1664, %r1665, %r1666, %r1667 };
	// end inline asm
	// begin inline asm
	@%p32 st.global.v4.b32 [ %rd67 + 0 ], { %r1668, %r1669, %r1670, %r1671 };
	// end inline asm
	// begin inline asm
	@%p32 st.global.v4.b32 [ %rd68 + 0 ], { %r1672, %r1673, %r1674, %r1675 };
	// end inline asm
	// begin inline asm
	@%p32 st.global.v4.b32 [ %rd69 + 0 ], { %r1676, %r1677, %r1678, %r1679 };
	// end inline asm
	// begin inline asm
	@%p32 st.global.v4.b32 [ %rd70 + 0 ], { %r1680, %r1681, %r1682, %r1683 };
	// end inline asm
	// begin inline asm
	@%p32 st.global.v4.b32 [ %rd71 + 0 ], { %r1684, %r1685, %r1686, %r1687 };
	// end inline asm
	// begin inline asm
	@%p32 st.global.v4.b32 [ %rd72 + 0 ], { %r1688, %r1689, %r1690, %r1691 };
	// end inline asm
	// begin inline asm
	@%p32 st.global.v4.b32 [ %rd73 + 0 ], { %r1692, %r1693, %r1694, %r1695 };
	// end inline asm
	// begin inline asm
	@%p32 st.global.v4.b32 [ %rd74 + 0 ], { %r1696, %r1697, %r1698, %r1699 };
	// end inline asm
	// begin inline asm
	@%p32 st.global.v4.b32 [ %rd75 + 0 ], { %r1700, %r1701, %r1702, %r1703 };
	// end inline asm
	.loc	1 142 4                         // gated_mlp.py:142:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/ubuntu/anjiang/PTX_dataset/triton_ptx/gated_mlp.py"
	.file	2 "/mnt/efs/anjiang/miniconda3/envs/ptx/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 165                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x9e DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 103                                 // DW_AT_name
.b8 97
.b8 116
.b8 101
.b8 100
.b8 95
.b8 109
.b8 108
.b8 112
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 117
.b8 98
.b8 117
.b8 110
.b8 116
.b8 117
.b8 47
.b8 97
.b8 110
.b8 106
.b8 105
.b8 97
.b8 110
.b8 103
.b8 47
.b8 80
.b8 84
.b8 88
.b8 95
.b8 100
.b8 97
.b8 116
.b8 97
.b8 115
.b8 101
.b8 116
.b8 47
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 116
.b8 120
.b8 0
.b8 2                                   // Abbrev [2] 0x52:0x10 DW_TAG_subprogram
.b8 109                                 // DW_AT_name
.b8 97
.b8 116
.b8 109
.b8 117
.b8 108
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x62:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 82                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x77:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 93                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x8f:0x18 DW_TAG_inlined_subroutine
.b32 82                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 120                                 // DW_AT_call_line
.b8 33                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
