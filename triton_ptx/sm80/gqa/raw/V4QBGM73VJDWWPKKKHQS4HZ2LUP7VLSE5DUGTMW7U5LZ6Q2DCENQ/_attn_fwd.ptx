//
// Generated by LLVM NVPTX Back-End
//

.version 8.7
.target sm_80
.address_size 64

	// .globl	_attn_fwd               // -- Begin function _attn_fwd
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @_attn_fwd
.visible .entry _attn_fwd(
	.param .u64 .ptr .global .align 1 _attn_fwd_param_0,
	.param .u64 .ptr .global .align 1 _attn_fwd_param_1,
	.param .u64 .ptr .global .align 1 _attn_fwd_param_2,
	.param .f32 _attn_fwd_param_3,
	.param .u64 .ptr .global .align 1 _attn_fwd_param_4,
	.param .u64 .ptr .global .align 1 _attn_fwd_param_5,
	.param .u32 _attn_fwd_param_6,
	.param .u32 _attn_fwd_param_7,
	.param .u32 _attn_fwd_param_8,
	.param .u32 _attn_fwd_param_9,
	.param .u32 _attn_fwd_param_10,
	.param .u32 _attn_fwd_param_11,
	.param .u32 _attn_fwd_param_12,
	.param .u32 _attn_fwd_param_13,
	.param .u32 _attn_fwd_param_14,
	.param .u32 _attn_fwd_param_15,
	.param .u32 _attn_fwd_param_16,
	.param .u32 _attn_fwd_param_17,
	.param .u32 _attn_fwd_param_18,
	.param .u64 .ptr .global .align 1 _attn_fwd_param_19
)
.reqntid 256
{
	.reg .pred 	%p<17>;
	.reg .b32 	%r<1939>;
	.reg .b64 	%rd<148>;
	.loc	1 114 0                         // gqa.py:114:0
$L__func_begin0:
	.loc	1 114 0                         // gqa.py:114:0

// %bb.0:
	ld.param.b32 	%r209, [_attn_fwd_param_17];
	ld.param.b64 	%rd20, [_attn_fwd_param_5];
	ld.param.b64 	%rd19, [_attn_fwd_param_4];
	ld.param.b64 	%rd33, [_attn_fwd_param_0];
	ld.param.b64 	%rd34, [_attn_fwd_param_1];
$L__tmp0:
	.loc	1 127 28                        // gqa.py:127:28
	mov.u32 	%r262, %ctaid.x;
	.loc	1 128 27                        // gqa.py:128:27
	mov.u32 	%r1, %ctaid.y;
	ld.param.b64 	%rd35, [_attn_fwd_param_2];
	ld.param.b32 	%r263, [_attn_fwd_param_3];
	ld.param.b32 	%r264, [_attn_fwd_param_18];
	.loc	1 129 22                        // gqa.py:129:22
	div.s32 	%r266, %r1, %r264;
	.loc	1 130 21                        // gqa.py:130:21
	mul.lo.s32 	%r267, %r266, %r264;
	sub.s32 	%r268, %r1, %r267;
	ld.param.b32 	%r269, [_attn_fwd_param_6];
	ld.param.s32 	%rd36, [_attn_fwd_param_7];
	ld.param.s32 	%rd37, [_attn_fwd_param_8];
	.loc	1 131 38                        // gqa.py:131:38
	mul.wide.s32 	%rd38, %r266, %r269;
	.loc	1 131 59                        // gqa.py:131:59
	cvt.u64.u32 	%rd39, %r268;
	ld.param.b32 	%r270, [_attn_fwd_param_11];
	.loc	1 131 50                        // gqa.py:131:50
	mad.lo.s64 	%rd1, %rd39, %rd36, %rd38;
	.loc	1 135 17                        // gqa.py:135:17
	shl.b64 	%rd40, %rd1, 1;
	add.s64 	%rd41, %rd33, %rd40;
	ld.param.b32 	%r271, [_attn_fwd_param_14];
	.loc	1 138 27                        // gqa.py:138:27
	shl.b32 	%r2, %r262, 8;
	.loc	1 140 8                         // gqa.py:140:8
	cvt.s64.s32 	%rd42, %r2;
	.loc	1 143 17                        // gqa.py:143:17
	add.s64 	%rd43, %rd35, %rd40;
	.loc	1 148 8                         // gqa.py:148:8
	cvt.s64.s32 	%rd44, %r271;
	.loc	1 151 17                        // gqa.py:151:17
	add.s64 	%rd45, %rd34, %rd40;
	.loc	1 156 8                         // gqa.py:156:8
	cvt.s64.s32 	%rd46, %r270;
	.loc	1 167 46                        // gqa.py:167:46
	mov.u32 	%r3, %tid.x;
	and.b32 	%r4, %r3, 16;
	shr.u32 	%r272, %r3, 3;
	bfe.u32 	%r273, %r3, 3, 5;
	or.b32 	%r274, %r273, 32;
	or.b32 	%r275, %r273, 64;
	or.b32 	%r276, %r272, 96;
	or.b32 	%r277, %r273, 128;
	or.b32 	%r278, %r273, 160;
	or.b32 	%r279, %r273, 192;
	or.b32 	%r280, %r272, 224;
	bfe.s32 	%r281, %r3, 2, 1;
	.loc	1 175 16                        // gqa.py:175:16
	mul.f32 	%r31, %r263, 0f3FB8AA3B;
	.loc	1 177 16                        // gqa.py:177:16
	cvt.u64.u32 	%rd47, %r273;
	cvt.u64.u32 	%rd48, %r274;
	cvt.u64.u32 	%rd49, %r275;
	cvt.u64.u32 	%rd50, %r276;
	cvt.u64.u32 	%rd51, %r277;
	cvt.u64.u32 	%rd52, %r278;
	cvt.u64.u32 	%rd53, %r279;
	cvt.u64.u32 	%rd54, %r280;
	or.b64 	%rd2, %rd47, %rd42;
	or.b64 	%rd3, %rd48, %rd42;
	or.b64 	%rd4, %rd49, %rd42;
	or.b64 	%rd5, %rd50, %rd42;
	or.b64 	%rd6, %rd51, %rd42;
	or.b64 	%rd7, %rd52, %rd42;
	or.b64 	%rd8, %rd53, %rd42;
	or.b64 	%rd9, %rd54, %rd42;
	mul.lo.s64 	%rd55, %rd2, %rd37;
	mul.lo.s64 	%rd56, %rd3, %rd37;
	mul.lo.s64 	%rd57, %rd4, %rd37;
	mul.lo.s64 	%rd58, %rd5, %rd37;
	mul.lo.s64 	%rd59, %rd6, %rd37;
	mul.lo.s64 	%rd60, %rd7, %rd37;
	mul.lo.s64 	%rd61, %rd8, %rd37;
	mul.lo.s64 	%rd62, %rd9, %rd37;
	shl.b32 	%r6, %r3, 3;
	and.b32 	%r282, %r6, 56;
	cvt.u64.u32 	%rd10, %r282;
	shl.b64 	%rd63, %rd55, 1;
	add.s64 	%rd64, %rd41, %rd63;
	mul.wide.u32 	%rd65, %r282, 2;
	add.s64 	%rd21, %rd64, %rd65;
	shl.b64 	%rd66, %rd56, 1;
	add.s64 	%rd67, %rd41, %rd66;
	add.s64 	%rd22, %rd67, %rd65;
	shl.b64 	%rd68, %rd57, 1;
	add.s64 	%rd69, %rd41, %rd68;
	add.s64 	%rd23, %rd69, %rd65;
	shl.b64 	%rd70, %rd58, 1;
	add.s64 	%rd71, %rd41, %rd70;
	add.s64 	%rd24, %rd71, %rd65;
	shl.b64 	%rd72, %rd59, 1;
	add.s64 	%rd73, %rd41, %rd72;
	add.s64 	%rd25, %rd73, %rd65;
	shl.b64 	%rd74, %rd60, 1;
	add.s64 	%rd75, %rd41, %rd74;
	add.s64 	%rd26, %rd75, %rd65;
	shl.b64 	%rd76, %rd61, 1;
	add.s64 	%rd77, %rd41, %rd76;
	add.s64 	%rd27, %rd77, %rd65;
	shl.b64 	%rd78, %rd62, 1;
	add.s64 	%rd79, %rd41, %rd78;
	add.s64 	%rd28, %rd79, %rd65;
	// begin inline asm
	mov.u32 %r210, 0x0;
	mov.u32 %r211, 0x0;
	mov.u32 %r212, 0x0;
	mov.u32 %r213, 0x0;
	ld.global.v4.b32 { %r210, %r211, %r212, %r213 }, [ %rd21 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r214, 0x0;
	mov.u32 %r215, 0x0;
	mov.u32 %r216, 0x0;
	mov.u32 %r217, 0x0;
	ld.global.v4.b32 { %r214, %r215, %r216, %r217 }, [ %rd22 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r218, 0x0;
	mov.u32 %r219, 0x0;
	mov.u32 %r220, 0x0;
	mov.u32 %r221, 0x0;
	ld.global.v4.b32 { %r218, %r219, %r220, %r221 }, [ %rd23 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r222, 0x0;
	mov.u32 %r223, 0x0;
	mov.u32 %r224, 0x0;
	mov.u32 %r225, 0x0;
	ld.global.v4.b32 { %r222, %r223, %r224, %r225 }, [ %rd24 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r226, 0x0;
	mov.u32 %r227, 0x0;
	mov.u32 %r228, 0x0;
	mov.u32 %r229, 0x0;
	ld.global.v4.b32 { %r226, %r227, %r228, %r229 }, [ %rd25 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r230, 0x0;
	mov.u32 %r231, 0x0;
	mov.u32 %r232, 0x0;
	mov.u32 %r233, 0x0;
	ld.global.v4.b32 { %r230, %r231, %r232, %r233 }, [ %rd26 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r234, 0x0;
	mov.u32 %r235, 0x0;
	mov.u32 %r236, 0x0;
	mov.u32 %r237, 0x0;
	ld.global.v4.b32 { %r234, %r235, %r236, %r237 }, [ %rd27 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r238, 0x0;
	mov.u32 %r239, 0x0;
	mov.u32 %r240, 0x0;
	mov.u32 %r241, 0x0;
	ld.global.v4.b32 { %r238, %r239, %r240, %r241 }, [ %rd28 + 0 ];
	// end inline asm
	xor.b32 	%r283, %r6, %r3;
	and.b32 	%r284, %r283, 56;
	shl.b32 	%r285, %r284, 1;
	shl.b32 	%r286, %r273, 7;
	or.b32 	%r287, %r286, %r285;
	mov.b32 	%r288, global_smem;
	add.s32 	%r289, %r288, %r287;
	st.shared.v4.b32 	[%r289], {%r210, %r211, %r212, %r213};
	add.s32 	%r290, %r288, %r285;
	add.s32 	%r291, %r290, %r286;
	st.shared.v4.b32 	[%r291+4096], {%r214, %r215, %r216, %r217};
	st.shared.v4.b32 	[%r291+8192], {%r218, %r219, %r220, %r221};
	st.shared.v4.b32 	[%r291+12288], {%r222, %r223, %r224, %r225};
	st.shared.v4.b32 	[%r291+16384], {%r226, %r227, %r228, %r229};
	st.shared.v4.b32 	[%r291+20480], {%r230, %r231, %r232, %r233};
	st.shared.v4.b32 	[%r291+24576], {%r234, %r235, %r236, %r237};
	st.shared.v4.b32 	[%r291+28672], {%r238, %r239, %r240, %r241};
$L__tmp1:
	.loc	1 47 20                         // gqa.py:47:20 @[ gqa.py:185:82 ]
	mul.lo.s64 	%rd80, %rd46, %rd47;
	shl.b64 	%rd81, %rd80, 1;
	add.s64 	%rd82, %rd45, %rd81;
	add.s64 	%rd29, %rd82, %rd65;
	add.s32 	%r242, %r289, 32768;
	mov.b32 	%r243, 16;
	// begin inline asm
	cp.async.cg.shared.global [ %r242 + 0 ], [ %rd29 + 0 ], 0x10, %r243;
	// end inline asm
	cp.async.commit_group;
	.loc	1 65 20                         // gqa.py:65:20 @[ gqa.py:185:82 ]
	mul.lo.s64 	%rd83, %rd44, %rd47;
	shl.b64 	%rd84, %rd83, 1;
	add.s64 	%rd85, %rd43, %rd84;
	add.s64 	%rd30, %rd85, %rd65;
	add.s32 	%r244, %r289, 40960;
	// begin inline asm
	cp.async.cg.shared.global [ %r244 + 0 ], [ %rd30 + 0 ], 0x10, %r243;
	// end inline asm
	cp.async.commit_group;
	.loc	1 47 20                         // gqa.py:47:20 @[ gqa.py:185:82 ]
	mul.wide.s32 	%rd86, %r270, 32;
	add.s64 	%rd87, %rd80, %rd86;
	shl.b64 	%rd88, %rd87, 1;
	add.s64 	%rd89, %rd45, %rd88;
	add.s64 	%rd31, %rd89, %rd65;
	bar.sync 	0;
	add.s32 	%r246, %r289, 36864;
	// begin inline asm
	cp.async.cg.shared.global [ %r246 + 0 ], [ %rd31 + 0 ], 0x10, %r243;
	// end inline asm
	cp.async.commit_group;
	.loc	1 65 20                         // gqa.py:65:20 @[ gqa.py:185:82 ]
	mul.wide.s32 	%rd90, %r271, 32;
	add.s64 	%rd91, %rd83, %rd90;
	shl.b64 	%rd92, %rd91, 1;
	add.s64 	%rd93, %rd43, %rd92;
	add.s64 	%rd32, %rd93, %rd65;
	add.s32 	%r248, %r289, 45056;
	// begin inline asm
	cp.async.cg.shared.global [ %r248 + 0 ], [ %rd32 + 0 ], 0x10, %r243;
	// end inline asm
	cp.async.commit_group;
	and.b32 	%r292, %r3, 3;
	mul.lo.s32 	%r293, %r292, 72;
	and.b32 	%r294, %r281, 288;
	xor.b32 	%r295, %r294, %r293;
	shl.b32 	%r296, %r3, 6;
	and.b32 	%r297, %r296, 512;
	or.b32 	%r298, %r295, %r297;
	shr.u32 	%r299, %r4, 1;
	xor.b32 	%r300, %r298, %r299;
	shl.b32 	%r9, %r3, 5;
	and.b32 	%r301, %r9, 1024;
	or.b32 	%r302, %r300, %r301;
	and.b32 	%r303, %r9, 6144;
	or.b32 	%r304, %r302, %r303;
	shl.b32 	%r305, %r304, 1;
	add.s32 	%r327, %r288, %r305;
	xor.b32 	%r306, %r304, 16;
	shl.b32 	%r307, %r306, 1;
	add.s32 	%r332, %r288, %r307;
	xor.b32 	%r308, %r304, 32;
	shl.b32 	%r309, %r308, 1;
	add.s32 	%r337, %r288, %r309;
	xor.b32 	%r310, %r304, 48;
	shl.b32 	%r311, %r310, 1;
	add.s32 	%r342, %r288, %r311;
	xor.b32 	%r312, %r304, 8192;
	shl.b32 	%r313, %r312, 1;
	add.s32 	%r347, %r288, %r313;
	xor.b32 	%r314, %r304, 8208;
	shl.b32 	%r315, %r314, 1;
	add.s32 	%r352, %r288, %r315;
	xor.b32 	%r316, %r304, 8224;
	shl.b32 	%r317, %r316, 1;
	add.s32 	%r357, %r288, %r317;
	xor.b32 	%r318, %r304, 8240;
	shl.b32 	%r319, %r318, 1;
	add.s32 	%r362, %r288, %r319;
	and.b32 	%r320, %r3, 24;
	xor.b32 	%r18, %r295, %r320;
	xor.b32 	%r19, %r18, 32;
	xor.b32 	%r20, %r18, 544;
	xor.b32 	%r21, %r18, 1056;
	xor.b32 	%r22, %r18, 1568;
	and.b32 	%r321, %r296, 1536;
	or.b32 	%r23, %r295, %r321;
	xor.b32 	%r24, %r23, 8;
	xor.b32 	%r25, %r23, 16;
	xor.b32 	%r26, %r23, 24;
	xor.b32 	%r27, %r23, 32;
	xor.b32 	%r28, %r23, 40;
	xor.b32 	%r29, %r23, 48;
	xor.b32 	%r30, %r23, 56;
	.loc	1 44 33                         // gqa.py:44:33 @[ gqa.py:185:82 ]
	or.b64 	%rd94, %rd47, 64;
	mul.lo.s64 	%rd95, %rd94, %rd44;
	shl.b64 	%rd96, %rd95, 1;
	and.b32 	%r322, %r3, 7;
	mul.wide.u32 	%rd97, %r322, 16;
	add.s64 	%rd98, %rd96, %rd97;
	add.s64 	%rd99, %rd98, %rd40;
	add.s64 	%rd147, %rd35, %rd99;
	mul.wide.s32 	%rd12, %r271, 64;
	mul.lo.s64 	%rd100, %rd94, %rd46;
	shl.b64 	%rd101, %rd100, 1;
	add.s64 	%rd102, %rd101, %rd97;
	add.s64 	%rd103, %rd102, %rd40;
	add.s64 	%rd146, %rd34, %rd103;
	mul.wide.s32 	%rd14, %r270, 64;
	mov.b32 	%r1931, 0f3F800000;
	mov.b32 	%r1927, 0fFF800000;
	mov.b32 	%r1863, 0f00000000;
	mov.b32 	%r1862, 1;
	mov.b32 	%r1861, -1;
	mov.b32 	%r1860, -32;
	shl.b32 	%r1349, %r19, 1;
	shl.b32 	%r1350, %r20, 1;
	shl.b32 	%r1351, %r21, 1;
	shl.b32 	%r1352, %r22, 1;
	shl.b32 	%r1523, %r24, 1;
	shl.b32 	%r1524, %r25, 1;
	shl.b32 	%r1525, %r26, 1;
	shl.b32 	%r1526, %r27, 1;
	shl.b32 	%r1527, %r28, 1;
	shl.b32 	%r1528, %r29, 1;
	shl.b32 	%r1529, %r30, 1;
	mov.b32 	%r1864, %r1863;
	mov.b32 	%r1865, %r1863;
	mov.b32 	%r1866, %r1863;
	mov.b32 	%r1867, %r1863;
	mov.b32 	%r1868, %r1863;
	mov.b32 	%r1869, %r1863;
	mov.b32 	%r1870, %r1863;
	mov.b32 	%r1871, %r1863;
	mov.b32 	%r1872, %r1863;
	mov.b32 	%r1873, %r1863;
	mov.b32 	%r1874, %r1863;
	mov.b32 	%r1875, %r1863;
	mov.b32 	%r1876, %r1863;
	mov.b32 	%r1877, %r1863;
	mov.b32 	%r1878, %r1863;
	mov.b32 	%r1879, %r1863;
	mov.b32 	%r1880, %r1863;
	mov.b32 	%r1881, %r1863;
	mov.b32 	%r1882, %r1863;
	mov.b32 	%r1883, %r1863;
	mov.b32 	%r1884, %r1863;
	mov.b32 	%r1885, %r1863;
	mov.b32 	%r1886, %r1863;
	mov.b32 	%r1887, %r1863;
	mov.b32 	%r1888, %r1863;
	mov.b32 	%r1889, %r1863;
	mov.b32 	%r1890, %r1863;
	mov.b32 	%r1891, %r1863;
	mov.b32 	%r1892, %r1863;
	mov.b32 	%r1893, %r1863;
	mov.b32 	%r1894, %r1863;
	mov.b32 	%r1895, %r1863;
	mov.b32 	%r1896, %r1863;
	mov.b32 	%r1897, %r1863;
	mov.b32 	%r1898, %r1863;
	mov.b32 	%r1899, %r1863;
	mov.b32 	%r1900, %r1863;
	mov.b32 	%r1901, %r1863;
	mov.b32 	%r1902, %r1863;
	mov.b32 	%r1903, %r1863;
	mov.b32 	%r1904, %r1863;
	mov.b32 	%r1905, %r1863;
	mov.b32 	%r1906, %r1863;
	mov.b32 	%r1907, %r1863;
	mov.b32 	%r1908, %r1863;
	mov.b32 	%r1909, %r1863;
	mov.b32 	%r1910, %r1863;
	mov.b32 	%r1911, %r1863;
	mov.b32 	%r1912, %r1863;
	mov.b32 	%r1913, %r1863;
	mov.b32 	%r1914, %r1863;
	mov.b32 	%r1915, %r1863;
	mov.b32 	%r1916, %r1863;
	mov.b32 	%r1917, %r1863;
	mov.b32 	%r1918, %r1863;
	mov.b32 	%r1919, %r1863;
	mov.b32 	%r1920, %r1863;
	mov.b32 	%r1921, %r1863;
	mov.b32 	%r1922, %r1863;
	mov.b32 	%r1923, %r1863;
	mov.b32 	%r1924, %r1863;
	mov.b32 	%r1925, %r1863;
	mov.b32 	%r1926, %r1863;
	mov.b32 	%r1928, %r1927;
	mov.b32 	%r1929, %r1927;
	mov.b32 	%r1930, %r1927;
	mov.b32 	%r1932, %r1931;
	mov.b32 	%r1933, %r1931;
	mov.b32 	%r1934, %r1931;
$L__BB0_1:                              // %__nv_exp2f.exit
                                        // =>This Inner Loop Header: Depth=1
	add.s32 	%r1860, %r1860, 32;
	setp.lt.u32 	%p1, %r1860, 4032;
	add.s32 	%r1343, %r1861, 1;
	setp.gt.s32 	%p2, %r1343, 1;
	selp.b32 	%r1861, 0, %r1343, %p2;
	.loc	1 47 20                         // gqa.py:47:20 @[ gqa.py:185:82 ]
	cp.async.wait_group 	2;
	bar.sync 	0;
	shl.b32 	%r1344, %r1861, 12;
	add.s32 	%r1346, %r288, %r1344;
	add.s32 	%r1347, %r1346, 32768;
$L__tmp2:
	.loc	1 177 16                        // gqa.py:177:16
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r411, %r412, %r413, %r414}, [%r327];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r523, %r524, %r525, %r526}, [%r332];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r635, %r636, %r637, %r638}, [%r337];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r747, %r748, %r749, %r750}, [%r342];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r467, %r468, %r469, %r470}, [%r347];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r579, %r580, %r581, %r582}, [%r352];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r691, %r692, %r693, %r694}, [%r357];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r803, %r804, %r805, %r806}, [%r362];
	// end inline asm
$L__tmp3:
	.loc	1 47 20                         // gqa.py:47:20 @[ gqa.py:185:82 ]
	shl.b32 	%r1348, %r18, 1;
	add.s32 	%r367, %r1347, %r1348;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r415, %r416, %r527, %r528}, [%r367];
	// end inline asm
	add.s32 	%r372, %r1347, %r1349;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r639, %r640, %r751, %r752}, [%r372];
	// end inline asm
	add.s32 	%r377, %r367, 1024;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r429, %r430, %r541, %r542}, [%r377];
	// end inline asm
	add.s32 	%r382, %r1347, %r1350;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r653, %r654, %r765, %r766}, [%r382];
	// end inline asm
	add.s32 	%r387, %r367, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r443, %r444, %r555, %r556}, [%r387];
	// end inline asm
	add.s32 	%r392, %r1347, %r1351;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r667, %r668, %r779, %r780}, [%r392];
	// end inline asm
	add.s32 	%r397, %r367, 3072;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r457, %r458, %r569, %r570}, [%r397];
	// end inline asm
	add.s32 	%r402, %r1347, %r1352;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r681, %r682, %r793, %r794}, [%r402];
	// end inline asm
	mov.b32 	%r613, 0;
	.loc	1 48 23                         // gqa.py:48:23 @[ gqa.py:185:82 ]
	mov.b32 	%r515, %r613;
	mov.b32 	%r516, %r613;
	mov.b32 	%r517, %r613;
	mov.b32 	%r518, %r613;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r515, %r516, %r517, %r518 }, { %r411, %r412, %r413, %r414 }, { %r415, %r416 }, { %r515, %r516, %r517, %r518 };
	// end inline asm
	mov.b32 	%r529, %r613;
	mov.b32 	%r530, %r613;
	mov.b32 	%r531, %r613;
	mov.b32 	%r532, %r613;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r529, %r530, %r531, %r532 }, { %r411, %r412, %r413, %r414 }, { %r429, %r430 }, { %r529, %r530, %r531, %r532 };
	// end inline asm
	mov.b32 	%r543, %r613;
	mov.b32 	%r544, %r613;
	mov.b32 	%r545, %r613;
	mov.b32 	%r546, %r613;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r543, %r544, %r545, %r546 }, { %r411, %r412, %r413, %r414 }, { %r443, %r444 }, { %r543, %r544, %r545, %r546 };
	// end inline asm
	mov.b32 	%r557, %r613;
	mov.b32 	%r558, %r613;
	mov.b32 	%r559, %r613;
	mov.b32 	%r560, %r613;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r557, %r558, %r559, %r560 }, { %r411, %r412, %r413, %r414 }, { %r457, %r458 }, { %r557, %r558, %r559, %r560 };
	// end inline asm
	mov.b32 	%r571, %r613;
	mov.b32 	%r572, %r613;
	mov.b32 	%r573, %r613;
	mov.b32 	%r574, %r613;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r571, %r572, %r573, %r574 }, { %r467, %r468, %r469, %r470 }, { %r415, %r416 }, { %r571, %r572, %r573, %r574 };
	// end inline asm
	mov.b32 	%r585, %r613;
	mov.b32 	%r586, %r613;
	mov.b32 	%r587, %r613;
	mov.b32 	%r588, %r613;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r585, %r586, %r587, %r588 }, { %r467, %r468, %r469, %r470 }, { %r429, %r430 }, { %r585, %r586, %r587, %r588 };
	// end inline asm
	mov.b32 	%r599, %r613;
	mov.b32 	%r600, %r613;
	mov.b32 	%r601, %r613;
	mov.b32 	%r602, %r613;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r599, %r600, %r601, %r602 }, { %r467, %r468, %r469, %r470 }, { %r443, %r444 }, { %r599, %r600, %r601, %r602 };
	// end inline asm
	mov.b32 	%r614, %r613;
	mov.b32 	%r615, %r613;
	mov.b32 	%r616, %r613;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r613, %r614, %r615, %r616 }, { %r467, %r468, %r469, %r470 }, { %r457, %r458 }, { %r613, %r614, %r615, %r616 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r515, %r516, %r517, %r518 }, { %r523, %r524, %r525, %r526 }, { %r527, %r528 }, { %r515, %r516, %r517, %r518 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r529, %r530, %r531, %r532 }, { %r523, %r524, %r525, %r526 }, { %r541, %r542 }, { %r529, %r530, %r531, %r532 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r543, %r544, %r545, %r546 }, { %r523, %r524, %r525, %r526 }, { %r555, %r556 }, { %r543, %r544, %r545, %r546 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r557, %r558, %r559, %r560 }, { %r523, %r524, %r525, %r526 }, { %r569, %r570 }, { %r557, %r558, %r559, %r560 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r571, %r572, %r573, %r574 }, { %r579, %r580, %r581, %r582 }, { %r527, %r528 }, { %r571, %r572, %r573, %r574 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r585, %r586, %r587, %r588 }, { %r579, %r580, %r581, %r582 }, { %r541, %r542 }, { %r585, %r586, %r587, %r588 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r599, %r600, %r601, %r602 }, { %r579, %r580, %r581, %r582 }, { %r555, %r556 }, { %r599, %r600, %r601, %r602 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r613, %r614, %r615, %r616 }, { %r579, %r580, %r581, %r582 }, { %r569, %r570 }, { %r613, %r614, %r615, %r616 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r515, %r516, %r517, %r518 }, { %r635, %r636, %r637, %r638 }, { %r639, %r640 }, { %r515, %r516, %r517, %r518 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r529, %r530, %r531, %r532 }, { %r635, %r636, %r637, %r638 }, { %r653, %r654 }, { %r529, %r530, %r531, %r532 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r543, %r544, %r545, %r546 }, { %r635, %r636, %r637, %r638 }, { %r667, %r668 }, { %r543, %r544, %r545, %r546 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r557, %r558, %r559, %r560 }, { %r635, %r636, %r637, %r638 }, { %r681, %r682 }, { %r557, %r558, %r559, %r560 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r571, %r572, %r573, %r574 }, { %r691, %r692, %r693, %r694 }, { %r639, %r640 }, { %r571, %r572, %r573, %r574 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r585, %r586, %r587, %r588 }, { %r691, %r692, %r693, %r694 }, { %r653, %r654 }, { %r585, %r586, %r587, %r588 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r599, %r600, %r601, %r602 }, { %r691, %r692, %r693, %r694 }, { %r667, %r668 }, { %r599, %r600, %r601, %r602 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r613, %r614, %r615, %r616 }, { %r691, %r692, %r693, %r694 }, { %r681, %r682 }, { %r613, %r614, %r615, %r616 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r515, %r516, %r517, %r518 }, { %r747, %r748, %r749, %r750 }, { %r751, %r752 }, { %r515, %r516, %r517, %r518 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r529, %r530, %r531, %r532 }, { %r747, %r748, %r749, %r750 }, { %r765, %r766 }, { %r529, %r530, %r531, %r532 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r543, %r544, %r545, %r546 }, { %r747, %r748, %r749, %r750 }, { %r779, %r780 }, { %r543, %r544, %r545, %r546 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r557, %r558, %r559, %r560 }, { %r747, %r748, %r749, %r750 }, { %r793, %r794 }, { %r557, %r558, %r559, %r560 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r571, %r572, %r573, %r574 }, { %r803, %r804, %r805, %r806 }, { %r751, %r752 }, { %r571, %r572, %r573, %r574 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r585, %r586, %r587, %r588 }, { %r803, %r804, %r805, %r806 }, { %r765, %r766 }, { %r585, %r586, %r587, %r588 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r599, %r600, %r601, %r602 }, { %r803, %r804, %r805, %r806 }, { %r779, %r780 }, { %r599, %r600, %r601, %r602 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r613, %r614, %r615, %r616 }, { %r803, %r804, %r805, %r806 }, { %r793, %r794 }, { %r613, %r614, %r615, %r616 };
	// end inline asm
	.loc	2 167 27                        // standard.py:167:27 @[ gqa.py:185:82 ]
	max.f32 	%r1353, %r515, %r516;
	max.f32 	%r1354, %r517, %r518;
	max.f32 	%r1355, %r1353, %r529;
	max.f32 	%r1356, %r1355, %r530;
	max.f32 	%r1357, %r1354, %r531;
	max.f32 	%r1358, %r1357, %r532;
	max.f32 	%r1359, %r1356, %r543;
	max.f32 	%r1360, %r1359, %r544;
	max.f32 	%r1361, %r1358, %r545;
	max.f32 	%r1362, %r1361, %r546;
	max.f32 	%r1363, %r1360, %r557;
	max.f32 	%r1364, %r1363, %r558;
	max.f32 	%r1365, %r1362, %r559;
	max.f32 	%r1366, %r1365, %r560;
	max.f32 	%r1367, %r571, %r572;
	max.f32 	%r1368, %r573, %r574;
	max.f32 	%r1369, %r1367, %r585;
	max.f32 	%r1370, %r1369, %r586;
	max.f32 	%r1371, %r1368, %r587;
	max.f32 	%r1372, %r1371, %r588;
	max.f32 	%r1373, %r1370, %r599;
	max.f32 	%r1374, %r1373, %r600;
	max.f32 	%r1375, %r1372, %r601;
	max.f32 	%r1376, %r1375, %r602;
	max.f32 	%r1377, %r1374, %r613;
	max.f32 	%r1378, %r1377, %r614;
	max.f32 	%r1379, %r1376, %r615;
	max.f32 	%r1380, %r1379, %r616;
	.loc	2 188 40                        // standard.py:188:40 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1381, %r1364, 2, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ gqa.py:185:82 ]
	max.f32 	%r1382, %r1364, %r1381;
	.loc	2 188 40                        // standard.py:188:40 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1383, %r1382, 1, 31, -1;
	shfl.sync.bfly.b32 	%r1384, %r1366, 2, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ gqa.py:185:82 ]
	max.f32 	%r1385, %r1366, %r1384;
	.loc	2 188 40                        // standard.py:188:40 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1386, %r1385, 1, 31, -1;
	shfl.sync.bfly.b32 	%r1387, %r1378, 2, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ gqa.py:185:82 ]
	max.f32 	%r1388, %r1378, %r1387;
	.loc	2 188 40                        // standard.py:188:40 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1389, %r1388, 1, 31, -1;
	shfl.sync.bfly.b32 	%r1390, %r1380, 2, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ gqa.py:185:82 ]
	max.f32 	%r1391, %r1380, %r1390;
	.loc	2 188 40                        // standard.py:188:40 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1392, %r1391, 1, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ gqa.py:185:82 ]
	max.f32 	%r1393, %r1391, %r1392;
	max.f32 	%r1394, %r1388, %r1389;
	max.f32 	%r1395, %r1385, %r1386;
	max.f32 	%r1396, %r1382, %r1383;
	.loc	1 55 51                         // gqa.py:55:51 @[ gqa.py:185:82 ]
	mul.f32 	%r1397, %r31, %r1396;
	mul.f32 	%r1398, %r31, %r1395;
	mul.f32 	%r1399, %r31, %r1394;
	mul.f32 	%r1400, %r31, %r1393;
	.loc	1 55 35                         // gqa.py:55:35 @[ gqa.py:185:82 ]
	max.f32 	%r115, %r1930, %r1400;
	max.f32 	%r114, %r1929, %r1399;
	max.f32 	%r113, %r1928, %r1398;
	max.f32 	%r112, %r1927, %r1397;
	.loc	1 56 33                         // gqa.py:56:33 @[ gqa.py:185:82 ]
	neg.f32 	%r1401, %r112;
	fma.rn.f32 	%r1402, %r31, %r515, %r1401;
	fma.rn.f32 	%r1403, %r31, %r516, %r1401;
	neg.f32 	%r1404, %r113;
	fma.rn.f32 	%r1405, %r31, %r517, %r1404;
	fma.rn.f32 	%r1406, %r31, %r518, %r1404;
	fma.rn.f32 	%r1407, %r31, %r529, %r1401;
	fma.rn.f32 	%r1408, %r31, %r530, %r1401;
	fma.rn.f32 	%r1409, %r31, %r531, %r1404;
	fma.rn.f32 	%r1410, %r31, %r532, %r1404;
	fma.rn.f32 	%r1411, %r31, %r543, %r1401;
	fma.rn.f32 	%r1412, %r31, %r544, %r1401;
	fma.rn.f32 	%r1413, %r31, %r545, %r1404;
	fma.rn.f32 	%r1414, %r31, %r546, %r1404;
	fma.rn.f32 	%r1415, %r31, %r557, %r1401;
	fma.rn.f32 	%r1416, %r31, %r558, %r1401;
	fma.rn.f32 	%r1417, %r31, %r559, %r1404;
	fma.rn.f32 	%r1418, %r31, %r560, %r1404;
	neg.f32 	%r1419, %r114;
	fma.rn.f32 	%r1420, %r31, %r571, %r1419;
	fma.rn.f32 	%r1421, %r31, %r572, %r1419;
	neg.f32 	%r1422, %r115;
	fma.rn.f32 	%r1423, %r31, %r573, %r1422;
	fma.rn.f32 	%r1424, %r31, %r574, %r1422;
	fma.rn.f32 	%r1425, %r31, %r585, %r1419;
	fma.rn.f32 	%r1426, %r31, %r586, %r1419;
	fma.rn.f32 	%r1427, %r31, %r587, %r1422;
	fma.rn.f32 	%r1428, %r31, %r588, %r1422;
	fma.rn.f32 	%r1429, %r31, %r599, %r1419;
	fma.rn.f32 	%r1430, %r31, %r600, %r1419;
	fma.rn.f32 	%r1431, %r31, %r601, %r1422;
	fma.rn.f32 	%r1432, %r31, %r602, %r1422;
	fma.rn.f32 	%r1433, %r31, %r613, %r1419;
	fma.rn.f32 	%r1434, %r31, %r614, %r1419;
	fma.rn.f32 	%r1435, %r31, %r615, %r1422;
	fma.rn.f32 	%r1436, %r31, %r616, %r1422;
	.loc	1 57 25                         // gqa.py:57:25 @[ gqa.py:185:82 ]
	ex2.approx.ftz.f32 	%r1437, %r1402;
	ex2.approx.ftz.f32 	%r1438, %r1403;
	ex2.approx.ftz.f32 	%r1439, %r1405;
	ex2.approx.ftz.f32 	%r1440, %r1406;
	ex2.approx.ftz.f32 	%r1441, %r1407;
	ex2.approx.ftz.f32 	%r1442, %r1408;
	ex2.approx.ftz.f32 	%r1443, %r1409;
	ex2.approx.ftz.f32 	%r1444, %r1410;
	ex2.approx.ftz.f32 	%r1445, %r1411;
	ex2.approx.ftz.f32 	%r1446, %r1412;
	ex2.approx.ftz.f32 	%r1447, %r1413;
	ex2.approx.ftz.f32 	%r1448, %r1414;
	ex2.approx.ftz.f32 	%r1449, %r1415;
	ex2.approx.ftz.f32 	%r1450, %r1416;
	ex2.approx.ftz.f32 	%r1451, %r1417;
	ex2.approx.ftz.f32 	%r1452, %r1418;
	ex2.approx.ftz.f32 	%r1453, %r1420;
	ex2.approx.ftz.f32 	%r1454, %r1421;
	ex2.approx.ftz.f32 	%r1455, %r1423;
	ex2.approx.ftz.f32 	%r1456, %r1424;
	ex2.approx.ftz.f32 	%r1457, %r1425;
	ex2.approx.ftz.f32 	%r1458, %r1426;
	ex2.approx.ftz.f32 	%r1459, %r1427;
	ex2.approx.ftz.f32 	%r1460, %r1428;
	ex2.approx.ftz.f32 	%r1461, %r1429;
	ex2.approx.ftz.f32 	%r1462, %r1430;
	ex2.approx.ftz.f32 	%r1463, %r1431;
	ex2.approx.ftz.f32 	%r1464, %r1432;
	ex2.approx.ftz.f32 	%r1465, %r1433;
	ex2.approx.ftz.f32 	%r1466, %r1434;
	ex2.approx.ftz.f32 	%r1467, %r1435;
	ex2.approx.ftz.f32 	%r1468, %r1436;
	.loc	2 260 15                        // standard.py:260:15 @[ gqa.py:185:82 ]
	add.f32 	%r1469, %r1437, %r1438;
	add.f32 	%r1470, %r1439, %r1440;
	add.f32 	%r1471, %r1469, %r1441;
	add.f32 	%r1472, %r1471, %r1442;
	add.f32 	%r1473, %r1470, %r1443;
	add.f32 	%r1474, %r1473, %r1444;
	add.f32 	%r1475, %r1472, %r1445;
	add.f32 	%r1476, %r1475, %r1446;
	add.f32 	%r1477, %r1474, %r1447;
	add.f32 	%r1478, %r1477, %r1448;
	add.f32 	%r1479, %r1476, %r1449;
	add.f32 	%r1480, %r1479, %r1450;
	add.f32 	%r1481, %r1478, %r1451;
	add.f32 	%r1482, %r1481, %r1452;
	add.f32 	%r1483, %r1453, %r1454;
	add.f32 	%r1484, %r1455, %r1456;
	add.f32 	%r1485, %r1483, %r1457;
	add.f32 	%r1486, %r1485, %r1458;
	add.f32 	%r1487, %r1484, %r1459;
	add.f32 	%r1488, %r1487, %r1460;
	add.f32 	%r1489, %r1486, %r1461;
	add.f32 	%r1490, %r1489, %r1462;
	add.f32 	%r1491, %r1488, %r1463;
	add.f32 	%r1492, %r1491, %r1464;
	add.f32 	%r1493, %r1490, %r1465;
	add.f32 	%r1494, %r1493, %r1466;
	add.f32 	%r1495, %r1492, %r1467;
	add.f32 	%r1496, %r1495, %r1468;
	.loc	2 290 36                        // standard.py:290:36 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1497, %r1480, 2, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ gqa.py:185:82 ]
	add.f32 	%r1498, %r1480, %r1497;
	.loc	2 290 36                        // standard.py:290:36 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1499, %r1498, 1, 31, -1;
	shfl.sync.bfly.b32 	%r1500, %r1482, 2, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ gqa.py:185:82 ]
	add.f32 	%r1501, %r1482, %r1500;
	.loc	2 290 36                        // standard.py:290:36 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1502, %r1501, 1, 31, -1;
	shfl.sync.bfly.b32 	%r1503, %r1494, 2, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ gqa.py:185:82 ]
	add.f32 	%r1504, %r1494, %r1503;
	.loc	2 290 36                        // standard.py:290:36 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1505, %r1504, 1, 31, -1;
	shfl.sync.bfly.b32 	%r1506, %r1496, 2, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ gqa.py:185:82 ]
	add.f32 	%r1507, %r1496, %r1506;
	.loc	2 290 36                        // standard.py:290:36 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1508, %r1507, 1, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ gqa.py:185:82 ]
	add.f32 	%r1509, %r1507, %r1508;
	add.f32 	%r1510, %r1504, %r1505;
	add.f32 	%r1511, %r1501, %r1502;
	add.f32 	%r1512, %r1498, %r1499;
	.loc	1 60 35                         // gqa.py:60:35 @[ gqa.py:185:82 ]
	sub.f32 	%r1513, %r1930, %r115;
	sub.f32 	%r1514, %r1929, %r114;
	sub.f32 	%r1515, %r1928, %r113;
	sub.f32 	%r1516, %r1927, %r112;
	.loc	1 60 29                         // gqa.py:60:29 @[ gqa.py:185:82 ]
	ex2.approx.ftz.f32 	%r1517, %r1516;
	ex2.approx.ftz.f32 	%r1518, %r1515;
	ex2.approx.ftz.f32 	%r1519, %r1514;
	ex2.approx.ftz.f32 	%r1520, %r1513;
	.loc	1 61 28                         // gqa.py:61:28 @[ gqa.py:185:82 ]
	fma.rn.f32 	%r1931, %r1931, %r1517, %r1512;
	fma.rn.f32 	%r1932, %r1932, %r1518, %r1511;
	fma.rn.f32 	%r1933, %r1933, %r1519, %r1510;
	fma.rn.f32 	%r1934, %r1934, %r1520, %r1509;
	.loc	1 63 20                         // gqa.py:63:20 @[ gqa.py:185:82 ]
	mul.f32 	%r1863, %r1863, %r1517;
	mul.f32 	%r1864, %r1864, %r1517;
	mul.f32 	%r1865, %r1865, %r1518;
	mul.f32 	%r1866, %r1866, %r1518;
	mul.f32 	%r1867, %r1867, %r1517;
	mul.f32 	%r1868, %r1868, %r1517;
	mul.f32 	%r1869, %r1869, %r1518;
	mul.f32 	%r1870, %r1870, %r1518;
	mul.f32 	%r1871, %r1871, %r1517;
	mul.f32 	%r1872, %r1872, %r1517;
	mul.f32 	%r1873, %r1873, %r1518;
	mul.f32 	%r1874, %r1874, %r1518;
	mul.f32 	%r1875, %r1875, %r1517;
	mul.f32 	%r1876, %r1876, %r1517;
	mul.f32 	%r1877, %r1877, %r1518;
	mul.f32 	%r1878, %r1878, %r1518;
	mul.f32 	%r1879, %r1879, %r1517;
	mul.f32 	%r1880, %r1880, %r1517;
	mul.f32 	%r1881, %r1881, %r1518;
	mul.f32 	%r1882, %r1882, %r1518;
	mul.f32 	%r1883, %r1883, %r1517;
	mul.f32 	%r1884, %r1884, %r1517;
	mul.f32 	%r1885, %r1885, %r1518;
	mul.f32 	%r1886, %r1886, %r1518;
	mul.f32 	%r1887, %r1887, %r1517;
	mul.f32 	%r1888, %r1888, %r1517;
	mul.f32 	%r1889, %r1889, %r1518;
	mul.f32 	%r1890, %r1890, %r1518;
	mul.f32 	%r1891, %r1891, %r1517;
	mul.f32 	%r1892, %r1892, %r1517;
	mul.f32 	%r1893, %r1893, %r1518;
	mul.f32 	%r1894, %r1894, %r1518;
	mul.f32 	%r1895, %r1895, %r1519;
	mul.f32 	%r1896, %r1896, %r1519;
	mul.f32 	%r1897, %r1897, %r1520;
	mul.f32 	%r1898, %r1898, %r1520;
	mul.f32 	%r1899, %r1899, %r1519;
	mul.f32 	%r1900, %r1900, %r1519;
	mul.f32 	%r1901, %r1901, %r1520;
	mul.f32 	%r1902, %r1902, %r1520;
	mul.f32 	%r1903, %r1903, %r1519;
	mul.f32 	%r1904, %r1904, %r1519;
	mul.f32 	%r1905, %r1905, %r1520;
	mul.f32 	%r1906, %r1906, %r1520;
	mul.f32 	%r1907, %r1907, %r1519;
	mul.f32 	%r1908, %r1908, %r1519;
	mul.f32 	%r1909, %r1909, %r1520;
	mul.f32 	%r1910, %r1910, %r1520;
	mul.f32 	%r1911, %r1911, %r1519;
	mul.f32 	%r1912, %r1912, %r1519;
	mul.f32 	%r1913, %r1913, %r1520;
	mul.f32 	%r1914, %r1914, %r1520;
	mul.f32 	%r1915, %r1915, %r1519;
	mul.f32 	%r1916, %r1916, %r1519;
	mul.f32 	%r1917, %r1917, %r1520;
	mul.f32 	%r1918, %r1918, %r1520;
	mul.f32 	%r1919, %r1919, %r1519;
	mul.f32 	%r1920, %r1920, %r1519;
	mul.f32 	%r1921, %r1921, %r1520;
	mul.f32 	%r1922, %r1922, %r1520;
	mul.f32 	%r1923, %r1923, %r1519;
	mul.f32 	%r1924, %r1924, %r1519;
	mul.f32 	%r1925, %r1925, %r1520;
	mul.f32 	%r1926, %r1926, %r1520;
	.loc	1 65 20                         // gqa.py:65:20 @[ gqa.py:185:82 ]
	add.s32 	%r1521, %r1346, 40960;
	shl.b32 	%r1522, %r23, 1;
	add.s32 	%r855, %r1521, %r1522;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r903, %r904, %r1127, %r1128}, [%r855];
	// end inline asm
	add.s32 	%r860, %r1521, %r1523;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r917, %r918, %r1141, %r1142}, [%r860];
	// end inline asm
	add.s32 	%r865, %r1521, %r1524;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r931, %r932, %r1155, %r1156}, [%r865];
	// end inline asm
	add.s32 	%r870, %r1521, %r1525;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r945, %r946, %r1169, %r1170}, [%r870];
	// end inline asm
	add.s32 	%r875, %r1521, %r1526;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r959, %r960, %r1183, %r1184}, [%r875];
	// end inline asm
	add.s32 	%r880, %r1521, %r1527;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r973, %r974, %r1197, %r1198}, [%r880];
	// end inline asm
	add.s32 	%r885, %r1521, %r1528;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r987, %r988, %r1211, %r1212}, [%r885];
	// end inline asm
	add.s32 	%r890, %r1521, %r1529;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r1001, %r1002, %r1225, %r1226}, [%r890];
	// end inline asm
	.loc	1 69 21                         // gqa.py:69:21 @[ gqa.py:185:82 ]
	cvt.rn.f16x2.f32 	%r913, %r1438, %r1437;
	cvt.rn.f16x2.f32 	%r914, %r1440, %r1439;
	cvt.rn.f16x2.f32 	%r915, %r1442, %r1441;
	cvt.rn.f16x2.f32 	%r916, %r1444, %r1443;
	cvt.rn.f16x2.f32 	%r1137, %r1446, %r1445;
	cvt.rn.f16x2.f32 	%r1138, %r1448, %r1447;
	cvt.rn.f16x2.f32 	%r1139, %r1450, %r1449;
	cvt.rn.f16x2.f32 	%r1140, %r1452, %r1451;
	cvt.rn.f16x2.f32 	%r1025, %r1454, %r1453;
	cvt.rn.f16x2.f32 	%r1026, %r1456, %r1455;
	cvt.rn.f16x2.f32 	%r1027, %r1458, %r1457;
	cvt.rn.f16x2.f32 	%r1028, %r1460, %r1459;
	cvt.rn.f16x2.f32 	%r1249, %r1462, %r1461;
	cvt.rn.f16x2.f32 	%r1250, %r1464, %r1463;
	cvt.rn.f16x2.f32 	%r1251, %r1466, %r1465;
	cvt.rn.f16x2.f32 	%r1252, %r1468, %r1467;
	.loc	1 70 27                         // gqa.py:70:27 @[ gqa.py:185:82 ]
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1863, %r1864, %r1865, %r1866 }, { %r913, %r914, %r915, %r916 }, { %r903, %r904 }, { %r1863, %r1864, %r1865, %r1866 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1867, %r1868, %r1869, %r1870 }, { %r913, %r914, %r915, %r916 }, { %r917, %r918 }, { %r1867, %r1868, %r1869, %r1870 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1871, %r1872, %r1873, %r1874 }, { %r913, %r914, %r915, %r916 }, { %r931, %r932 }, { %r1871, %r1872, %r1873, %r1874 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1875, %r1876, %r1877, %r1878 }, { %r913, %r914, %r915, %r916 }, { %r945, %r946 }, { %r1875, %r1876, %r1877, %r1878 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1879, %r1880, %r1881, %r1882 }, { %r913, %r914, %r915, %r916 }, { %r959, %r960 }, { %r1879, %r1880, %r1881, %r1882 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1883, %r1884, %r1885, %r1886 }, { %r913, %r914, %r915, %r916 }, { %r973, %r974 }, { %r1883, %r1884, %r1885, %r1886 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1887, %r1888, %r1889, %r1890 }, { %r913, %r914, %r915, %r916 }, { %r987, %r988 }, { %r1887, %r1888, %r1889, %r1890 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1891, %r1892, %r1893, %r1894 }, { %r913, %r914, %r915, %r916 }, { %r1001, %r1002 }, { %r1891, %r1892, %r1893, %r1894 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1895, %r1896, %r1897, %r1898 }, { %r1025, %r1026, %r1027, %r1028 }, { %r903, %r904 }, { %r1895, %r1896, %r1897, %r1898 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1899, %r1900, %r1901, %r1902 }, { %r1025, %r1026, %r1027, %r1028 }, { %r917, %r918 }, { %r1899, %r1900, %r1901, %r1902 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1903, %r1904, %r1905, %r1906 }, { %r1025, %r1026, %r1027, %r1028 }, { %r931, %r932 }, { %r1903, %r1904, %r1905, %r1906 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1907, %r1908, %r1909, %r1910 }, { %r1025, %r1026, %r1027, %r1028 }, { %r945, %r946 }, { %r1907, %r1908, %r1909, %r1910 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1911, %r1912, %r1913, %r1914 }, { %r1025, %r1026, %r1027, %r1028 }, { %r959, %r960 }, { %r1911, %r1912, %r1913, %r1914 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1915, %r1916, %r1917, %r1918 }, { %r1025, %r1026, %r1027, %r1028 }, { %r973, %r974 }, { %r1915, %r1916, %r1917, %r1918 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1919, %r1920, %r1921, %r1922 }, { %r1025, %r1026, %r1027, %r1028 }, { %r987, %r988 }, { %r1919, %r1920, %r1921, %r1922 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1923, %r1924, %r1925, %r1926 }, { %r1025, %r1026, %r1027, %r1028 }, { %r1001, %r1002 }, { %r1923, %r1924, %r1925, %r1926 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1863, %r1864, %r1865, %r1866 }, { %r1137, %r1138, %r1139, %r1140 }, { %r1127, %r1128 }, { %r1863, %r1864, %r1865, %r1866 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1867, %r1868, %r1869, %r1870 }, { %r1137, %r1138, %r1139, %r1140 }, { %r1141, %r1142 }, { %r1867, %r1868, %r1869, %r1870 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1871, %r1872, %r1873, %r1874 }, { %r1137, %r1138, %r1139, %r1140 }, { %r1155, %r1156 }, { %r1871, %r1872, %r1873, %r1874 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1875, %r1876, %r1877, %r1878 }, { %r1137, %r1138, %r1139, %r1140 }, { %r1169, %r1170 }, { %r1875, %r1876, %r1877, %r1878 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1879, %r1880, %r1881, %r1882 }, { %r1137, %r1138, %r1139, %r1140 }, { %r1183, %r1184 }, { %r1879, %r1880, %r1881, %r1882 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1883, %r1884, %r1885, %r1886 }, { %r1137, %r1138, %r1139, %r1140 }, { %r1197, %r1198 }, { %r1883, %r1884, %r1885, %r1886 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1887, %r1888, %r1889, %r1890 }, { %r1137, %r1138, %r1139, %r1140 }, { %r1211, %r1212 }, { %r1887, %r1888, %r1889, %r1890 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1891, %r1892, %r1893, %r1894 }, { %r1137, %r1138, %r1139, %r1140 }, { %r1225, %r1226 }, { %r1891, %r1892, %r1893, %r1894 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1895, %r1896, %r1897, %r1898 }, { %r1249, %r1250, %r1251, %r1252 }, { %r1127, %r1128 }, { %r1895, %r1896, %r1897, %r1898 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1899, %r1900, %r1901, %r1902 }, { %r1249, %r1250, %r1251, %r1252 }, { %r1141, %r1142 }, { %r1899, %r1900, %r1901, %r1902 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1903, %r1904, %r1905, %r1906 }, { %r1249, %r1250, %r1251, %r1252 }, { %r1155, %r1156 }, { %r1903, %r1904, %r1905, %r1906 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1907, %r1908, %r1909, %r1910 }, { %r1249, %r1250, %r1251, %r1252 }, { %r1169, %r1170 }, { %r1907, %r1908, %r1909, %r1910 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1911, %r1912, %r1913, %r1914 }, { %r1249, %r1250, %r1251, %r1252 }, { %r1183, %r1184 }, { %r1911, %r1912, %r1913, %r1914 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1915, %r1916, %r1917, %r1918 }, { %r1249, %r1250, %r1251, %r1252 }, { %r1197, %r1198 }, { %r1915, %r1916, %r1917, %r1918 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1919, %r1920, %r1921, %r1922 }, { %r1249, %r1250, %r1251, %r1252 }, { %r1211, %r1212 }, { %r1919, %r1920, %r1921, %r1922 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1923, %r1924, %r1925, %r1926 }, { %r1249, %r1250, %r1251, %r1252 }, { %r1225, %r1226 }, { %r1923, %r1924, %r1925, %r1926 };
	// end inline asm
	.loc	1 44 33                         // gqa.py:44:33 @[ gqa.py:185:82 ]
	add.s32 	%r1530, %r1862, 1;
	setp.gt.s32 	%p3, %r1530, 1;
	selp.b32 	%r1862, 0, %r1530, %p3;
	.loc	1 47 20                         // gqa.py:47:20 @[ gqa.py:185:82 ]
	bar.sync 	0;
	shl.b32 	%r1531, %r1862, 12;
	add.s32 	%r1339, %r242, %r1531;
	selp.b32 	%r1340, 16, 0, %p1;
	// begin inline asm
	cp.async.cg.shared.global [ %r1339 + 0 ], [ %rd146 + 0 ], 0x10, %r1340;
	// end inline asm
	cp.async.commit_group;
	.loc	1 65 20                         // gqa.py:65:20 @[ gqa.py:185:82 ]
	add.s32 	%r1341, %r244, %r1531;
	// begin inline asm
	cp.async.cg.shared.global [ %r1341 + 0 ], [ %rd147 + 0 ], 0x10, %r1340;
	// end inline asm
	cp.async.commit_group;
	.loc	1 44 33                         // gqa.py:44:33 @[ gqa.py:185:82 ]
	add.s64 	%rd147, %rd147, %rd12;
	add.s64 	%rd146, %rd146, %rd14;
	setp.lt.u32 	%p4, %r1860, 4064;
	mov.b32 	%r1927, %r112;
	mov.b32 	%r1928, %r113;
	mov.b32 	%r1929, %r114;
	mov.b32 	%r1930, %r115;
	@%p4 bra 	$L__BB0_1;
// %bb.2:
	cp.async.wait_group 	0;
	bar.sync 	0;
$L__tmp4:
	.loc	1 198 24                        // gqa.py:198:24
	setp.lt.f32 	%p5, %r1931, 0f00800000;
	mul.f32 	%r1532, %r1931, 0f4B000000;
	selp.f32 	%r190, %r1532, %r1931, %p5;
	selp.f32 	%r1533, 0fC1B80000, 0f00000000, %p5;
	add.s32 	%r1534, %r190, -1060439283;
	and.b32 	%r1535, %r1534, -8388608;
	sub.s32 	%r1536, %r190, %r1535;
	cvt.rn.f32.s32 	%r1537, %r1535;
	mov.b32 	%r1538, 0f34000000;
	fma.rn.ftz.f32 	%r1539, %r1537, %r1538, %r1533;
	add.f32 	%r1540, %r1536, 0fBF800000;
	mov.b32 	%r1541, 0fBE2C7F30;
	mov.b32 	%r1542, 0f3DC6B27F;
	fma.rn.ftz.f32 	%r1543, %r1542, %r1540, %r1541;
	mov.b32 	%r1544, 0f3E2FCF2A;
	fma.rn.ftz.f32 	%r1545, %r1543, %r1540, %r1544;
	mov.b32 	%r1546, 0fBE374E43;
	fma.rn.ftz.f32 	%r1547, %r1545, %r1540, %r1546;
	mov.b32 	%r1548, 0f3E520BF4;
	fma.rn.ftz.f32 	%r1549, %r1547, %r1540, %r1548;
	mov.b32 	%r1550, 0fBE763C8B;
	fma.rn.ftz.f32 	%r1551, %r1549, %r1540, %r1550;
	mov.b32 	%r1552, 0f3E93BF99;
	fma.rn.ftz.f32 	%r1553, %r1551, %r1540, %r1552;
	mov.b32 	%r1554, 0fBEB8AA49;
	fma.rn.ftz.f32 	%r1555, %r1553, %r1540, %r1554;
	mov.b32 	%r1556, 0f3EF6384A;
	fma.rn.ftz.f32 	%r1557, %r1555, %r1540, %r1556;
	mov.b32 	%r1558, 0fBF38AA3B;
	fma.rn.ftz.f32 	%r1559, %r1557, %r1540, %r1558;
	mul.f32 	%r1560, %r1540, %r1559;
	mul.f32 	%r1561, %r1540, %r1560;
	mov.b32 	%r1562, 0f3FB8AA3B;
	fma.rn.ftz.f32 	%r1563, %r1540, %r1562, %r1561;
	add.f32 	%r1935, %r1539, %r1563;
	setp.lt.u32 	%p6, %r190, 2139095040;
	mov.b32 	%r1564, 0f7F800000;
	@%p6 bra 	$L__BB0_4;
// %bb.3:                               // %__nv_fmaf_rn.exit.i.i
	.loc	1 0 24                          // gqa.py:0:24
	fma.rn.ftz.f32 	%r1935, %r190, %r1564, %r1564;
$L__BB0_4:                              // %__nv_log2f.exit
	.loc	1 198 24                        // gqa.py:198:24
	setp.lt.f32 	%p7, %r1932, 0f00800000;
	mul.f32 	%r1565, %r1932, 0f4B000000;
	selp.f32 	%r195, %r1565, %r1932, %p7;
	selp.f32 	%r1566, 0fC1B80000, 0f00000000, %p7;
	add.s32 	%r1567, %r195, -1060439283;
	and.b32 	%r1568, %r1567, -8388608;
	sub.s32 	%r1569, %r195, %r1568;
	cvt.rn.f32.s32 	%r1570, %r1568;
	fma.rn.ftz.f32 	%r1572, %r1570, %r1538, %r1566;
	add.f32 	%r1573, %r1569, 0fBF800000;
	fma.rn.ftz.f32 	%r1576, %r1542, %r1573, %r1541;
	fma.rn.ftz.f32 	%r1578, %r1576, %r1573, %r1544;
	fma.rn.ftz.f32 	%r1580, %r1578, %r1573, %r1546;
	fma.rn.ftz.f32 	%r1582, %r1580, %r1573, %r1548;
	fma.rn.ftz.f32 	%r1584, %r1582, %r1573, %r1550;
	fma.rn.ftz.f32 	%r1586, %r1584, %r1573, %r1552;
	fma.rn.ftz.f32 	%r1588, %r1586, %r1573, %r1554;
	fma.rn.ftz.f32 	%r1590, %r1588, %r1573, %r1556;
	fma.rn.ftz.f32 	%r1592, %r1590, %r1573, %r1558;
	mul.f32 	%r1593, %r1573, %r1592;
	mul.f32 	%r1594, %r1573, %r1593;
	fma.rn.ftz.f32 	%r1596, %r1573, %r1562, %r1594;
	add.f32 	%r1936, %r1572, %r1596;
	setp.lt.u32 	%p8, %r195, 2139095040;
	@%p8 bra 	$L__BB0_6;
// %bb.5:                               // %__nv_fmaf_rn.exit.i.i238
	.loc	1 0 24                          // gqa.py:0:24
	fma.rn.ftz.f32 	%r1936, %r195, %r1564, %r1564;
$L__BB0_6:                              // %__nv_log2f.exit241
	.loc	1 198 24                        // gqa.py:198:24
	setp.lt.f32 	%p9, %r1933, 0f00800000;
	mul.f32 	%r1598, %r1933, 0f4B000000;
	selp.f32 	%r200, %r1598, %r1933, %p9;
	selp.f32 	%r1599, 0fC1B80000, 0f00000000, %p9;
	add.s32 	%r1600, %r200, -1060439283;
	and.b32 	%r1601, %r1600, -8388608;
	sub.s32 	%r1602, %r200, %r1601;
	cvt.rn.f32.s32 	%r1603, %r1601;
	mov.b32 	%r1604, 0f34000000;
	fma.rn.ftz.f32 	%r1605, %r1603, %r1604, %r1599;
	add.f32 	%r1606, %r1602, 0fBF800000;
	mov.b32 	%r1607, 0fBE2C7F30;
	mov.b32 	%r1608, 0f3DC6B27F;
	fma.rn.ftz.f32 	%r1609, %r1608, %r1606, %r1607;
	mov.b32 	%r1610, 0f3E2FCF2A;
	fma.rn.ftz.f32 	%r1611, %r1609, %r1606, %r1610;
	mov.b32 	%r1612, 0fBE374E43;
	fma.rn.ftz.f32 	%r1613, %r1611, %r1606, %r1612;
	mov.b32 	%r1614, 0f3E520BF4;
	fma.rn.ftz.f32 	%r1615, %r1613, %r1606, %r1614;
	mov.b32 	%r1616, 0fBE763C8B;
	fma.rn.ftz.f32 	%r1617, %r1615, %r1606, %r1616;
	mov.b32 	%r1618, 0f3E93BF99;
	fma.rn.ftz.f32 	%r1619, %r1617, %r1606, %r1618;
	mov.b32 	%r1620, 0fBEB8AA49;
	fma.rn.ftz.f32 	%r1621, %r1619, %r1606, %r1620;
	mov.b32 	%r1622, 0f3EF6384A;
	fma.rn.ftz.f32 	%r1623, %r1621, %r1606, %r1622;
	mov.b32 	%r1624, 0fBF38AA3B;
	fma.rn.ftz.f32 	%r1625, %r1623, %r1606, %r1624;
	mul.f32 	%r1626, %r1606, %r1625;
	mul.f32 	%r1627, %r1606, %r1626;
	mov.b32 	%r1628, 0f3FB8AA3B;
	fma.rn.ftz.f32 	%r1629, %r1606, %r1628, %r1627;
	add.f32 	%r1937, %r1605, %r1629;
	setp.lt.u32 	%p10, %r200, 2139095040;
	mov.b32 	%r1630, 0f7F800000;
	@%p10 bra 	$L__BB0_8;
// %bb.7:                               // %__nv_fmaf_rn.exit.i.i268
	.loc	1 0 24                          // gqa.py:0:24
	fma.rn.ftz.f32 	%r1937, %r200, %r1630, %r1630;
$L__BB0_8:                              // %__nv_log2f.exit271
	.loc	1 198 24                        // gqa.py:198:24
	setp.lt.f32 	%p11, %r1934, 0f00800000;
	mul.f32 	%r1631, %r1934, 0f4B000000;
	selp.f32 	%r205, %r1631, %r1934, %p11;
	selp.f32 	%r1632, 0fC1B80000, 0f00000000, %p11;
	add.s32 	%r1633, %r205, -1060439283;
	and.b32 	%r1634, %r1633, -8388608;
	sub.s32 	%r1635, %r205, %r1634;
	cvt.rn.f32.s32 	%r1636, %r1634;
	fma.rn.ftz.f32 	%r1638, %r1636, %r1604, %r1632;
	add.f32 	%r1639, %r1635, 0fBF800000;
	fma.rn.ftz.f32 	%r1642, %r1608, %r1639, %r1607;
	fma.rn.ftz.f32 	%r1644, %r1642, %r1639, %r1610;
	fma.rn.ftz.f32 	%r1646, %r1644, %r1639, %r1612;
	fma.rn.ftz.f32 	%r1648, %r1646, %r1639, %r1614;
	fma.rn.ftz.f32 	%r1650, %r1648, %r1639, %r1616;
	fma.rn.ftz.f32 	%r1652, %r1650, %r1639, %r1618;
	fma.rn.ftz.f32 	%r1654, %r1652, %r1639, %r1620;
	fma.rn.ftz.f32 	%r1656, %r1654, %r1639, %r1622;
	fma.rn.ftz.f32 	%r1658, %r1656, %r1639, %r1624;
	mul.f32 	%r1659, %r1639, %r1658;
	mul.f32 	%r1660, %r1639, %r1659;
	fma.rn.ftz.f32 	%r1662, %r1639, %r1628, %r1660;
	add.f32 	%r1938, %r1638, %r1662;
	setp.lt.u32 	%p12, %r205, 2139095040;
	@%p12 bra 	$L__BB0_10;
// %bb.9:                               // %__nv_fmaf_rn.exit.i.i298
	.loc	1 0 24                          // gqa.py:0:24
	fma.rn.ftz.f32 	%r1938, %r205, %r1630, %r1630;
$L__BB0_10:                             // %__nv_log2f.exit301
	.loc	1 167 46                        // gqa.py:167:46
	and.b32 	%r1697, %r3, 128;
	.loc	1 198 24                        // gqa.py:198:24
	setp.eq.f32 	%p13, %r200, 0f00000000;
	selp.f32 	%r1698, 0fFF800000, %r1937, %p13;
	setp.eq.f32 	%p14, %r195, 0f00000000;
	selp.f32 	%r1699, 0fFF800000, %r1936, %p14;
	setp.eq.f32 	%p15, %r190, 0f00000000;
	selp.f32 	%r1700, 0fFF800000, %r1935, %p15;
	.loc	1 159 19                        // gqa.py:159:19
	add.s64 	%rd116, %rd20, %rd40;
	.loc	1 164 8                         // gqa.py:164:8
	cvt.s64.s32 	%rd117, %r209;
	.loc	1 167 46                        // gqa.py:167:46
	and.b32 	%r1701, %r3, 255;
	.loc	1 167 33                        // gqa.py:167:33
	or.b32 	%r1702, %r2, %r1701;
	.loc	1 198 24                        // gqa.py:198:24
	setp.eq.f32 	%p16, %r205, 0f00000000;
	selp.f32 	%r1703, 0fFF800000, %r1938, %p16;
	.loc	1 198 11                        // gqa.py:198:11
	add.f32 	%r1704, %r112, %r1700;
	add.f32 	%r1705, %r113, %r1699;
	add.f32 	%r1706, %r114, %r1698;
	add.f32 	%r1707, %r115, %r1703;
	.loc	1 199 16                        // gqa.py:199:16
	div.full.f32 	%r1708, %r1863, %r1931;
	div.full.f32 	%r1709, %r1864, %r1931;
	div.full.f32 	%r1710, %r1865, %r1932;
	div.full.f32 	%r1711, %r1866, %r1932;
	div.full.f32 	%r1712, %r1867, %r1931;
	div.full.f32 	%r1713, %r1868, %r1931;
	div.full.f32 	%r1714, %r1869, %r1932;
	div.full.f32 	%r1715, %r1870, %r1932;
	div.full.f32 	%r1716, %r1871, %r1931;
	div.full.f32 	%r1717, %r1872, %r1931;
	div.full.f32 	%r1718, %r1873, %r1932;
	div.full.f32 	%r1719, %r1874, %r1932;
	div.full.f32 	%r1720, %r1875, %r1931;
	div.full.f32 	%r1721, %r1876, %r1931;
	div.full.f32 	%r1722, %r1877, %r1932;
	div.full.f32 	%r1723, %r1878, %r1932;
	div.full.f32 	%r1724, %r1879, %r1931;
	div.full.f32 	%r1725, %r1880, %r1931;
	div.full.f32 	%r1726, %r1881, %r1932;
	div.full.f32 	%r1727, %r1882, %r1932;
	div.full.f32 	%r1728, %r1883, %r1931;
	div.full.f32 	%r1729, %r1884, %r1931;
	div.full.f32 	%r1730, %r1885, %r1932;
	div.full.f32 	%r1731, %r1886, %r1932;
	div.full.f32 	%r1732, %r1887, %r1931;
	div.full.f32 	%r1733, %r1888, %r1931;
	div.full.f32 	%r1734, %r1889, %r1932;
	div.full.f32 	%r1735, %r1890, %r1932;
	div.full.f32 	%r1736, %r1891, %r1931;
	div.full.f32 	%r1737, %r1892, %r1931;
	div.full.f32 	%r1738, %r1893, %r1932;
	div.full.f32 	%r1739, %r1894, %r1932;
	div.full.f32 	%r1740, %r1895, %r1933;
	div.full.f32 	%r1741, %r1896, %r1933;
	div.full.f32 	%r1742, %r1897, %r1934;
	div.full.f32 	%r1743, %r1898, %r1934;
	div.full.f32 	%r1744, %r1899, %r1933;
	div.full.f32 	%r1745, %r1900, %r1933;
	div.full.f32 	%r1746, %r1901, %r1934;
	div.full.f32 	%r1747, %r1902, %r1934;
	div.full.f32 	%r1748, %r1903, %r1933;
	div.full.f32 	%r1749, %r1904, %r1933;
	div.full.f32 	%r1750, %r1905, %r1934;
	div.full.f32 	%r1751, %r1906, %r1934;
	div.full.f32 	%r1752, %r1907, %r1933;
	div.full.f32 	%r1753, %r1908, %r1933;
	div.full.f32 	%r1754, %r1909, %r1934;
	div.full.f32 	%r1755, %r1910, %r1934;
	div.full.f32 	%r1756, %r1911, %r1933;
	div.full.f32 	%r1757, %r1912, %r1933;
	div.full.f32 	%r1758, %r1913, %r1934;
	div.full.f32 	%r1759, %r1914, %r1934;
	div.full.f32 	%r1760, %r1915, %r1933;
	div.full.f32 	%r1761, %r1916, %r1933;
	div.full.f32 	%r1762, %r1917, %r1934;
	div.full.f32 	%r1763, %r1918, %r1934;
	div.full.f32 	%r1764, %r1919, %r1933;
	div.full.f32 	%r1765, %r1920, %r1933;
	div.full.f32 	%r1766, %r1921, %r1934;
	div.full.f32 	%r1767, %r1922, %r1934;
	div.full.f32 	%r1768, %r1923, %r1933;
	div.full.f32 	%r1769, %r1924, %r1933;
	div.full.f32 	%r1770, %r1925, %r1934;
	div.full.f32 	%r1771, %r1926, %r1934;
	.loc	1 200 26                        // gqa.py:200:26
	shl.b32 	%r1772, %r1, 5;
	.loc	1 200 17                        // gqa.py:200:17
	mul.wide.u32 	%rd118, %r1772, 4;
	add.s64 	%rd119, %rd19, %rd118;
	.loc	1 200 34                        // gqa.py:200:34
	mul.wide.s32 	%rd120, %r1702, 4;
	add.s64 	%rd106, %rd119, %rd120;
	.loc	1 201 21                        // gqa.py:201:21
	shl.b32 	%r1773, %r3, 1;
	and.b32 	%r1774, %r1773, 192;
	add.s32 	%r1776, %r288, %r1774;
	and.b32 	%r1777, %r3, 28;
	add.s32 	%r1778, %r1776, %r1777;
	shl.b32 	%r1779, %r1697, 1;
	add.s32 	%r1780, %r1778, %r1779;
	st.shared.b32 	[%r1780], %r1704;
	st.shared.b32 	[%r1780+32], %r1705;
	st.shared.b32 	[%r1780+512], %r1706;
	st.shared.b32 	[%r1780+544], %r1707;
	bar.sync 	0;
	shl.b32 	%r1781, %r1701, 2;
	add.s32 	%r1782, %r288, %r1781;
	ld.shared.b32 	%r1664, [%r1782];
	// begin inline asm
	st.global.b32 [ %rd106 + 0 ], { %r1664 };
	// end inline asm
	.loc	1 202 33                        // gqa.py:202:33
	cvt.rn.f16x2.f32 	%r1783, %r1709, %r1708;
	cvt.rn.f16x2.f32 	%r1784, %r1711, %r1710;
	cvt.rn.f16x2.f32 	%r1785, %r1713, %r1712;
	cvt.rn.f16x2.f32 	%r1786, %r1715, %r1714;
	cvt.rn.f16x2.f32 	%r1787, %r1717, %r1716;
	cvt.rn.f16x2.f32 	%r1788, %r1719, %r1718;
	cvt.rn.f16x2.f32 	%r1789, %r1721, %r1720;
	cvt.rn.f16x2.f32 	%r1790, %r1723, %r1722;
	cvt.rn.f16x2.f32 	%r1791, %r1725, %r1724;
	cvt.rn.f16x2.f32 	%r1792, %r1727, %r1726;
	cvt.rn.f16x2.f32 	%r1793, %r1729, %r1728;
	cvt.rn.f16x2.f32 	%r1794, %r1731, %r1730;
	cvt.rn.f16x2.f32 	%r1795, %r1733, %r1732;
	cvt.rn.f16x2.f32 	%r1796, %r1735, %r1734;
	cvt.rn.f16x2.f32 	%r1797, %r1737, %r1736;
	cvt.rn.f16x2.f32 	%r1798, %r1739, %r1738;
	cvt.rn.f16x2.f32 	%r1799, %r1741, %r1740;
	cvt.rn.f16x2.f32 	%r1800, %r1743, %r1742;
	cvt.rn.f16x2.f32 	%r1801, %r1745, %r1744;
	cvt.rn.f16x2.f32 	%r1802, %r1747, %r1746;
	cvt.rn.f16x2.f32 	%r1803, %r1749, %r1748;
	cvt.rn.f16x2.f32 	%r1804, %r1751, %r1750;
	cvt.rn.f16x2.f32 	%r1805, %r1753, %r1752;
	cvt.rn.f16x2.f32 	%r1806, %r1755, %r1754;
	cvt.rn.f16x2.f32 	%r1807, %r1757, %r1756;
	cvt.rn.f16x2.f32 	%r1808, %r1759, %r1758;
	cvt.rn.f16x2.f32 	%r1809, %r1761, %r1760;
	cvt.rn.f16x2.f32 	%r1810, %r1763, %r1762;
	cvt.rn.f16x2.f32 	%r1811, %r1765, %r1764;
	cvt.rn.f16x2.f32 	%r1812, %r1767, %r1766;
	cvt.rn.f16x2.f32 	%r1813, %r1769, %r1768;
	cvt.rn.f16x2.f32 	%r1814, %r1771, %r1770;
	.loc	1 202 26                        // gqa.py:202:26
	mul.lo.s64 	%rd121, %rd2, %rd117;
	mul.lo.s64 	%rd122, %rd3, %rd117;
	mul.lo.s64 	%rd123, %rd4, %rd117;
	mul.lo.s64 	%rd124, %rd5, %rd117;
	mul.lo.s64 	%rd125, %rd6, %rd117;
	mul.lo.s64 	%rd126, %rd7, %rd117;
	mul.lo.s64 	%rd127, %rd8, %rd117;
	mul.lo.s64 	%rd128, %rd9, %rd117;
	shl.b64 	%rd129, %rd121, 1;
	add.s64 	%rd130, %rd116, %rd129;
	shl.b64 	%rd131, %rd10, 1;
	add.s64 	%rd107, %rd130, %rd131;
	shl.b64 	%rd132, %rd122, 1;
	add.s64 	%rd133, %rd116, %rd132;
	add.s64 	%rd108, %rd133, %rd131;
	shl.b64 	%rd134, %rd123, 1;
	add.s64 	%rd135, %rd116, %rd134;
	add.s64 	%rd109, %rd135, %rd131;
	shl.b64 	%rd136, %rd124, 1;
	add.s64 	%rd137, %rd116, %rd136;
	add.s64 	%rd110, %rd137, %rd131;
	shl.b64 	%rd138, %rd125, 1;
	add.s64 	%rd139, %rd116, %rd138;
	add.s64 	%rd111, %rd139, %rd131;
	shl.b64 	%rd140, %rd126, 1;
	add.s64 	%rd141, %rd116, %rd140;
	add.s64 	%rd112, %rd141, %rd131;
	shl.b64 	%rd142, %rd127, 1;
	add.s64 	%rd143, %rd116, %rd142;
	add.s64 	%rd113, %rd143, %rd131;
	shl.b64 	%rd144, %rd128, 1;
	add.s64 	%rd145, %rd116, %rd144;
	add.s64 	%rd114, %rd145, %rd131;
	bar.sync 	0;
	and.b32 	%r1815, %r1773, 6;
	shl.b32 	%r1816, %r3, 4;
	and.b32 	%r1817, %r1816, 192;
	or.b32 	%r1818, %r1817, %r1815;
	shl.b32 	%r1819, %r4, 4;
	or.b32 	%r1820, %r1818, %r1819;
	and.b32 	%r1821, %r9, 3072;
	or.b32 	%r1822, %r1820, %r1821;
	shl.b32 	%r1823, %r1697, 5;
	or.b32 	%r1824, %r1822, %r1823;
	and.b32 	%r1825, %r6, 2040;
	shr.u32 	%r1826, %r1824, 2;
	and.b32 	%r1827, %r1826, 1916;
	add.s32 	%r1828, %r288, %r1827;
	shl.b32 	%r1829, %r1824, 1;
	add.s32 	%r1830, %r1828, %r1829;
	st.shared.b32 	[%r1830], %r1783;
	or.b32 	%r1831, %r1824, 512;
	shr.u32 	%r1832, %r1831, 2;
	and.b32 	%r1833, %r1832, 1073741822;
	add.s32 	%r1834, %r288, %r1833;
	add.s32 	%r1835, %r1834, %r1829;
	st.shared.b32 	[%r1835+1024], %r1784;
	st.shared.b32 	[%r1830+16], %r1785;
	and.b32 	%r1836, %r1832, 1073741808;
	add.s32 	%r1837, %r288, %r1836;
	add.s32 	%r1838, %r1837, %r1829;
	st.shared.b32 	[%r1838+1040], %r1786;
	st.shared.b32 	[%r1830+32], %r1787;
	st.shared.b32 	[%r1838+1056], %r1788;
	st.shared.b32 	[%r1830+48], %r1789;
	st.shared.b32 	[%r1838+1072], %r1790;
	st.shared.b32 	[%r1830+64], %r1791;
	st.shared.b32 	[%r1838+1088], %r1792;
	st.shared.b32 	[%r1830+80], %r1793;
	st.shared.b32 	[%r1838+1104], %r1794;
	st.shared.b32 	[%r1830+96], %r1795;
	st.shared.b32 	[%r1838+1120], %r1796;
	st.shared.b32 	[%r1830+112], %r1797;
	st.shared.b32 	[%r1838+1136], %r1798;
	bar.sync 	0;
	and.b32 	%r1839, %r3, 248;
	shl.b32 	%r1840, %r1839, 1;
	add.s32 	%r1841, %r288, %r1840;
	shl.b32 	%r1842, %r1825, 1;
	add.s32 	%r1843, %r1841, %r1842;
	ld.shared.v4.b32 	{%r1665, %r1666, %r1667, %r1668}, [%r1843];
	or.b32 	%r1844, %r1825, 2048;
	shr.u32 	%r1845, %r1844, 2;
	and.b32 	%r1846, %r1845, 1008;
	add.s32 	%r1847, %r288, %r1846;
	add.s32 	%r1848, %r1847, %r1842;
	ld.shared.v4.b32 	{%r1669, %r1670, %r1671, %r1672}, [%r1848+4096];
	or.b32 	%r1849, %r1825, 4096;
	shr.u32 	%r1850, %r1849, 2;
	and.b32 	%r1851, %r1850, 1520;
	add.s32 	%r1852, %r288, %r1851;
	add.s32 	%r1853, %r1852, %r1842;
	ld.shared.v4.b32 	{%r1673, %r1674, %r1675, %r1676}, [%r1853+8192];
	or.b32 	%r1854, %r6, 6144;
	shr.u32 	%r1855, %r1854, 2;
	and.b32 	%r1856, %r1855, 2032;
	add.s32 	%r1857, %r288, %r1856;
	shl.b32 	%r1858, %r1854, 1;
	add.s32 	%r1859, %r1857, %r1858;
	ld.shared.v4.b32 	{%r1677, %r1678, %r1679, %r1680}, [%r1859];
	bar.sync 	0;
	st.shared.b32 	[%r1830], %r1799;
	st.shared.b32 	[%r1835+1024], %r1800;
	st.shared.b32 	[%r1830+16], %r1801;
	st.shared.b32 	[%r1838+1040], %r1802;
	st.shared.b32 	[%r1830+32], %r1803;
	st.shared.b32 	[%r1838+1056], %r1804;
	st.shared.b32 	[%r1830+48], %r1805;
	st.shared.b32 	[%r1838+1072], %r1806;
	st.shared.b32 	[%r1830+64], %r1807;
	st.shared.b32 	[%r1838+1088], %r1808;
	st.shared.b32 	[%r1830+80], %r1809;
	st.shared.b32 	[%r1838+1104], %r1810;
	st.shared.b32 	[%r1830+96], %r1811;
	st.shared.b32 	[%r1838+1120], %r1812;
	st.shared.b32 	[%r1830+112], %r1813;
	st.shared.b32 	[%r1838+1136], %r1814;
	bar.sync 	0;
	ld.shared.v4.b32 	{%r1681, %r1682, %r1683, %r1684}, [%r1843];
	ld.shared.v4.b32 	{%r1685, %r1686, %r1687, %r1688}, [%r1848+4096];
	ld.shared.v4.b32 	{%r1689, %r1690, %r1691, %r1692}, [%r1853+8192];
	ld.shared.v4.b32 	{%r1693, %r1694, %r1695, %r1696}, [%r1859];
	// begin inline asm
	st.global.v4.b32 [ %rd107 + 0 ], { %r1665, %r1666, %r1667, %r1668 };
	// end inline asm
	// begin inline asm
	st.global.v4.b32 [ %rd108 + 0 ], { %r1669, %r1670, %r1671, %r1672 };
	// end inline asm
	// begin inline asm
	st.global.v4.b32 [ %rd109 + 0 ], { %r1673, %r1674, %r1675, %r1676 };
	// end inline asm
	// begin inline asm
	st.global.v4.b32 [ %rd110 + 0 ], { %r1677, %r1678, %r1679, %r1680 };
	// end inline asm
	// begin inline asm
	st.global.v4.b32 [ %rd111 + 0 ], { %r1681, %r1682, %r1683, %r1684 };
	// end inline asm
	// begin inline asm
	st.global.v4.b32 [ %rd112 + 0 ], { %r1685, %r1686, %r1687, %r1688 };
	// end inline asm
	// begin inline asm
	st.global.v4.b32 [ %rd113 + 0 ], { %r1689, %r1690, %r1691, %r1692 };
	// end inline asm
	// begin inline asm
	st.global.v4.b32 [ %rd114 + 0 ], { %r1693, %r1694, %r1695, %r1696 };
	// end inline asm
	.loc	1 202 4                         // gqa.py:202:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/ubuntu/anjiang/PTX_dataset/triton_ptx/gqa.py"
	.file	2 "/mnt/efs/anjiang/miniconda3/envs/ptx/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 131                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x7c DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 103                                 // DW_AT_name
.b8 113
.b8 97
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 117
.b8 98
.b8 117
.b8 110
.b8 116
.b8 117
.b8 47
.b8 97
.b8 110
.b8 106
.b8 105
.b8 97
.b8 110
.b8 103
.b8 47
.b8 80
.b8 84
.b8 88
.b8 95
.b8 100
.b8 97
.b8 116
.b8 97
.b8 115
.b8 101
.b8 116
.b8 47
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 116
.b8 120
.b8 0
.b8 2                                   // Abbrev [2] 0x4c:0xc DW_TAG_subprogram
.b8 95                                  // DW_AT_name
.b8 97
.b8 116
.b8 116
.b8 110
.b8 95
.b8 102
.b8 119
.b8 100
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x58:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 76                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x6d:0x18 DW_TAG_inlined_subroutine
.b32 76                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 185                                 // DW_AT_call_line
.b8 82                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
