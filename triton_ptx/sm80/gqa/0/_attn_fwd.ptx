//
// Generated by LLVM NVPTX Back-End
//

.version 8.7
.target sm_80
.address_size 64

	// .globl	_attn_fwd               // -- Begin function _attn_fwd
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @_attn_fwd
.visible .entry _attn_fwd(
	.param .u64 .ptr .global .align 1 _attn_fwd_param_0,
	.param .u64 .ptr .global .align 1 _attn_fwd_param_1,
	.param .u64 .ptr .global .align 1 _attn_fwd_param_2,
	.param .f32 _attn_fwd_param_3,
	.param .u64 .ptr .global .align 1 _attn_fwd_param_4,
	.param .u64 .ptr .global .align 1 _attn_fwd_param_5,
	.param .u32 _attn_fwd_param_6,
	.param .u32 _attn_fwd_param_7,
	.param .u32 _attn_fwd_param_8,
	.param .u32 _attn_fwd_param_9,
	.param .u32 _attn_fwd_param_10,
	.param .u32 _attn_fwd_param_11,
	.param .u32 _attn_fwd_param_12,
	.param .u32 _attn_fwd_param_13,
	.param .u32 _attn_fwd_param_14,
	.param .u32 _attn_fwd_param_15,
	.param .u32 _attn_fwd_param_16,
	.param .u32 _attn_fwd_param_17,
	.param .u32 _attn_fwd_param_18,
	.param .u64 .ptr .global .align 1 _attn_fwd_param_19
)
.reqntid 256
{
	.reg .pred 	%p<12>;
	.reg .b32 	%r<1723>;
	.reg .b64 	%rd<155>;
	.loc	1 114 0                         // gqa.py:114:0
$L__func_begin0:
	.loc	1 114 0                         // gqa.py:114:0

// %bb.0:
	ld.param.b32 	%r123, [_attn_fwd_param_17];
	ld.param.b64 	%rd23, [_attn_fwd_param_5];
	ld.param.b64 	%rd22, [_attn_fwd_param_4];
	ld.param.b64 	%rd40, [_attn_fwd_param_0];
	ld.param.b64 	%rd41, [_attn_fwd_param_1];
$L__tmp0:
	.loc	1 127 28                        // gqa.py:127:28
	mov.u32 	%r170, %ctaid.x;
	.loc	1 128 27                        // gqa.py:128:27
	mov.u32 	%r1, %ctaid.y;
	ld.param.b64 	%rd42, [_attn_fwd_param_2];
	ld.param.b32 	%r171, [_attn_fwd_param_3];
	ld.param.b32 	%r172, [_attn_fwd_param_18];
	.loc	1 129 22                        // gqa.py:129:22
	div.s32 	%r174, %r1, %r172;
	.loc	1 130 21                        // gqa.py:130:21
	mul.lo.s32 	%r175, %r174, %r172;
	sub.s32 	%r176, %r1, %r175;
	ld.param.b32 	%r177, [_attn_fwd_param_6];
	ld.param.s32 	%rd43, [_attn_fwd_param_7];
	ld.param.s32 	%rd44, [_attn_fwd_param_8];
	.loc	1 131 38                        // gqa.py:131:38
	mul.wide.s32 	%rd45, %r174, %r177;
	.loc	1 131 59                        // gqa.py:131:59
	cvt.u64.u32 	%rd46, %r176;
	ld.param.b32 	%r178, [_attn_fwd_param_11];
	.loc	1 131 50                        // gqa.py:131:50
	mad.lo.s64 	%rd1, %rd46, %rd43, %rd45;
	.loc	1 135 17                        // gqa.py:135:17
	shl.b64 	%rd7, %rd1, 1;
	add.s64 	%rd47, %rd40, %rd7;
	ld.param.b32 	%r179, [_attn_fwd_param_14];
	.loc	1 138 27                        // gqa.py:138:27
	shl.b32 	%r2, %r170, 7;
	.loc	1 140 8                         // gqa.py:140:8
	cvt.s64.s32 	%rd48, %r2;
	.loc	1 143 17                        // gqa.py:143:17
	add.s64 	%rd49, %rd42, %rd7;
	.loc	1 148 8                         // gqa.py:148:8
	cvt.s64.s32 	%rd50, %r179;
	.loc	1 151 17                        // gqa.py:151:17
	add.s64 	%rd51, %rd41, %rd7;
	.loc	1 156 8                         // gqa.py:156:8
	cvt.s64.s32 	%rd52, %r178;
	.loc	1 167 46                        // gqa.py:167:46
	mov.u32 	%r3, %tid.x;
	and.b32 	%r4, %r3, 16;
	shr.u32 	%r180, %r3, 3;
	bfe.u32 	%r181, %r3, 3, 5;
	or.b32 	%r182, %r181, 32;
	or.b32 	%r183, %r181, 64;
	or.b32 	%r184, %r180, 96;
	bfe.s32 	%r185, %r3, 2, 1;
	.loc	1 175 16                        // gqa.py:175:16
	mul.f32 	%r5, %r171, 0f3FB8AA3B;
	.loc	1 177 16                        // gqa.py:177:16
	cvt.u64.u32 	%rd53, %r181;
	cvt.u64.u32 	%rd54, %r182;
	cvt.u64.u32 	%rd55, %r183;
	cvt.u64.u32 	%rd56, %r184;
	or.b64 	%rd2, %rd53, %rd48;
	or.b64 	%rd3, %rd54, %rd48;
	or.b64 	%rd4, %rd55, %rd48;
	or.b64 	%rd5, %rd56, %rd48;
	mul.lo.s64 	%rd57, %rd2, %rd44;
	mul.lo.s64 	%rd58, %rd3, %rd44;
	mul.lo.s64 	%rd59, %rd4, %rd44;
	mul.lo.s64 	%rd60, %rd5, %rd44;
	shl.b32 	%r6, %r3, 3;
	and.b32 	%r186, %r6, 56;
	cvt.u64.u32 	%rd6, %r186;
	shl.b64 	%rd61, %rd57, 1;
	add.s64 	%rd62, %rd47, %rd61;
	mul.wide.u32 	%rd63, %r186, 2;
	add.s64 	%rd24, %rd62, %rd63;
	shl.b64 	%rd64, %rd58, 1;
	add.s64 	%rd65, %rd47, %rd64;
	add.s64 	%rd25, %rd65, %rd63;
	shl.b64 	%rd66, %rd59, 1;
	add.s64 	%rd67, %rd47, %rd66;
	add.s64 	%rd26, %rd67, %rd63;
	shl.b64 	%rd68, %rd60, 1;
	add.s64 	%rd69, %rd47, %rd68;
	add.s64 	%rd27, %rd69, %rd63;
	// begin inline asm
	mov.u32 %r124, 0x0;
	mov.u32 %r125, 0x0;
	mov.u32 %r126, 0x0;
	mov.u32 %r127, 0x0;
	ld.global.v4.b32 { %r124, %r125, %r126, %r127 }, [ %rd24 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r128, 0x0;
	mov.u32 %r129, 0x0;
	mov.u32 %r130, 0x0;
	mov.u32 %r131, 0x0;
	ld.global.v4.b32 { %r128, %r129, %r130, %r131 }, [ %rd25 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r132, 0x0;
	mov.u32 %r133, 0x0;
	mov.u32 %r134, 0x0;
	mov.u32 %r135, 0x0;
	ld.global.v4.b32 { %r132, %r133, %r134, %r135 }, [ %rd26 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r136, 0x0;
	mov.u32 %r137, 0x0;
	mov.u32 %r138, 0x0;
	mov.u32 %r139, 0x0;
	ld.global.v4.b32 { %r136, %r137, %r138, %r139 }, [ %rd27 + 0 ];
	// end inline asm
	xor.b32 	%r187, %r6, %r3;
	and.b32 	%r188, %r187, 56;
	shl.b32 	%r189, %r181, 6;
	or.b32 	%r7, %r189, %r188;
	shl.b32 	%r190, %r7, 1;
	mov.b32 	%r191, global_smem;
	add.s32 	%r192, %r191, 49152;
	add.s32 	%r193, %r192, %r190;
	st.shared.v4.b32 	[%r193], {%r124, %r125, %r126, %r127};
	st.shared.v4.b32 	[%r193+4096], {%r128, %r129, %r130, %r131};
	shl.b32 	%r194, %r188, 1;
	add.s32 	%r195, %r192, %r194;
	shl.b32 	%r196, %r181, 7;
	add.s32 	%r197, %r195, %r196;
	st.shared.v4.b32 	[%r197+8192], {%r132, %r133, %r134, %r135};
	st.shared.v4.b32 	[%r197+12288], {%r136, %r137, %r138, %r139};
$L__tmp1:
	.loc	1 47 20                         // gqa.py:47:20 @[ gqa.py:185:82 ]
	mul.lo.s64 	%rd70, %rd52, %rd53;
	mul.lo.s64 	%rd71, %rd52, %rd54;
	shl.b64 	%rd72, %rd70, 1;
	add.s64 	%rd73, %rd51, %rd72;
	add.s64 	%rd28, %rd73, %rd63;
	shl.b64 	%rd74, %rd71, 1;
	add.s64 	%rd75, %rd51, %rd74;
	add.s64 	%rd29, %rd75, %rd63;
	add.s32 	%r140, %r191, %r190;
	add.s32 	%r142, %r140, 4096;
	mov.b32 	%r141, 16;
	// begin inline asm
	cp.async.cg.shared.global [ %r140 + 0 ], [ %rd28 + 0 ], 0x10, %r141;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r142 + 0 ], [ %rd29 + 0 ], 0x10, %r141;
	// end inline asm
	cp.async.commit_group;
	.loc	1 65 20                         // gqa.py:65:20 @[ gqa.py:185:82 ]
	mul.lo.s64 	%rd76, %rd50, %rd53;
	mul.lo.s64 	%rd77, %rd50, %rd54;
	shl.b64 	%rd78, %rd76, 1;
	add.s64 	%rd79, %rd49, %rd78;
	add.s64 	%rd30, %rd79, %rd63;
	shl.b64 	%rd80, %rd77, 1;
	add.s64 	%rd81, %rd49, %rd80;
	add.s64 	%rd31, %rd81, %rd63;
	add.s32 	%r144, %r140, 24576;
	add.s32 	%r146, %r140, 28672;
	// begin inline asm
	cp.async.cg.shared.global [ %r144 + 0 ], [ %rd30 + 0 ], 0x10, %r141;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r146 + 0 ], [ %rd31 + 0 ], 0x10, %r141;
	// end inline asm
	cp.async.commit_group;
	.loc	1 47 20                         // gqa.py:47:20 @[ gqa.py:185:82 ]
	mul.wide.s32 	%rd82, %r178, 64;
	add.s64 	%rd83, %rd70, %rd82;
	add.s64 	%rd84, %rd71, %rd82;
	shl.b64 	%rd85, %rd83, 1;
	add.s64 	%rd86, %rd51, %rd85;
	add.s64 	%rd32, %rd86, %rd63;
	shl.b64 	%rd87, %rd84, 1;
	add.s64 	%rd88, %rd51, %rd87;
	add.s64 	%rd33, %rd88, %rd63;
	bar.sync 	0;
	add.s32 	%r148, %r140, 8192;
	add.s32 	%r150, %r140, 12288;
	// begin inline asm
	cp.async.cg.shared.global [ %r148 + 0 ], [ %rd32 + 0 ], 0x10, %r141;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r150 + 0 ], [ %rd33 + 0 ], 0x10, %r141;
	// end inline asm
	cp.async.commit_group;
	.loc	1 65 20                         // gqa.py:65:20 @[ gqa.py:185:82 ]
	mul.wide.s32 	%rd89, %r179, 64;
	add.s64 	%rd90, %rd76, %rd89;
	add.s64 	%rd91, %rd77, %rd89;
	shl.b64 	%rd92, %rd90, 1;
	add.s64 	%rd93, %rd49, %rd92;
	add.s64 	%rd34, %rd93, %rd63;
	shl.b64 	%rd94, %rd91, 1;
	add.s64 	%rd95, %rd49, %rd94;
	add.s64 	%rd35, %rd95, %rd63;
	add.s32 	%r152, %r140, 32768;
	add.s32 	%r154, %r140, 36864;
	// begin inline asm
	cp.async.cg.shared.global [ %r152 + 0 ], [ %rd34 + 0 ], 0x10, %r141;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r154 + 0 ], [ %rd35 + 0 ], 0x10, %r141;
	// end inline asm
	cp.async.commit_group;
	.loc	1 47 20                         // gqa.py:47:20 @[ gqa.py:185:82 ]
	add.s64 	%rd96, %rd83, %rd82;
	add.s64 	%rd97, %rd84, %rd82;
	shl.b64 	%rd98, %rd96, 1;
	add.s64 	%rd99, %rd51, %rd98;
	add.s64 	%rd36, %rd99, %rd63;
	shl.b64 	%rd100, %rd97, 1;
	add.s64 	%rd101, %rd51, %rd100;
	add.s64 	%rd37, %rd101, %rd63;
	bar.sync 	0;
	add.s32 	%r156, %r140, 16384;
	add.s32 	%r158, %r140, 20480;
	// begin inline asm
	cp.async.cg.shared.global [ %r156 + 0 ], [ %rd36 + 0 ], 0x10, %r141;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r158 + 0 ], [ %rd37 + 0 ], 0x10, %r141;
	// end inline asm
	cp.async.commit_group;
	.loc	1 65 20                         // gqa.py:65:20 @[ gqa.py:185:82 ]
	add.s64 	%rd102, %rd90, %rd89;
	add.s64 	%rd103, %rd91, %rd89;
	shl.b64 	%rd104, %rd102, 1;
	add.s64 	%rd105, %rd49, %rd104;
	add.s64 	%rd38, %rd105, %rd63;
	shl.b64 	%rd106, %rd103, 1;
	add.s64 	%rd107, %rd49, %rd106;
	add.s64 	%rd39, %rd107, %rd63;
	add.s32 	%r160, %r140, 40960;
	add.s32 	%r162, %r140, 45056;
	// begin inline asm
	cp.async.cg.shared.global [ %r160 + 0 ], [ %rd38 + 0 ], 0x10, %r141;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r162 + 0 ], [ %rd39 + 0 ], 0x10, %r141;
	// end inline asm
	cp.async.commit_group;
	and.b32 	%r198, %r3, 3;
	mul.lo.s32 	%r199, %r198, 72;
	and.b32 	%r200, %r185, 288;
	xor.b32 	%r201, %r200, %r199;
	shl.b32 	%r202, %r3, 6;
	and.b32 	%r203, %r202, 512;
	or.b32 	%r204, %r201, %r203;
	shr.u32 	%r205, %r4, 1;
	xor.b32 	%r206, %r204, %r205;
	shl.b32 	%r8, %r3, 5;
	and.b32 	%r207, %r8, 1024;
	or.b32 	%r208, %r206, %r207;
	and.b32 	%r209, %r8, 6144;
	or.b32 	%r210, %r208, %r209;
	shl.b32 	%r211, %r210, 1;
	add.s32 	%r225, %r192, %r211;
	xor.b32 	%r212, %r210, 16;
	shl.b32 	%r213, %r212, 1;
	add.s32 	%r230, %r192, %r213;
	xor.b32 	%r214, %r210, 32;
	shl.b32 	%r215, %r214, 1;
	add.s32 	%r235, %r192, %r215;
	xor.b32 	%r216, %r210, 48;
	shl.b32 	%r217, %r216, 1;
	add.s32 	%r240, %r192, %r217;
	and.b32 	%r218, %r3, 24;
	xor.b32 	%r13, %r201, %r218;
	xor.b32 	%r14, %r13, 32;
	xor.b32 	%r15, %r13, 544;
	xor.b32 	%r16, %r13, 1056;
	xor.b32 	%r17, %r13, 1568;
	xor.b32 	%r18, %r13, 2080;
	xor.b32 	%r19, %r13, 2592;
	xor.b32 	%r20, %r13, 3104;
	xor.b32 	%r21, %r13, 3616;
	and.b32 	%r219, %r202, 1536;
	or.b32 	%r22, %r201, %r219;
	xor.b32 	%r23, %r22, 8;
	xor.b32 	%r24, %r22, 2056;
	xor.b32 	%r25, %r22, 16;
	xor.b32 	%r26, %r22, 2064;
	xor.b32 	%r27, %r22, 24;
	xor.b32 	%r28, %r22, 2072;
	xor.b32 	%r29, %r22, 32;
	xor.b32 	%r30, %r22, 2080;
	xor.b32 	%r31, %r22, 40;
	xor.b32 	%r32, %r22, 2088;
	xor.b32 	%r33, %r22, 48;
	xor.b32 	%r34, %r22, 2096;
	xor.b32 	%r35, %r22, 56;
	xor.b32 	%r36, %r22, 2104;
	.loc	1 44 33                         // gqa.py:44:33 @[ gqa.py:185:82 ]
	or.b64 	%rd108, %rd53, 224;
	mul.lo.s64 	%rd109, %rd108, %rd50;
	shl.b64 	%rd110, %rd109, 1;
	and.b32 	%r220, %r3, 7;
	mul.wide.u32 	%rd111, %r220, 16;
	add.s64 	%rd112, %rd110, %rd111;
	add.s64 	%rd154, %rd42, %rd112;
	mul.wide.s32 	%rd9, %r179, 128;
	mul.lo.s64 	%rd113, %rd108, %rd52;
	shl.b64 	%rd114, %rd113, 1;
	add.s64 	%rd115, %rd114, %rd111;
	add.s64 	%rd153, %rd41, %rd115;
	mul.wide.s32 	%rd11, %r178, 128;
	or.b64 	%rd116, %rd53, 192;
	mul.lo.s64 	%rd117, %rd116, %rd50;
	shl.b64 	%rd118, %rd117, 1;
	add.s64 	%rd119, %rd118, %rd111;
	add.s64 	%rd152, %rd42, %rd119;
	mul.lo.s64 	%rd120, %rd116, %rd52;
	shl.b64 	%rd121, %rd120, 1;
	add.s64 	%rd122, %rd121, %rd111;
	add.s64 	%rd151, %rd41, %rd122;
	mov.b32 	%r1719, 0f3F800000;
	mov.b32 	%r961, 0f00000000;
	mov.b32 	%r1685, 0fFF800000;
	mov.b32 	%r1684, 2;
	mov.b32 	%r1683, -1;
	mov.b32 	%r1682, -64;
	shl.b32 	%r1310, %r14, 1;
	shl.b32 	%r1311, %r15, 1;
	shl.b32 	%r1312, %r16, 1;
	shl.b32 	%r1313, %r17, 1;
	shl.b32 	%r1314, %r18, 1;
	shl.b32 	%r1315, %r19, 1;
	shl.b32 	%r1316, %r20, 1;
	shl.b32 	%r1317, %r21, 1;
	shl.b32 	%r1469, %r23, 1;
	shl.b32 	%r1470, %r24, 1;
	shl.b32 	%r1471, %r25, 1;
	shl.b32 	%r1472, %r26, 1;
	shl.b32 	%r1473, %r27, 1;
	shl.b32 	%r1474, %r28, 1;
	shl.b32 	%r1475, %r29, 1;
	shl.b32 	%r1476, %r30, 1;
	shl.b32 	%r1477, %r31, 1;
	shl.b32 	%r1478, %r32, 1;
	shl.b32 	%r1479, %r33, 1;
	shl.b32 	%r1480, %r34, 1;
	shl.b32 	%r1481, %r35, 1;
	shl.b32 	%r1482, %r36, 1;
	mov.b32 	%r1686, %r1685;
	mov.b32 	%r962, %r961;
	mov.b32 	%r963, %r961;
	mov.b32 	%r964, %r961;
	mov.b32 	%r975, %r961;
	mov.b32 	%r976, %r961;
	mov.b32 	%r977, %r961;
	mov.b32 	%r978, %r961;
	mov.b32 	%r989, %r961;
	mov.b32 	%r990, %r961;
	mov.b32 	%r991, %r961;
	mov.b32 	%r992, %r961;
	mov.b32 	%r1003, %r961;
	mov.b32 	%r1004, %r961;
	mov.b32 	%r1005, %r961;
	mov.b32 	%r1006, %r961;
	mov.b32 	%r1017, %r961;
	mov.b32 	%r1018, %r961;
	mov.b32 	%r1019, %r961;
	mov.b32 	%r1020, %r961;
	mov.b32 	%r1031, %r961;
	mov.b32 	%r1032, %r961;
	mov.b32 	%r1033, %r961;
	mov.b32 	%r1034, %r961;
	mov.b32 	%r1045, %r961;
	mov.b32 	%r1046, %r961;
	mov.b32 	%r1047, %r961;
	mov.b32 	%r1048, %r961;
	mov.b32 	%r1059, %r961;
	mov.b32 	%r1060, %r961;
	mov.b32 	%r1061, %r961;
	mov.b32 	%r1062, %r961;
	mov.b32 	%r1720, %r1719;
$L__BB0_1:                              // %__nv_exp2f.exit
                                        // =>This Inner Loop Header: Depth=1
	add.s32 	%r1682, %r1682, 64;
	setp.lt.u32 	%p1, %r1682, 3904;
	add.s32 	%r1305, %r1683, 1;
	setp.gt.s32 	%p2, %r1305, 2;
	selp.b32 	%r1683, 0, %r1305, %p2;
	.loc	1 47 20                         // gqa.py:47:20 @[ gqa.py:185:82 ]
	cp.async.wait_group 	4;
	bar.sync 	0;
	shl.b32 	%r1306, %r1683, 13;
	add.s32 	%r1308, %r191, %r1306;
$L__tmp2:
	.loc	1 177 16                        // gqa.py:177:16
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r329, %r330, %r331, %r332}, [%r225];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r441, %r442, %r443, %r444}, [%r230];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r553, %r554, %r555, %r556}, [%r235];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r665, %r666, %r667, %r668}, [%r240];
	// end inline asm
$L__tmp3:
	.loc	1 47 20                         // gqa.py:47:20 @[ gqa.py:185:82 ]
	shl.b32 	%r1309, %r13, 1;
	add.s32 	%r245, %r1308, %r1309;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r241, %r242, %r243, %r244}, [%r245];
	// end inline asm
	add.s32 	%r250, %r1308, %r1310;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r246, %r247, %r248, %r249}, [%r250];
	// end inline asm
	add.s32 	%r255, %r245, 1024;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r251, %r252, %r253, %r254}, [%r255];
	// end inline asm
	add.s32 	%r260, %r1308, %r1311;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r256, %r257, %r258, %r259}, [%r260];
	// end inline asm
	add.s32 	%r265, %r245, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r261, %r262, %r263, %r264}, [%r265];
	// end inline asm
	add.s32 	%r270, %r1308, %r1312;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r266, %r267, %r268, %r269}, [%r270];
	// end inline asm
	add.s32 	%r275, %r245, 3072;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r271, %r272, %r273, %r274}, [%r275];
	// end inline asm
	add.s32 	%r280, %r1308, %r1313;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r276, %r277, %r278, %r279}, [%r280];
	// end inline asm
	add.s32 	%r285, %r245, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r281, %r282, %r283, %r284}, [%r285];
	// end inline asm
	add.s32 	%r290, %r1308, %r1314;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r286, %r287, %r288, %r289}, [%r290];
	// end inline asm
	add.s32 	%r295, %r245, 5120;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r291, %r292, %r293, %r294}, [%r295];
	// end inline asm
	add.s32 	%r300, %r1308, %r1315;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r296, %r297, %r298, %r299}, [%r300];
	// end inline asm
	add.s32 	%r305, %r245, 6144;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r301, %r302, %r303, %r304}, [%r305];
	// end inline asm
	add.s32 	%r310, %r1308, %r1316;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r306, %r307, %r308, %r309}, [%r310];
	// end inline asm
	add.s32 	%r315, %r245, 7168;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r311, %r312, %r313, %r314}, [%r315];
	// end inline asm
	add.s32 	%r320, %r1308, %r1317;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r316, %r317, %r318, %r319}, [%r320];
	// end inline asm
	mov.b32 	%r531, 0;
	.loc	1 48 23                         // gqa.py:48:23 @[ gqa.py:185:82 ]
	mov.b32 	%r433, %r531;
	mov.b32 	%r434, %r531;
	mov.b32 	%r435, %r531;
	mov.b32 	%r436, %r531;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r433, %r434, %r435, %r436 }, { %r329, %r330, %r331, %r332 }, { %r241, %r242 }, { %r433, %r434, %r435, %r436 };
	// end inline asm
	mov.b32 	%r447, %r531;
	mov.b32 	%r448, %r531;
	mov.b32 	%r449, %r531;
	mov.b32 	%r450, %r531;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r447, %r448, %r449, %r450 }, { %r329, %r330, %r331, %r332 }, { %r251, %r252 }, { %r447, %r448, %r449, %r450 };
	// end inline asm
	mov.b32 	%r461, %r531;
	mov.b32 	%r462, %r531;
	mov.b32 	%r463, %r531;
	mov.b32 	%r464, %r531;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r461, %r462, %r463, %r464 }, { %r329, %r330, %r331, %r332 }, { %r261, %r262 }, { %r461, %r462, %r463, %r464 };
	// end inline asm
	mov.b32 	%r475, %r531;
	mov.b32 	%r476, %r531;
	mov.b32 	%r477, %r531;
	mov.b32 	%r478, %r531;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r475, %r476, %r477, %r478 }, { %r329, %r330, %r331, %r332 }, { %r271, %r272 }, { %r475, %r476, %r477, %r478 };
	// end inline asm
	mov.b32 	%r489, %r531;
	mov.b32 	%r490, %r531;
	mov.b32 	%r491, %r531;
	mov.b32 	%r492, %r531;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r489, %r490, %r491, %r492 }, { %r329, %r330, %r331, %r332 }, { %r281, %r282 }, { %r489, %r490, %r491, %r492 };
	// end inline asm
	mov.b32 	%r503, %r531;
	mov.b32 	%r504, %r531;
	mov.b32 	%r505, %r531;
	mov.b32 	%r506, %r531;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r503, %r504, %r505, %r506 }, { %r329, %r330, %r331, %r332 }, { %r291, %r292 }, { %r503, %r504, %r505, %r506 };
	// end inline asm
	mov.b32 	%r517, %r531;
	mov.b32 	%r518, %r531;
	mov.b32 	%r519, %r531;
	mov.b32 	%r520, %r531;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r517, %r518, %r519, %r520 }, { %r329, %r330, %r331, %r332 }, { %r301, %r302 }, { %r517, %r518, %r519, %r520 };
	// end inline asm
	mov.b32 	%r532, %r531;
	mov.b32 	%r533, %r531;
	mov.b32 	%r534, %r531;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r531, %r532, %r533, %r534 }, { %r329, %r330, %r331, %r332 }, { %r311, %r312 }, { %r531, %r532, %r533, %r534 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r433, %r434, %r435, %r436 }, { %r441, %r442, %r443, %r444 }, { %r243, %r244 }, { %r433, %r434, %r435, %r436 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r447, %r448, %r449, %r450 }, { %r441, %r442, %r443, %r444 }, { %r253, %r254 }, { %r447, %r448, %r449, %r450 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r461, %r462, %r463, %r464 }, { %r441, %r442, %r443, %r444 }, { %r263, %r264 }, { %r461, %r462, %r463, %r464 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r475, %r476, %r477, %r478 }, { %r441, %r442, %r443, %r444 }, { %r273, %r274 }, { %r475, %r476, %r477, %r478 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r489, %r490, %r491, %r492 }, { %r441, %r442, %r443, %r444 }, { %r283, %r284 }, { %r489, %r490, %r491, %r492 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r503, %r504, %r505, %r506 }, { %r441, %r442, %r443, %r444 }, { %r293, %r294 }, { %r503, %r504, %r505, %r506 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r517, %r518, %r519, %r520 }, { %r441, %r442, %r443, %r444 }, { %r303, %r304 }, { %r517, %r518, %r519, %r520 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r531, %r532, %r533, %r534 }, { %r441, %r442, %r443, %r444 }, { %r313, %r314 }, { %r531, %r532, %r533, %r534 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r433, %r434, %r435, %r436 }, { %r553, %r554, %r555, %r556 }, { %r246, %r247 }, { %r433, %r434, %r435, %r436 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r447, %r448, %r449, %r450 }, { %r553, %r554, %r555, %r556 }, { %r256, %r257 }, { %r447, %r448, %r449, %r450 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r461, %r462, %r463, %r464 }, { %r553, %r554, %r555, %r556 }, { %r266, %r267 }, { %r461, %r462, %r463, %r464 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r475, %r476, %r477, %r478 }, { %r553, %r554, %r555, %r556 }, { %r276, %r277 }, { %r475, %r476, %r477, %r478 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r489, %r490, %r491, %r492 }, { %r553, %r554, %r555, %r556 }, { %r286, %r287 }, { %r489, %r490, %r491, %r492 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r503, %r504, %r505, %r506 }, { %r553, %r554, %r555, %r556 }, { %r296, %r297 }, { %r503, %r504, %r505, %r506 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r517, %r518, %r519, %r520 }, { %r553, %r554, %r555, %r556 }, { %r306, %r307 }, { %r517, %r518, %r519, %r520 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r531, %r532, %r533, %r534 }, { %r553, %r554, %r555, %r556 }, { %r316, %r317 }, { %r531, %r532, %r533, %r534 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r433, %r434, %r435, %r436 }, { %r665, %r666, %r667, %r668 }, { %r248, %r249 }, { %r433, %r434, %r435, %r436 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r447, %r448, %r449, %r450 }, { %r665, %r666, %r667, %r668 }, { %r258, %r259 }, { %r447, %r448, %r449, %r450 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r461, %r462, %r463, %r464 }, { %r665, %r666, %r667, %r668 }, { %r268, %r269 }, { %r461, %r462, %r463, %r464 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r475, %r476, %r477, %r478 }, { %r665, %r666, %r667, %r668 }, { %r278, %r279 }, { %r475, %r476, %r477, %r478 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r489, %r490, %r491, %r492 }, { %r665, %r666, %r667, %r668 }, { %r288, %r289 }, { %r489, %r490, %r491, %r492 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r503, %r504, %r505, %r506 }, { %r665, %r666, %r667, %r668 }, { %r298, %r299 }, { %r503, %r504, %r505, %r506 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r517, %r518, %r519, %r520 }, { %r665, %r666, %r667, %r668 }, { %r308, %r309 }, { %r517, %r518, %r519, %r520 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r531, %r532, %r533, %r534 }, { %r665, %r666, %r667, %r668 }, { %r318, %r319 }, { %r531, %r532, %r533, %r534 };
	// end inline asm
	.loc	2 167 27                        // standard.py:167:27 @[ gqa.py:185:82 ]
	max.f32 	%r1318, %r433, %r434;
	max.f32 	%r1319, %r435, %r436;
	max.f32 	%r1320, %r1318, %r447;
	max.f32 	%r1321, %r1320, %r448;
	max.f32 	%r1322, %r1319, %r449;
	max.f32 	%r1323, %r1322, %r450;
	max.f32 	%r1324, %r1321, %r461;
	max.f32 	%r1325, %r1324, %r462;
	max.f32 	%r1326, %r1323, %r463;
	max.f32 	%r1327, %r1326, %r464;
	max.f32 	%r1328, %r1325, %r475;
	max.f32 	%r1329, %r1328, %r476;
	max.f32 	%r1330, %r1327, %r477;
	max.f32 	%r1331, %r1330, %r478;
	max.f32 	%r1332, %r1329, %r489;
	max.f32 	%r1333, %r1332, %r490;
	max.f32 	%r1334, %r1331, %r491;
	max.f32 	%r1335, %r1334, %r492;
	max.f32 	%r1336, %r1333, %r503;
	max.f32 	%r1337, %r1336, %r504;
	max.f32 	%r1338, %r1335, %r505;
	max.f32 	%r1339, %r1338, %r506;
	max.f32 	%r1340, %r1337, %r517;
	max.f32 	%r1341, %r1340, %r518;
	max.f32 	%r1342, %r1339, %r519;
	max.f32 	%r1343, %r1342, %r520;
	max.f32 	%r1344, %r1341, %r531;
	max.f32 	%r1345, %r1344, %r532;
	max.f32 	%r1346, %r1343, %r533;
	max.f32 	%r1347, %r1346, %r534;
	.loc	2 188 40                        // standard.py:188:40 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1348, %r1345, 2, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ gqa.py:185:82 ]
	max.f32 	%r1349, %r1345, %r1348;
	.loc	2 188 40                        // standard.py:188:40 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1350, %r1349, 1, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ gqa.py:185:82 ]
	max.f32 	%r1351, %r1349, %r1350;
	.loc	2 188 40                        // standard.py:188:40 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1352, %r1347, 2, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ gqa.py:185:82 ]
	max.f32 	%r1353, %r1347, %r1352;
	.loc	2 188 40                        // standard.py:188:40 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1354, %r1353, 1, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ gqa.py:185:82 ]
	max.f32 	%r1355, %r1353, %r1354;
	.loc	1 55 51                         // gqa.py:55:51 @[ gqa.py:185:82 ]
	mul.f32 	%r1356, %r5, %r1351;
	mul.f32 	%r1357, %r5, %r1355;
	.loc	1 55 35                         // gqa.py:55:35 @[ gqa.py:185:82 ]
	max.f32 	%r78, %r1685, %r1356;
	max.f32 	%r79, %r1686, %r1357;
	.loc	1 56 33                         // gqa.py:56:33 @[ gqa.py:185:82 ]
	neg.f32 	%r1358, %r78;
	fma.rn.f32 	%r1359, %r5, %r433, %r1358;
	fma.rn.f32 	%r1360, %r5, %r434, %r1358;
	neg.f32 	%r1361, %r79;
	fma.rn.f32 	%r1362, %r5, %r435, %r1361;
	fma.rn.f32 	%r1363, %r5, %r436, %r1361;
	fma.rn.f32 	%r1364, %r5, %r447, %r1358;
	fma.rn.f32 	%r1365, %r5, %r448, %r1358;
	fma.rn.f32 	%r1366, %r5, %r449, %r1361;
	fma.rn.f32 	%r1367, %r5, %r450, %r1361;
	fma.rn.f32 	%r1368, %r5, %r461, %r1358;
	fma.rn.f32 	%r1369, %r5, %r462, %r1358;
	fma.rn.f32 	%r1370, %r5, %r463, %r1361;
	fma.rn.f32 	%r1371, %r5, %r464, %r1361;
	fma.rn.f32 	%r1372, %r5, %r475, %r1358;
	fma.rn.f32 	%r1373, %r5, %r476, %r1358;
	fma.rn.f32 	%r1374, %r5, %r477, %r1361;
	fma.rn.f32 	%r1375, %r5, %r478, %r1361;
	fma.rn.f32 	%r1376, %r5, %r489, %r1358;
	fma.rn.f32 	%r1377, %r5, %r490, %r1358;
	fma.rn.f32 	%r1378, %r5, %r491, %r1361;
	fma.rn.f32 	%r1379, %r5, %r492, %r1361;
	fma.rn.f32 	%r1380, %r5, %r503, %r1358;
	fma.rn.f32 	%r1381, %r5, %r504, %r1358;
	fma.rn.f32 	%r1382, %r5, %r505, %r1361;
	fma.rn.f32 	%r1383, %r5, %r506, %r1361;
	fma.rn.f32 	%r1384, %r5, %r517, %r1358;
	fma.rn.f32 	%r1385, %r5, %r518, %r1358;
	fma.rn.f32 	%r1386, %r5, %r519, %r1361;
	fma.rn.f32 	%r1387, %r5, %r520, %r1361;
	fma.rn.f32 	%r1388, %r5, %r531, %r1358;
	fma.rn.f32 	%r1389, %r5, %r532, %r1358;
	fma.rn.f32 	%r1390, %r5, %r533, %r1361;
	fma.rn.f32 	%r1391, %r5, %r534, %r1361;
	.loc	1 57 25                         // gqa.py:57:25 @[ gqa.py:185:82 ]
	ex2.approx.ftz.f32 	%r1392, %r1359;
	ex2.approx.ftz.f32 	%r1393, %r1360;
	ex2.approx.ftz.f32 	%r1394, %r1362;
	ex2.approx.ftz.f32 	%r1395, %r1363;
	ex2.approx.ftz.f32 	%r1396, %r1364;
	ex2.approx.ftz.f32 	%r1397, %r1365;
	ex2.approx.ftz.f32 	%r1398, %r1366;
	ex2.approx.ftz.f32 	%r1399, %r1367;
	ex2.approx.ftz.f32 	%r1400, %r1368;
	ex2.approx.ftz.f32 	%r1401, %r1369;
	ex2.approx.ftz.f32 	%r1402, %r1370;
	ex2.approx.ftz.f32 	%r1403, %r1371;
	ex2.approx.ftz.f32 	%r1404, %r1372;
	ex2.approx.ftz.f32 	%r1405, %r1373;
	ex2.approx.ftz.f32 	%r1406, %r1374;
	ex2.approx.ftz.f32 	%r1407, %r1375;
	ex2.approx.ftz.f32 	%r1408, %r1376;
	ex2.approx.ftz.f32 	%r1409, %r1377;
	ex2.approx.ftz.f32 	%r1410, %r1378;
	ex2.approx.ftz.f32 	%r1411, %r1379;
	ex2.approx.ftz.f32 	%r1412, %r1380;
	ex2.approx.ftz.f32 	%r1413, %r1381;
	ex2.approx.ftz.f32 	%r1414, %r1382;
	ex2.approx.ftz.f32 	%r1415, %r1383;
	ex2.approx.ftz.f32 	%r1416, %r1384;
	ex2.approx.ftz.f32 	%r1417, %r1385;
	ex2.approx.ftz.f32 	%r1418, %r1386;
	ex2.approx.ftz.f32 	%r1419, %r1387;
	ex2.approx.ftz.f32 	%r1420, %r1388;
	ex2.approx.ftz.f32 	%r1421, %r1389;
	ex2.approx.ftz.f32 	%r1422, %r1390;
	ex2.approx.ftz.f32 	%r1423, %r1391;
	.loc	2 260 15                        // standard.py:260:15 @[ gqa.py:185:82 ]
	add.f32 	%r1424, %r1392, %r1393;
	add.f32 	%r1425, %r1394, %r1395;
	add.f32 	%r1426, %r1424, %r1396;
	add.f32 	%r1427, %r1426, %r1397;
	add.f32 	%r1428, %r1425, %r1398;
	add.f32 	%r1429, %r1428, %r1399;
	add.f32 	%r1430, %r1427, %r1400;
	add.f32 	%r1431, %r1430, %r1401;
	add.f32 	%r1432, %r1429, %r1402;
	add.f32 	%r1433, %r1432, %r1403;
	add.f32 	%r1434, %r1431, %r1404;
	add.f32 	%r1435, %r1434, %r1405;
	add.f32 	%r1436, %r1433, %r1406;
	add.f32 	%r1437, %r1436, %r1407;
	add.f32 	%r1438, %r1435, %r1408;
	add.f32 	%r1439, %r1438, %r1409;
	add.f32 	%r1440, %r1437, %r1410;
	add.f32 	%r1441, %r1440, %r1411;
	add.f32 	%r1442, %r1439, %r1412;
	add.f32 	%r1443, %r1442, %r1413;
	add.f32 	%r1444, %r1441, %r1414;
	add.f32 	%r1445, %r1444, %r1415;
	add.f32 	%r1446, %r1443, %r1416;
	add.f32 	%r1447, %r1446, %r1417;
	add.f32 	%r1448, %r1445, %r1418;
	add.f32 	%r1449, %r1448, %r1419;
	add.f32 	%r1450, %r1447, %r1420;
	add.f32 	%r1451, %r1450, %r1421;
	add.f32 	%r1452, %r1449, %r1422;
	add.f32 	%r1453, %r1452, %r1423;
	.loc	2 290 36                        // standard.py:290:36 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1454, %r1451, 2, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ gqa.py:185:82 ]
	add.f32 	%r1455, %r1451, %r1454;
	.loc	2 290 36                        // standard.py:290:36 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1456, %r1455, 1, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ gqa.py:185:82 ]
	add.f32 	%r1457, %r1455, %r1456;
	.loc	2 290 36                        // standard.py:290:36 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1458, %r1453, 2, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ gqa.py:185:82 ]
	add.f32 	%r1459, %r1453, %r1458;
	.loc	2 290 36                        // standard.py:290:36 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1460, %r1459, 1, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ gqa.py:185:82 ]
	add.f32 	%r1461, %r1459, %r1460;
	.loc	1 60 35                         // gqa.py:60:35 @[ gqa.py:185:82 ]
	sub.f32 	%r1462, %r1685, %r78;
	sub.f32 	%r1463, %r1686, %r79;
	.loc	1 60 29                         // gqa.py:60:29 @[ gqa.py:185:82 ]
	ex2.approx.ftz.f32 	%r1464, %r1462;
	ex2.approx.ftz.f32 	%r1465, %r1463;
	.loc	1 61 28                         // gqa.py:61:28 @[ gqa.py:185:82 ]
	fma.rn.f32 	%r1719, %r1719, %r1464, %r1457;
	fma.rn.f32 	%r1720, %r1720, %r1465, %r1461;
	.loc	1 63 20                         // gqa.py:63:20 @[ gqa.py:185:82 ]
	mul.f32 	%r961, %r961, %r1464;
	mul.f32 	%r962, %r962, %r1464;
	mul.f32 	%r963, %r963, %r1465;
	mul.f32 	%r964, %r964, %r1465;
	mul.f32 	%r975, %r975, %r1464;
	mul.f32 	%r976, %r976, %r1464;
	mul.f32 	%r977, %r977, %r1465;
	mul.f32 	%r978, %r978, %r1465;
	mul.f32 	%r989, %r989, %r1464;
	mul.f32 	%r990, %r990, %r1464;
	mul.f32 	%r991, %r991, %r1465;
	mul.f32 	%r992, %r992, %r1465;
	mul.f32 	%r1003, %r1003, %r1464;
	mul.f32 	%r1004, %r1004, %r1464;
	mul.f32 	%r1005, %r1005, %r1465;
	mul.f32 	%r1006, %r1006, %r1465;
	mul.f32 	%r1017, %r1017, %r1464;
	mul.f32 	%r1018, %r1018, %r1464;
	mul.f32 	%r1019, %r1019, %r1465;
	mul.f32 	%r1020, %r1020, %r1465;
	mul.f32 	%r1031, %r1031, %r1464;
	mul.f32 	%r1032, %r1032, %r1464;
	mul.f32 	%r1033, %r1033, %r1465;
	mul.f32 	%r1034, %r1034, %r1465;
	mul.f32 	%r1045, %r1045, %r1464;
	mul.f32 	%r1046, %r1046, %r1464;
	mul.f32 	%r1047, %r1047, %r1465;
	mul.f32 	%r1048, %r1048, %r1465;
	mul.f32 	%r1059, %r1059, %r1464;
	mul.f32 	%r1060, %r1060, %r1464;
	mul.f32 	%r1061, %r1061, %r1465;
	mul.f32 	%r1062, %r1062, %r1465;
	.loc	1 65 20                         // gqa.py:65:20 @[ gqa.py:185:82 ]
	add.s32 	%r1466, %r191, 24576;
	add.s32 	%r1467, %r1466, %r1306;
	shl.b32 	%r1468, %r22, 1;
	add.s32 	%r773, %r1467, %r1468;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r769, %r770, %r771, %r772}, [%r773];
	// end inline asm
	add.s32 	%r778, %r773, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r774, %r775, %r776, %r777}, [%r778];
	// end inline asm
	add.s32 	%r783, %r1467, %r1469;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r779, %r780, %r781, %r782}, [%r783];
	// end inline asm
	add.s32 	%r788, %r1467, %r1470;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r784, %r785, %r786, %r787}, [%r788];
	// end inline asm
	add.s32 	%r793, %r1467, %r1471;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r789, %r790, %r791, %r792}, [%r793];
	// end inline asm
	add.s32 	%r798, %r1467, %r1472;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r794, %r795, %r796, %r797}, [%r798];
	// end inline asm
	add.s32 	%r803, %r1467, %r1473;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r799, %r800, %r801, %r802}, [%r803];
	// end inline asm
	add.s32 	%r808, %r1467, %r1474;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r804, %r805, %r806, %r807}, [%r808];
	// end inline asm
	add.s32 	%r813, %r1467, %r1475;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r809, %r810, %r811, %r812}, [%r813];
	// end inline asm
	add.s32 	%r818, %r1467, %r1476;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r814, %r815, %r816, %r817}, [%r818];
	// end inline asm
	add.s32 	%r823, %r1467, %r1477;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r819, %r820, %r821, %r822}, [%r823];
	// end inline asm
	add.s32 	%r828, %r1467, %r1478;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r824, %r825, %r826, %r827}, [%r828];
	// end inline asm
	add.s32 	%r833, %r1467, %r1479;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r829, %r830, %r831, %r832}, [%r833];
	// end inline asm
	add.s32 	%r838, %r1467, %r1480;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r834, %r835, %r836, %r837}, [%r838];
	// end inline asm
	add.s32 	%r843, %r1467, %r1481;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r839, %r840, %r841, %r842}, [%r843];
	// end inline asm
	add.s32 	%r848, %r1467, %r1482;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r844, %r845, %r846, %r847}, [%r848];
	// end inline asm
	.loc	1 69 21                         // gqa.py:69:21 @[ gqa.py:185:82 ]
	cvt.rn.f16x2.f32 	%r871, %r1393, %r1392;
	cvt.rn.f16x2.f32 	%r872, %r1395, %r1394;
	cvt.rn.f16x2.f32 	%r873, %r1397, %r1396;
	cvt.rn.f16x2.f32 	%r874, %r1399, %r1398;
	cvt.rn.f16x2.f32 	%r983, %r1401, %r1400;
	cvt.rn.f16x2.f32 	%r984, %r1403, %r1402;
	cvt.rn.f16x2.f32 	%r985, %r1405, %r1404;
	cvt.rn.f16x2.f32 	%r986, %r1407, %r1406;
	cvt.rn.f16x2.f32 	%r1095, %r1409, %r1408;
	cvt.rn.f16x2.f32 	%r1096, %r1411, %r1410;
	cvt.rn.f16x2.f32 	%r1097, %r1413, %r1412;
	cvt.rn.f16x2.f32 	%r1098, %r1415, %r1414;
	cvt.rn.f16x2.f32 	%r1207, %r1417, %r1416;
	cvt.rn.f16x2.f32 	%r1208, %r1419, %r1418;
	cvt.rn.f16x2.f32 	%r1209, %r1421, %r1420;
	cvt.rn.f16x2.f32 	%r1210, %r1423, %r1422;
	.loc	1 70 27                         // gqa.py:70:27 @[ gqa.py:185:82 ]
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r961, %r962, %r963, %r964 }, { %r871, %r872, %r873, %r874 }, { %r769, %r770 }, { %r961, %r962, %r963, %r964 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r975, %r976, %r977, %r978 }, { %r871, %r872, %r873, %r874 }, { %r779, %r780 }, { %r975, %r976, %r977, %r978 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r989, %r990, %r991, %r992 }, { %r871, %r872, %r873, %r874 }, { %r789, %r790 }, { %r989, %r990, %r991, %r992 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1003, %r1004, %r1005, %r1006 }, { %r871, %r872, %r873, %r874 }, { %r799, %r800 }, { %r1003, %r1004, %r1005, %r1006 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1017, %r1018, %r1019, %r1020 }, { %r871, %r872, %r873, %r874 }, { %r809, %r810 }, { %r1017, %r1018, %r1019, %r1020 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1031, %r1032, %r1033, %r1034 }, { %r871, %r872, %r873, %r874 }, { %r819, %r820 }, { %r1031, %r1032, %r1033, %r1034 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1045, %r1046, %r1047, %r1048 }, { %r871, %r872, %r873, %r874 }, { %r829, %r830 }, { %r1045, %r1046, %r1047, %r1048 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1059, %r1060, %r1061, %r1062 }, { %r871, %r872, %r873, %r874 }, { %r839, %r840 }, { %r1059, %r1060, %r1061, %r1062 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r961, %r962, %r963, %r964 }, { %r983, %r984, %r985, %r986 }, { %r771, %r772 }, { %r961, %r962, %r963, %r964 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r975, %r976, %r977, %r978 }, { %r983, %r984, %r985, %r986 }, { %r781, %r782 }, { %r975, %r976, %r977, %r978 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r989, %r990, %r991, %r992 }, { %r983, %r984, %r985, %r986 }, { %r791, %r792 }, { %r989, %r990, %r991, %r992 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1003, %r1004, %r1005, %r1006 }, { %r983, %r984, %r985, %r986 }, { %r801, %r802 }, { %r1003, %r1004, %r1005, %r1006 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1017, %r1018, %r1019, %r1020 }, { %r983, %r984, %r985, %r986 }, { %r811, %r812 }, { %r1017, %r1018, %r1019, %r1020 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1031, %r1032, %r1033, %r1034 }, { %r983, %r984, %r985, %r986 }, { %r821, %r822 }, { %r1031, %r1032, %r1033, %r1034 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1045, %r1046, %r1047, %r1048 }, { %r983, %r984, %r985, %r986 }, { %r831, %r832 }, { %r1045, %r1046, %r1047, %r1048 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1059, %r1060, %r1061, %r1062 }, { %r983, %r984, %r985, %r986 }, { %r841, %r842 }, { %r1059, %r1060, %r1061, %r1062 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r961, %r962, %r963, %r964 }, { %r1095, %r1096, %r1097, %r1098 }, { %r774, %r775 }, { %r961, %r962, %r963, %r964 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r975, %r976, %r977, %r978 }, { %r1095, %r1096, %r1097, %r1098 }, { %r784, %r785 }, { %r975, %r976, %r977, %r978 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r989, %r990, %r991, %r992 }, { %r1095, %r1096, %r1097, %r1098 }, { %r794, %r795 }, { %r989, %r990, %r991, %r992 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1003, %r1004, %r1005, %r1006 }, { %r1095, %r1096, %r1097, %r1098 }, { %r804, %r805 }, { %r1003, %r1004, %r1005, %r1006 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1017, %r1018, %r1019, %r1020 }, { %r1095, %r1096, %r1097, %r1098 }, { %r814, %r815 }, { %r1017, %r1018, %r1019, %r1020 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1031, %r1032, %r1033, %r1034 }, { %r1095, %r1096, %r1097, %r1098 }, { %r824, %r825 }, { %r1031, %r1032, %r1033, %r1034 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1045, %r1046, %r1047, %r1048 }, { %r1095, %r1096, %r1097, %r1098 }, { %r834, %r835 }, { %r1045, %r1046, %r1047, %r1048 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1059, %r1060, %r1061, %r1062 }, { %r1095, %r1096, %r1097, %r1098 }, { %r844, %r845 }, { %r1059, %r1060, %r1061, %r1062 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r961, %r962, %r963, %r964 }, { %r1207, %r1208, %r1209, %r1210 }, { %r776, %r777 }, { %r961, %r962, %r963, %r964 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r975, %r976, %r977, %r978 }, { %r1207, %r1208, %r1209, %r1210 }, { %r786, %r787 }, { %r975, %r976, %r977, %r978 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r989, %r990, %r991, %r992 }, { %r1207, %r1208, %r1209, %r1210 }, { %r796, %r797 }, { %r989, %r990, %r991, %r992 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1003, %r1004, %r1005, %r1006 }, { %r1207, %r1208, %r1209, %r1210 }, { %r806, %r807 }, { %r1003, %r1004, %r1005, %r1006 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1017, %r1018, %r1019, %r1020 }, { %r1207, %r1208, %r1209, %r1210 }, { %r816, %r817 }, { %r1017, %r1018, %r1019, %r1020 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1031, %r1032, %r1033, %r1034 }, { %r1207, %r1208, %r1209, %r1210 }, { %r826, %r827 }, { %r1031, %r1032, %r1033, %r1034 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1045, %r1046, %r1047, %r1048 }, { %r1207, %r1208, %r1209, %r1210 }, { %r836, %r837 }, { %r1045, %r1046, %r1047, %r1048 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1059, %r1060, %r1061, %r1062 }, { %r1207, %r1208, %r1209, %r1210 }, { %r846, %r847 }, { %r1059, %r1060, %r1061, %r1062 };
	// end inline asm
	.loc	1 44 33                         // gqa.py:44:33 @[ gqa.py:185:82 ]
	add.s32 	%r1483, %r1684, 1;
	setp.gt.s32 	%p3, %r1483, 2;
	selp.b32 	%r1684, 0, %r1483, %p3;
	.loc	1 47 20                         // gqa.py:47:20 @[ gqa.py:185:82 ]
	add.s64 	%rd123, %rd151, %rd7;
	add.s64 	%rd124, %rd153, %rd7;
	shl.b32 	%r1484, %r1684, 13;
	add.s32 	%r1485, %r191, %r1484;
	bar.sync 	0;
	add.s32 	%r1297, %r1485, %r190;
	add.s32 	%r1299, %r1297, 4096;
	selp.b32 	%r1298, 16, 0, %p1;
	// begin inline asm
	cp.async.cg.shared.global [ %r1297 + 0 ], [ %rd123 + 0 ], 0x10, %r1298;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r1299 + 0 ], [ %rd124 + 0 ], 0x10, %r1298;
	// end inline asm
	cp.async.commit_group;
	.loc	1 65 20                         // gqa.py:65:20 @[ gqa.py:185:82 ]
	add.s64 	%rd125, %rd152, %rd7;
	add.s64 	%rd126, %rd154, %rd7;
	add.s32 	%r1487, %r1466, %r1484;
	add.s32 	%r1301, %r1487, %r190;
	add.s32 	%r1303, %r1301, 4096;
	// begin inline asm
	cp.async.cg.shared.global [ %r1301 + 0 ], [ %rd125 + 0 ], 0x10, %r1298;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r1303 + 0 ], [ %rd126 + 0 ], 0x10, %r1298;
	// end inline asm
	cp.async.commit_group;
	.loc	1 44 33                         // gqa.py:44:33 @[ gqa.py:185:82 ]
	add.s64 	%rd154, %rd154, %rd9;
	add.s64 	%rd153, %rd153, %rd11;
	add.s64 	%rd152, %rd152, %rd9;
	add.s64 	%rd151, %rd151, %rd11;
	setp.lt.u32 	%p4, %r1682, 4032;
	mov.b32 	%r1685, %r78;
	mov.b32 	%r1686, %r79;
	@%p4 bra 	$L__BB0_1;
// %bb.2:
	cp.async.wait_group 	0;
	bar.sync 	0;
$L__tmp4:
	.loc	1 198 24                        // gqa.py:198:24
	setp.lt.f32 	%p5, %r1719, 0f00800000;
	mul.f32 	%r1488, %r1719, 0f4B000000;
	selp.f32 	%r115, %r1488, %r1719, %p5;
	selp.f32 	%r1489, 0fC1B80000, 0f00000000, %p5;
	add.s32 	%r1490, %r115, -1060439283;
	and.b32 	%r1491, %r1490, -8388608;
	sub.s32 	%r1492, %r115, %r1491;
	cvt.rn.f32.s32 	%r1493, %r1491;
	mov.b32 	%r1494, 0f34000000;
	fma.rn.ftz.f32 	%r1495, %r1493, %r1494, %r1489;
	add.f32 	%r1496, %r1492, 0fBF800000;
	mov.b32 	%r1497, 0fBE2C7F30;
	mov.b32 	%r1498, 0f3DC6B27F;
	fma.rn.ftz.f32 	%r1499, %r1498, %r1496, %r1497;
	mov.b32 	%r1500, 0f3E2FCF2A;
	fma.rn.ftz.f32 	%r1501, %r1499, %r1496, %r1500;
	mov.b32 	%r1502, 0fBE374E43;
	fma.rn.ftz.f32 	%r1503, %r1501, %r1496, %r1502;
	mov.b32 	%r1504, 0f3E520BF4;
	fma.rn.ftz.f32 	%r1505, %r1503, %r1496, %r1504;
	mov.b32 	%r1506, 0fBE763C8B;
	fma.rn.ftz.f32 	%r1507, %r1505, %r1496, %r1506;
	mov.b32 	%r1508, 0f3E93BF99;
	fma.rn.ftz.f32 	%r1509, %r1507, %r1496, %r1508;
	mov.b32 	%r1510, 0fBEB8AA49;
	fma.rn.ftz.f32 	%r1511, %r1509, %r1496, %r1510;
	mov.b32 	%r1512, 0f3EF6384A;
	fma.rn.ftz.f32 	%r1513, %r1511, %r1496, %r1512;
	mov.b32 	%r1514, 0fBF38AA3B;
	fma.rn.ftz.f32 	%r1515, %r1513, %r1496, %r1514;
	mul.f32 	%r1516, %r1496, %r1515;
	mul.f32 	%r1517, %r1496, %r1516;
	mov.b32 	%r1518, 0f3FB8AA3B;
	fma.rn.ftz.f32 	%r1519, %r1496, %r1518, %r1517;
	add.f32 	%r1721, %r1495, %r1519;
	setp.lt.u32 	%p6, %r115, 2139095040;
	mov.b32 	%r1520, 0f7F800000;
	@%p6 bra 	$L__BB0_4;
// %bb.3:                               // %__nv_fmaf_rn.exit.i.i
	.loc	1 0 24                          // gqa.py:0:24
	fma.rn.ftz.f32 	%r1721, %r115, %r1520, %r1520;
$L__BB0_4:                              // %__nv_log2f.exit
	.loc	1 198 24                        // gqa.py:198:24
	setp.lt.f32 	%p7, %r1720, 0f00800000;
	mul.f32 	%r1521, %r1720, 0f4B000000;
	selp.f32 	%r119, %r1521, %r1720, %p7;
	selp.f32 	%r1522, 0fC1B80000, 0f00000000, %p7;
	add.s32 	%r1523, %r119, -1060439283;
	and.b32 	%r1524, %r1523, -8388608;
	sub.s32 	%r1525, %r119, %r1524;
	cvt.rn.f32.s32 	%r1526, %r1524;
	fma.rn.ftz.f32 	%r1528, %r1526, %r1494, %r1522;
	add.f32 	%r1529, %r1525, 0fBF800000;
	fma.rn.ftz.f32 	%r1532, %r1498, %r1529, %r1497;
	fma.rn.ftz.f32 	%r1534, %r1532, %r1529, %r1500;
	fma.rn.ftz.f32 	%r1536, %r1534, %r1529, %r1502;
	fma.rn.ftz.f32 	%r1538, %r1536, %r1529, %r1504;
	fma.rn.ftz.f32 	%r1540, %r1538, %r1529, %r1506;
	fma.rn.ftz.f32 	%r1542, %r1540, %r1529, %r1508;
	fma.rn.ftz.f32 	%r1544, %r1542, %r1529, %r1510;
	fma.rn.ftz.f32 	%r1546, %r1544, %r1529, %r1512;
	fma.rn.ftz.f32 	%r1548, %r1546, %r1529, %r1514;
	mul.f32 	%r1549, %r1529, %r1548;
	mul.f32 	%r1550, %r1529, %r1549;
	fma.rn.ftz.f32 	%r1552, %r1529, %r1518, %r1550;
	add.f32 	%r1722, %r1528, %r1552;
	setp.lt.u32 	%p8, %r119, 2139095040;
	@%p8 bra 	$L__BB0_6;
// %bb.5:                               // %__nv_fmaf_rn.exit.i.i179
	.loc	1 0 24                          // gqa.py:0:24
	fma.rn.ftz.f32 	%r1722, %r119, %r1520, %r1520;
$L__BB0_6:                              // %__nv_log2f.exit182
	.loc	1 167 46                        // gqa.py:167:46
	and.b32 	%r1571, %r3, 128;
	.loc	1 198 24                        // gqa.py:198:24
	setp.eq.f32 	%p10, %r115, 0f00000000;
	selp.f32 	%r1572, 0fFF800000, %r1721, %p10;
	.loc	1 159 19                        // gqa.py:159:19
	add.s64 	%rd133, %rd23, %rd7;
	.loc	1 164 8                         // gqa.py:164:8
	cvt.s64.s32 	%rd134, %r123;
	.loc	1 167 46                        // gqa.py:167:46
	and.b32 	%r1573, %r3, 127;
	.loc	1 167 33                        // gqa.py:167:33
	or.b32 	%r1574, %r2, %r1573;
	.loc	1 167 46                        // gqa.py:167:46
	setp.eq.s32 	%p9, %r1571, 0;
	.loc	1 198 24                        // gqa.py:198:24
	setp.eq.f32 	%p11, %r119, 0f00000000;
	selp.f32 	%r1575, 0fFF800000, %r1722, %p11;
	.loc	1 198 11                        // gqa.py:198:11
	add.f32 	%r1576, %r78, %r1572;
	add.f32 	%r1577, %r79, %r1575;
	.loc	1 199 16                        // gqa.py:199:16
	div.full.f32 	%r1578, %r961, %r1719;
	div.full.f32 	%r1579, %r962, %r1719;
	div.full.f32 	%r1580, %r963, %r1720;
	div.full.f32 	%r1581, %r964, %r1720;
	div.full.f32 	%r1582, %r975, %r1719;
	div.full.f32 	%r1583, %r976, %r1719;
	div.full.f32 	%r1584, %r977, %r1720;
	div.full.f32 	%r1585, %r978, %r1720;
	div.full.f32 	%r1586, %r989, %r1719;
	div.full.f32 	%r1587, %r990, %r1719;
	div.full.f32 	%r1588, %r991, %r1720;
	div.full.f32 	%r1589, %r992, %r1720;
	div.full.f32 	%r1590, %r1003, %r1719;
	div.full.f32 	%r1591, %r1004, %r1719;
	div.full.f32 	%r1592, %r1005, %r1720;
	div.full.f32 	%r1593, %r1006, %r1720;
	div.full.f32 	%r1594, %r1017, %r1719;
	div.full.f32 	%r1595, %r1018, %r1719;
	div.full.f32 	%r1596, %r1019, %r1720;
	div.full.f32 	%r1597, %r1020, %r1720;
	div.full.f32 	%r1598, %r1031, %r1719;
	div.full.f32 	%r1599, %r1032, %r1719;
	div.full.f32 	%r1600, %r1033, %r1720;
	div.full.f32 	%r1601, %r1034, %r1720;
	div.full.f32 	%r1602, %r1045, %r1719;
	div.full.f32 	%r1603, %r1046, %r1719;
	div.full.f32 	%r1604, %r1047, %r1720;
	div.full.f32 	%r1605, %r1048, %r1720;
	div.full.f32 	%r1606, %r1059, %r1719;
	div.full.f32 	%r1607, %r1060, %r1719;
	div.full.f32 	%r1608, %r1061, %r1720;
	div.full.f32 	%r1609, %r1062, %r1720;
	.loc	1 200 26                        // gqa.py:200:26
	shl.b32 	%r1610, %r1, 5;
	.loc	1 200 17                        // gqa.py:200:17
	mul.wide.u32 	%rd135, %r1610, 4;
	add.s64 	%rd136, %rd22, %rd135;
	.loc	1 200 34                        // gqa.py:200:34
	mul.wide.s32 	%rd137, %r1574, 4;
	add.s64 	%rd127, %rd136, %rd137;
	.loc	1 201 21                        // gqa.py:201:21
	shl.b32 	%r1611, %r3, 1;
	and.b32 	%r1612, %r1611, 192;
	add.s32 	%r1614, %r191, %r1612;
	and.b32 	%r1615, %r3, 28;
	add.s32 	%r1616, %r1614, %r1615;
	shl.b32 	%r1617, %r1571, 1;
	add.s32 	%r1618, %r1616, %r1617;
	st.shared.b32 	[%r1618], %r1576;
	st.shared.b32 	[%r1618+32], %r1577;
	bar.sync 	0;
	shl.b32 	%r1619, %r1573, 2;
	add.s32 	%r1620, %r191, %r1619;
	ld.shared.b32 	%r1554, [%r1620];
	// begin inline asm
	@%p9 st.global.b32 [ %rd127 + 0 ], { %r1554 };
	// end inline asm
	.loc	1 202 33                        // gqa.py:202:33
	cvt.rn.f16x2.f32 	%r1621, %r1579, %r1578;
	cvt.rn.f16x2.f32 	%r1622, %r1581, %r1580;
	cvt.rn.f16x2.f32 	%r1623, %r1583, %r1582;
	cvt.rn.f16x2.f32 	%r1624, %r1585, %r1584;
	cvt.rn.f16x2.f32 	%r1625, %r1587, %r1586;
	cvt.rn.f16x2.f32 	%r1626, %r1589, %r1588;
	cvt.rn.f16x2.f32 	%r1627, %r1591, %r1590;
	cvt.rn.f16x2.f32 	%r1628, %r1593, %r1592;
	cvt.rn.f16x2.f32 	%r1629, %r1595, %r1594;
	cvt.rn.f16x2.f32 	%r1630, %r1597, %r1596;
	cvt.rn.f16x2.f32 	%r1631, %r1599, %r1598;
	cvt.rn.f16x2.f32 	%r1632, %r1601, %r1600;
	cvt.rn.f16x2.f32 	%r1633, %r1603, %r1602;
	cvt.rn.f16x2.f32 	%r1634, %r1605, %r1604;
	cvt.rn.f16x2.f32 	%r1635, %r1607, %r1606;
	cvt.rn.f16x2.f32 	%r1636, %r1609, %r1608;
	.loc	1 202 26                        // gqa.py:202:26
	mul.lo.s64 	%rd138, %rd2, %rd134;
	mul.lo.s64 	%rd139, %rd3, %rd134;
	mul.lo.s64 	%rd140, %rd4, %rd134;
	mul.lo.s64 	%rd141, %rd5, %rd134;
	shl.b64 	%rd142, %rd138, 1;
	add.s64 	%rd143, %rd133, %rd142;
	shl.b64 	%rd144, %rd6, 1;
	add.s64 	%rd128, %rd143, %rd144;
	shl.b64 	%rd145, %rd139, 1;
	add.s64 	%rd146, %rd133, %rd145;
	add.s64 	%rd129, %rd146, %rd144;
	shl.b64 	%rd147, %rd140, 1;
	add.s64 	%rd148, %rd133, %rd147;
	add.s64 	%rd130, %rd148, %rd144;
	shl.b64 	%rd149, %rd141, 1;
	add.s64 	%rd150, %rd133, %rd149;
	add.s64 	%rd131, %rd150, %rd144;
	bar.sync 	0;
	and.b32 	%r1637, %r1611, 6;
	shl.b32 	%r1638, %r3, 4;
	and.b32 	%r1639, %r1638, 192;
	or.b32 	%r1640, %r1639, %r1637;
	shl.b32 	%r1641, %r4, 4;
	or.b32 	%r1642, %r1640, %r1641;
	and.b32 	%r1643, %r8, 3072;
	or.b32 	%r1644, %r1642, %r1643;
	shl.b32 	%r1645, %r1571, 5;
	or.b32 	%r1646, %r1644, %r1645;
	and.b32 	%r1647, %r6, 2040;
	shr.u32 	%r1648, %r1646, 2;
	and.b32 	%r1649, %r1648, 1916;
	add.s32 	%r1650, %r191, %r1649;
	shl.b32 	%r1651, %r1646, 1;
	add.s32 	%r1652, %r1650, %r1651;
	st.shared.b32 	[%r1652], %r1621;
	or.b32 	%r1653, %r1646, 512;
	shr.u32 	%r1654, %r1653, 2;
	and.b32 	%r1655, %r1654, 1073741822;
	add.s32 	%r1656, %r191, %r1655;
	add.s32 	%r1657, %r1656, %r1651;
	st.shared.b32 	[%r1657+1024], %r1622;
	st.shared.b32 	[%r1652+16], %r1623;
	and.b32 	%r1658, %r1654, 1073741808;
	add.s32 	%r1659, %r191, %r1658;
	add.s32 	%r1660, %r1659, %r1651;
	st.shared.b32 	[%r1660+1040], %r1624;
	st.shared.b32 	[%r1652+32], %r1625;
	st.shared.b32 	[%r1660+1056], %r1626;
	st.shared.b32 	[%r1652+48], %r1627;
	st.shared.b32 	[%r1660+1072], %r1628;
	st.shared.b32 	[%r1652+64], %r1629;
	st.shared.b32 	[%r1660+1088], %r1630;
	st.shared.b32 	[%r1652+80], %r1631;
	st.shared.b32 	[%r1660+1104], %r1632;
	st.shared.b32 	[%r1652+96], %r1633;
	st.shared.b32 	[%r1660+1120], %r1634;
	st.shared.b32 	[%r1652+112], %r1635;
	st.shared.b32 	[%r1660+1136], %r1636;
	bar.sync 	0;
	and.b32 	%r1661, %r3, 248;
	shl.b32 	%r1662, %r1661, 1;
	add.s32 	%r1663, %r191, %r1662;
	shl.b32 	%r1664, %r1647, 1;
	add.s32 	%r1665, %r1663, %r1664;
	ld.shared.v4.b32 	{%r1555, %r1556, %r1557, %r1558}, [%r1665];
	or.b32 	%r1666, %r1647, 2048;
	shr.u32 	%r1667, %r1666, 2;
	and.b32 	%r1668, %r1667, 1008;
	add.s32 	%r1669, %r191, %r1668;
	add.s32 	%r1670, %r1669, %r1664;
	ld.shared.v4.b32 	{%r1559, %r1560, %r1561, %r1562}, [%r1670+4096];
	or.b32 	%r1671, %r1647, 4096;
	shr.u32 	%r1672, %r1671, 2;
	and.b32 	%r1673, %r1672, 1520;
	add.s32 	%r1674, %r191, %r1673;
	add.s32 	%r1675, %r1674, %r1664;
	ld.shared.v4.b32 	{%r1563, %r1564, %r1565, %r1566}, [%r1675+8192];
	or.b32 	%r1676, %r6, 6144;
	shr.u32 	%r1677, %r1676, 2;
	and.b32 	%r1678, %r1677, 2032;
	add.s32 	%r1679, %r191, %r1678;
	shl.b32 	%r1680, %r1676, 1;
	add.s32 	%r1681, %r1679, %r1680;
	ld.shared.v4.b32 	{%r1567, %r1568, %r1569, %r1570}, [%r1681];
	// begin inline asm
	st.global.v4.b32 [ %rd128 + 0 ], { %r1555, %r1556, %r1557, %r1558 };
	// end inline asm
	// begin inline asm
	st.global.v4.b32 [ %rd129 + 0 ], { %r1559, %r1560, %r1561, %r1562 };
	// end inline asm
	// begin inline asm
	st.global.v4.b32 [ %rd130 + 0 ], { %r1563, %r1564, %r1565, %r1566 };
	// end inline asm
	// begin inline asm
	st.global.v4.b32 [ %rd131 + 0 ], { %r1567, %r1568, %r1569, %r1570 };
	// end inline asm
	.loc	1 202 4                         // gqa.py:202:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/ubuntu/anjiang/PTX_dataset/triton_ptx/gqa.py"
	.file	2 "/mnt/efs/anjiang/miniconda3/envs/ptx/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 131                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x7c DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 103                                 // DW_AT_name
.b8 113
.b8 97
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 117
.b8 98
.b8 117
.b8 110
.b8 116
.b8 117
.b8 47
.b8 97
.b8 110
.b8 106
.b8 105
.b8 97
.b8 110
.b8 103
.b8 47
.b8 80
.b8 84
.b8 88
.b8 95
.b8 100
.b8 97
.b8 116
.b8 97
.b8 115
.b8 101
.b8 116
.b8 47
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 116
.b8 120
.b8 0
.b8 2                                   // Abbrev [2] 0x4c:0xc DW_TAG_subprogram
.b8 95                                  // DW_AT_name
.b8 97
.b8 116
.b8 116
.b8 110
.b8 95
.b8 102
.b8 119
.b8 100
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x58:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 76                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x6d:0x18 DW_TAG_inlined_subroutine
.b32 76                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 185                                 // DW_AT_call_line
.b8 82                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
