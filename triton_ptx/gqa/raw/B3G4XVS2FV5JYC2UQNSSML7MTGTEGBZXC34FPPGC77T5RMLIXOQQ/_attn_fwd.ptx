//
// Generated by LLVM NVPTX Back-End
//

.version 8.7
.target sm_80
.address_size 64

	// .globl	_attn_fwd               // -- Begin function _attn_fwd
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @_attn_fwd
.visible .entry _attn_fwd(
	.param .u64 .ptr .global .align 1 _attn_fwd_param_0,
	.param .u64 .ptr .global .align 1 _attn_fwd_param_1,
	.param .u64 .ptr .global .align 1 _attn_fwd_param_2,
	.param .f32 _attn_fwd_param_3,
	.param .u64 .ptr .global .align 1 _attn_fwd_param_4,
	.param .u64 .ptr .global .align 1 _attn_fwd_param_5,
	.param .u32 _attn_fwd_param_6,
	.param .u32 _attn_fwd_param_7,
	.param .u32 _attn_fwd_param_8,
	.param .u32 _attn_fwd_param_9,
	.param .u32 _attn_fwd_param_10,
	.param .u32 _attn_fwd_param_11,
	.param .u32 _attn_fwd_param_12,
	.param .u32 _attn_fwd_param_13,
	.param .u32 _attn_fwd_param_14,
	.param .u32 _attn_fwd_param_15,
	.param .u32 _attn_fwd_param_16,
	.param .u32 _attn_fwd_param_17,
	.param .u32 _attn_fwd_param_18,
	.param .u64 .ptr .global .align 1 _attn_fwd_param_19
)
.reqntid 256
{
	.reg .pred 	%p<17>;
	.reg .b32 	%r<3081>;
	.reg .b64 	%rd<179>;
	.loc	1 114 0                         // gqa.py:114:0
$L__func_begin0:
	.loc	1 114 0                         // gqa.py:114:0

// %bb.0:
	ld.param.b32 	%r219, [_attn_fwd_param_17];
	ld.param.b64 	%rd27, [_attn_fwd_param_5];
	ld.param.b64 	%rd26, [_attn_fwd_param_4];
	ld.param.b64 	%rd44, [_attn_fwd_param_0];
	ld.param.b64 	%rd45, [_attn_fwd_param_1];
$L__tmp0:
	.loc	1 127 28                        // gqa.py:127:28
	mov.u32 	%r280, %ctaid.x;
	.loc	1 128 27                        // gqa.py:128:27
	mov.u32 	%r1, %ctaid.y;
	ld.param.b64 	%rd46, [_attn_fwd_param_2];
	ld.param.b32 	%r281, [_attn_fwd_param_3];
	ld.param.b32 	%r282, [_attn_fwd_param_18];
	.loc	1 129 22                        // gqa.py:129:22
	div.s32 	%r284, %r1, %r282;
	.loc	1 130 21                        // gqa.py:130:21
	mul.lo.s32 	%r285, %r284, %r282;
	sub.s32 	%r286, %r1, %r285;
	ld.param.b32 	%r287, [_attn_fwd_param_6];
	ld.param.s32 	%rd47, [_attn_fwd_param_7];
	ld.param.s32 	%rd48, [_attn_fwd_param_8];
	.loc	1 131 38                        // gqa.py:131:38
	mul.wide.s32 	%rd49, %r284, %r287;
	.loc	1 131 59                        // gqa.py:131:59
	cvt.u64.u32 	%rd50, %r286;
	ld.param.b32 	%r288, [_attn_fwd_param_11];
	.loc	1 131 50                        // gqa.py:131:50
	mad.lo.s64 	%rd1, %rd50, %rd47, %rd49;
	.loc	1 135 17                        // gqa.py:135:17
	shl.b64 	%rd11, %rd1, 1;
	add.s64 	%rd51, %rd44, %rd11;
	ld.param.b32 	%r289, [_attn_fwd_param_14];
	.loc	1 138 27                        // gqa.py:138:27
	shl.b32 	%r2, %r280, 8;
	.loc	1 140 8                         // gqa.py:140:8
	cvt.s64.s32 	%rd52, %r2;
	.loc	1 143 17                        // gqa.py:143:17
	add.s64 	%rd53, %rd46, %rd11;
	.loc	1 148 8                         // gqa.py:148:8
	cvt.s64.s32 	%rd54, %r289;
	.loc	1 151 17                        // gqa.py:151:17
	add.s64 	%rd55, %rd45, %rd11;
	.loc	1 156 8                         // gqa.py:156:8
	cvt.s64.s32 	%rd56, %r288;
	.loc	1 167 46                        // gqa.py:167:46
	mov.u32 	%r3, %tid.x;
	and.b32 	%r4, %r3, 16;
	shr.u32 	%r290, %r3, 3;
	bfe.u32 	%r291, %r3, 3, 5;
	or.b32 	%r292, %r291, 32;
	or.b32 	%r293, %r291, 64;
	or.b32 	%r294, %r290, 96;
	or.b32 	%r295, %r291, 128;
	or.b32 	%r296, %r291, 160;
	or.b32 	%r297, %r291, 192;
	or.b32 	%r298, %r290, 224;
	bfe.s32 	%r299, %r3, 2, 1;
	.loc	1 175 16                        // gqa.py:175:16
	mul.f32 	%r41, %r281, 0f3FB8AA3B;
	.loc	1 177 16                        // gqa.py:177:16
	cvt.u64.u32 	%rd57, %r291;
	cvt.u64.u32 	%rd58, %r292;
	cvt.u64.u32 	%rd59, %r293;
	cvt.u64.u32 	%rd60, %r294;
	cvt.u64.u32 	%rd61, %r295;
	cvt.u64.u32 	%rd62, %r296;
	cvt.u64.u32 	%rd63, %r297;
	cvt.u64.u32 	%rd64, %r298;
	or.b64 	%rd2, %rd57, %rd52;
	or.b64 	%rd3, %rd58, %rd52;
	or.b64 	%rd4, %rd59, %rd52;
	or.b64 	%rd5, %rd60, %rd52;
	or.b64 	%rd6, %rd61, %rd52;
	or.b64 	%rd7, %rd62, %rd52;
	or.b64 	%rd8, %rd63, %rd52;
	or.b64 	%rd9, %rd64, %rd52;
	mul.lo.s64 	%rd65, %rd2, %rd48;
	mul.lo.s64 	%rd66, %rd3, %rd48;
	mul.lo.s64 	%rd67, %rd4, %rd48;
	mul.lo.s64 	%rd68, %rd5, %rd48;
	mul.lo.s64 	%rd69, %rd6, %rd48;
	mul.lo.s64 	%rd70, %rd7, %rd48;
	mul.lo.s64 	%rd71, %rd8, %rd48;
	mul.lo.s64 	%rd72, %rd9, %rd48;
	shl.b32 	%r6, %r3, 3;
	and.b32 	%r300, %r6, 56;
	cvt.u64.u32 	%rd10, %r300;
	shl.b64 	%rd73, %rd65, 1;
	add.s64 	%rd74, %rd51, %rd73;
	mul.wide.u32 	%rd75, %r300, 2;
	add.s64 	%rd28, %rd74, %rd75;
	shl.b64 	%rd76, %rd66, 1;
	add.s64 	%rd77, %rd51, %rd76;
	add.s64 	%rd29, %rd77, %rd75;
	shl.b64 	%rd78, %rd67, 1;
	add.s64 	%rd79, %rd51, %rd78;
	add.s64 	%rd30, %rd79, %rd75;
	shl.b64 	%rd80, %rd68, 1;
	add.s64 	%rd81, %rd51, %rd80;
	add.s64 	%rd31, %rd81, %rd75;
	shl.b64 	%rd82, %rd69, 1;
	add.s64 	%rd83, %rd51, %rd82;
	add.s64 	%rd32, %rd83, %rd75;
	shl.b64 	%rd84, %rd70, 1;
	add.s64 	%rd85, %rd51, %rd84;
	add.s64 	%rd33, %rd85, %rd75;
	shl.b64 	%rd86, %rd71, 1;
	add.s64 	%rd87, %rd51, %rd86;
	add.s64 	%rd34, %rd87, %rd75;
	shl.b64 	%rd88, %rd72, 1;
	add.s64 	%rd89, %rd51, %rd88;
	add.s64 	%rd35, %rd89, %rd75;
	// begin inline asm
	mov.u32 %r220, 0x0;
	mov.u32 %r221, 0x0;
	mov.u32 %r222, 0x0;
	mov.u32 %r223, 0x0;
	ld.global.v4.b32 { %r220, %r221, %r222, %r223 }, [ %rd28 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r224, 0x0;
	mov.u32 %r225, 0x0;
	mov.u32 %r226, 0x0;
	mov.u32 %r227, 0x0;
	ld.global.v4.b32 { %r224, %r225, %r226, %r227 }, [ %rd29 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r228, 0x0;
	mov.u32 %r229, 0x0;
	mov.u32 %r230, 0x0;
	mov.u32 %r231, 0x0;
	ld.global.v4.b32 { %r228, %r229, %r230, %r231 }, [ %rd30 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r232, 0x0;
	mov.u32 %r233, 0x0;
	mov.u32 %r234, 0x0;
	mov.u32 %r235, 0x0;
	ld.global.v4.b32 { %r232, %r233, %r234, %r235 }, [ %rd31 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r236, 0x0;
	mov.u32 %r237, 0x0;
	mov.u32 %r238, 0x0;
	mov.u32 %r239, 0x0;
	ld.global.v4.b32 { %r236, %r237, %r238, %r239 }, [ %rd32 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r240, 0x0;
	mov.u32 %r241, 0x0;
	mov.u32 %r242, 0x0;
	mov.u32 %r243, 0x0;
	ld.global.v4.b32 { %r240, %r241, %r242, %r243 }, [ %rd33 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r244, 0x0;
	mov.u32 %r245, 0x0;
	mov.u32 %r246, 0x0;
	mov.u32 %r247, 0x0;
	ld.global.v4.b32 { %r244, %r245, %r246, %r247 }, [ %rd34 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r248, 0x0;
	mov.u32 %r249, 0x0;
	mov.u32 %r250, 0x0;
	mov.u32 %r251, 0x0;
	ld.global.v4.b32 { %r248, %r249, %r250, %r251 }, [ %rd35 + 0 ];
	// end inline asm
	xor.b32 	%r301, %r6, %r3;
	and.b32 	%r302, %r301, 56;
	shl.b32 	%r303, %r291, 6;
	or.b32 	%r7, %r303, %r302;
	shl.b32 	%r304, %r7, 1;
	mov.b32 	%r305, global_smem;
	add.s32 	%r306, %r305, %r304;
	st.shared.v4.b32 	[%r306], {%r220, %r221, %r222, %r223};
	st.shared.v4.b32 	[%r306+4096], {%r224, %r225, %r226, %r227};
	shl.b32 	%r307, %r302, 1;
	add.s32 	%r308, %r305, %r307;
	shl.b32 	%r309, %r291, 7;
	add.s32 	%r310, %r308, %r309;
	st.shared.v4.b32 	[%r310+8192], {%r228, %r229, %r230, %r231};
	st.shared.v4.b32 	[%r310+12288], {%r232, %r233, %r234, %r235};
	st.shared.v4.b32 	[%r310+16384], {%r236, %r237, %r238, %r239};
	st.shared.v4.b32 	[%r310+20480], {%r240, %r241, %r242, %r243};
	st.shared.v4.b32 	[%r310+24576], {%r244, %r245, %r246, %r247};
	st.shared.v4.b32 	[%r310+28672], {%r248, %r249, %r250, %r251};
$L__tmp1:
	.loc	1 47 20                         // gqa.py:47:20 @[ gqa.py:185:82 ]
	mul.lo.s64 	%rd90, %rd56, %rd57;
	mul.lo.s64 	%rd91, %rd56, %rd58;
	shl.b64 	%rd92, %rd90, 1;
	add.s64 	%rd93, %rd55, %rd92;
	add.s64 	%rd36, %rd93, %rd75;
	shl.b64 	%rd94, %rd91, 1;
	add.s64 	%rd95, %rd55, %rd94;
	add.s64 	%rd37, %rd95, %rd75;
	add.s32 	%r252, %r306, 32768;
	add.s32 	%r254, %r306, 36864;
	mov.b32 	%r253, 16;
	// begin inline asm
	cp.async.cg.shared.global [ %r252 + 0 ], [ %rd36 + 0 ], 0x10, %r253;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r254 + 0 ], [ %rd37 + 0 ], 0x10, %r253;
	// end inline asm
	cp.async.commit_group;
	.loc	1 65 20                         // gqa.py:65:20 @[ gqa.py:185:82 ]
	mul.lo.s64 	%rd96, %rd54, %rd57;
	mul.lo.s64 	%rd97, %rd54, %rd58;
	shl.b64 	%rd98, %rd96, 1;
	add.s64 	%rd99, %rd53, %rd98;
	add.s64 	%rd38, %rd99, %rd75;
	shl.b64 	%rd100, %rd97, 1;
	add.s64 	%rd101, %rd53, %rd100;
	add.s64 	%rd39, %rd101, %rd75;
	add.s32 	%r256, %r306, 49152;
	add.s32 	%r258, %r306, 53248;
	// begin inline asm
	cp.async.cg.shared.global [ %r256 + 0 ], [ %rd38 + 0 ], 0x10, %r253;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r258 + 0 ], [ %rd39 + 0 ], 0x10, %r253;
	// end inline asm
	cp.async.commit_group;
	.loc	1 47 20                         // gqa.py:47:20 @[ gqa.py:185:82 ]
	mul.wide.s32 	%rd102, %r288, 64;
	add.s64 	%rd103, %rd90, %rd102;
	add.s64 	%rd104, %rd91, %rd102;
	shl.b64 	%rd105, %rd103, 1;
	add.s64 	%rd106, %rd55, %rd105;
	add.s64 	%rd40, %rd106, %rd75;
	shl.b64 	%rd107, %rd104, 1;
	add.s64 	%rd108, %rd55, %rd107;
	add.s64 	%rd41, %rd108, %rd75;
	bar.sync 	0;
	add.s32 	%r260, %r306, 40960;
	add.s32 	%r262, %r306, 45056;
	// begin inline asm
	cp.async.cg.shared.global [ %r260 + 0 ], [ %rd40 + 0 ], 0x10, %r253;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r262 + 0 ], [ %rd41 + 0 ], 0x10, %r253;
	// end inline asm
	cp.async.commit_group;
	.loc	1 65 20                         // gqa.py:65:20 @[ gqa.py:185:82 ]
	mul.wide.s32 	%rd109, %r289, 64;
	add.s64 	%rd110, %rd96, %rd109;
	add.s64 	%rd111, %rd97, %rd109;
	shl.b64 	%rd112, %rd110, 1;
	add.s64 	%rd113, %rd53, %rd112;
	add.s64 	%rd42, %rd113, %rd75;
	shl.b64 	%rd114, %rd111, 1;
	add.s64 	%rd115, %rd53, %rd114;
	add.s64 	%rd43, %rd115, %rd75;
	add.s32 	%r264, %r306, 57344;
	add.s32 	%r266, %r306, 61440;
	// begin inline asm
	cp.async.cg.shared.global [ %r264 + 0 ], [ %rd42 + 0 ], 0x10, %r253;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r266 + 0 ], [ %rd43 + 0 ], 0x10, %r253;
	// end inline asm
	cp.async.commit_group;
	and.b32 	%r311, %r3, 3;
	mul.lo.s32 	%r312, %r311, 72;
	and.b32 	%r313, %r299, 288;
	xor.b32 	%r314, %r313, %r312;
	shl.b32 	%r315, %r3, 6;
	and.b32 	%r316, %r315, 512;
	or.b32 	%r317, %r314, %r316;
	shr.u32 	%r318, %r4, 1;
	xor.b32 	%r319, %r317, %r318;
	shl.b32 	%r8, %r3, 5;
	and.b32 	%r320, %r8, 1024;
	or.b32 	%r321, %r319, %r320;
	and.b32 	%r322, %r8, 6144;
	or.b32 	%r323, %r321, %r322;
	shl.b32 	%r324, %r323, 1;
	add.s32 	%r346, %r305, %r324;
	xor.b32 	%r325, %r323, 16;
	shl.b32 	%r326, %r325, 1;
	add.s32 	%r351, %r305, %r326;
	xor.b32 	%r327, %r323, 32;
	shl.b32 	%r328, %r327, 1;
	add.s32 	%r356, %r305, %r328;
	xor.b32 	%r329, %r323, 48;
	shl.b32 	%r330, %r329, 1;
	add.s32 	%r361, %r305, %r330;
	xor.b32 	%r331, %r323, 8192;
	shl.b32 	%r332, %r331, 1;
	add.s32 	%r366, %r305, %r332;
	xor.b32 	%r333, %r323, 8208;
	shl.b32 	%r334, %r333, 1;
	add.s32 	%r371, %r305, %r334;
	xor.b32 	%r335, %r323, 8224;
	shl.b32 	%r336, %r335, 1;
	add.s32 	%r376, %r305, %r336;
	xor.b32 	%r337, %r323, 8240;
	shl.b32 	%r338, %r337, 1;
	add.s32 	%r381, %r305, %r338;
	and.b32 	%r339, %r3, 24;
	xor.b32 	%r17, %r314, %r339;
	xor.b32 	%r18, %r17, 32;
	xor.b32 	%r19, %r17, 544;
	xor.b32 	%r20, %r17, 1056;
	xor.b32 	%r21, %r17, 1568;
	xor.b32 	%r22, %r17, 2080;
	xor.b32 	%r23, %r17, 2592;
	xor.b32 	%r24, %r17, 3104;
	xor.b32 	%r25, %r17, 3616;
	and.b32 	%r340, %r315, 1536;
	or.b32 	%r26, %r314, %r340;
	xor.b32 	%r27, %r26, 8;
	xor.b32 	%r28, %r26, 2056;
	xor.b32 	%r29, %r26, 16;
	xor.b32 	%r30, %r26, 2064;
	xor.b32 	%r31, %r26, 24;
	xor.b32 	%r32, %r26, 2072;
	xor.b32 	%r33, %r26, 32;
	xor.b32 	%r34, %r26, 2080;
	xor.b32 	%r35, %r26, 40;
	xor.b32 	%r36, %r26, 2088;
	xor.b32 	%r37, %r26, 48;
	xor.b32 	%r38, %r26, 2096;
	xor.b32 	%r39, %r26, 56;
	xor.b32 	%r40, %r26, 2104;
	.loc	1 44 33                         // gqa.py:44:33 @[ gqa.py:185:82 ]
	or.b64 	%rd116, %rd57, 160;
	mul.lo.s64 	%rd117, %rd116, %rd54;
	shl.b64 	%rd118, %rd117, 1;
	and.b32 	%r341, %r3, 7;
	mul.wide.u32 	%rd119, %r341, 16;
	add.s64 	%rd120, %rd118, %rd119;
	add.s64 	%rd178, %rd46, %rd120;
	mul.wide.s32 	%rd13, %r289, 128;
	mul.lo.s64 	%rd121, %rd116, %rd56;
	shl.b64 	%rd122, %rd121, 1;
	add.s64 	%rd123, %rd122, %rd119;
	add.s64 	%rd177, %rd45, %rd123;
	mul.wide.s32 	%rd15, %r288, 128;
	or.b64 	%rd124, %rd57, 128;
	mul.lo.s64 	%rd125, %rd124, %rd54;
	shl.b64 	%rd126, %rd125, 1;
	add.s64 	%rd127, %rd126, %rd119;
	add.s64 	%rd176, %rd46, %rd127;
	mul.lo.s64 	%rd128, %rd124, %rd56;
	shl.b64 	%rd129, %rd128, 1;
	add.s64 	%rd130, %rd129, %rd119;
	add.s64 	%rd175, %rd45, %rd130;
	mov.b32 	%r3073, 0f3F800000;
	mov.b32 	%r3069, 0fFF800000;
	mov.b32 	%r1662, 0f00000000;
	mov.b32 	%r3004, 1;
	mov.b32 	%r3003, -1;
	mov.b32 	%r3002, -64;
	shl.b32 	%r2348, %r18, 1;
	shl.b32 	%r2349, %r19, 1;
	shl.b32 	%r2350, %r20, 1;
	shl.b32 	%r2351, %r21, 1;
	shl.b32 	%r2352, %r22, 1;
	shl.b32 	%r2353, %r23, 1;
	shl.b32 	%r2354, %r24, 1;
	shl.b32 	%r2355, %r25, 1;
	shl.b32 	%r2655, %r27, 1;
	shl.b32 	%r2656, %r28, 1;
	shl.b32 	%r2657, %r29, 1;
	shl.b32 	%r2658, %r30, 1;
	shl.b32 	%r2659, %r31, 1;
	shl.b32 	%r2660, %r32, 1;
	shl.b32 	%r2661, %r33, 1;
	shl.b32 	%r2662, %r34, 1;
	shl.b32 	%r2663, %r35, 1;
	shl.b32 	%r2664, %r36, 1;
	shl.b32 	%r2665, %r37, 1;
	shl.b32 	%r2666, %r38, 1;
	shl.b32 	%r2667, %r39, 1;
	shl.b32 	%r2668, %r40, 1;
	mov.b32 	%r1663, %r1662;
	mov.b32 	%r1664, %r1662;
	mov.b32 	%r1665, %r1662;
	mov.b32 	%r1676, %r1662;
	mov.b32 	%r1677, %r1662;
	mov.b32 	%r1678, %r1662;
	mov.b32 	%r1679, %r1662;
	mov.b32 	%r1690, %r1662;
	mov.b32 	%r1691, %r1662;
	mov.b32 	%r1692, %r1662;
	mov.b32 	%r1693, %r1662;
	mov.b32 	%r1704, %r1662;
	mov.b32 	%r1705, %r1662;
	mov.b32 	%r1706, %r1662;
	mov.b32 	%r1707, %r1662;
	mov.b32 	%r1718, %r1662;
	mov.b32 	%r1719, %r1662;
	mov.b32 	%r1720, %r1662;
	mov.b32 	%r1721, %r1662;
	mov.b32 	%r1732, %r1662;
	mov.b32 	%r1733, %r1662;
	mov.b32 	%r1734, %r1662;
	mov.b32 	%r1735, %r1662;
	mov.b32 	%r1746, %r1662;
	mov.b32 	%r1747, %r1662;
	mov.b32 	%r1748, %r1662;
	mov.b32 	%r1749, %r1662;
	mov.b32 	%r1760, %r1662;
	mov.b32 	%r1761, %r1662;
	mov.b32 	%r1762, %r1662;
	mov.b32 	%r1763, %r1662;
	mov.b32 	%r1774, %r1662;
	mov.b32 	%r1775, %r1662;
	mov.b32 	%r1776, %r1662;
	mov.b32 	%r1777, %r1662;
	mov.b32 	%r1788, %r1662;
	mov.b32 	%r1789, %r1662;
	mov.b32 	%r1790, %r1662;
	mov.b32 	%r1791, %r1662;
	mov.b32 	%r1802, %r1662;
	mov.b32 	%r1803, %r1662;
	mov.b32 	%r1804, %r1662;
	mov.b32 	%r1805, %r1662;
	mov.b32 	%r1816, %r1662;
	mov.b32 	%r1817, %r1662;
	mov.b32 	%r1818, %r1662;
	mov.b32 	%r1819, %r1662;
	mov.b32 	%r1830, %r1662;
	mov.b32 	%r1831, %r1662;
	mov.b32 	%r1832, %r1662;
	mov.b32 	%r1833, %r1662;
	mov.b32 	%r1844, %r1662;
	mov.b32 	%r1845, %r1662;
	mov.b32 	%r1846, %r1662;
	mov.b32 	%r1847, %r1662;
	mov.b32 	%r1858, %r1662;
	mov.b32 	%r1859, %r1662;
	mov.b32 	%r1860, %r1662;
	mov.b32 	%r1861, %r1662;
	mov.b32 	%r1872, %r1662;
	mov.b32 	%r1873, %r1662;
	mov.b32 	%r1874, %r1662;
	mov.b32 	%r1875, %r1662;
	mov.b32 	%r3070, %r3069;
	mov.b32 	%r3071, %r3069;
	mov.b32 	%r3072, %r3069;
	mov.b32 	%r3074, %r3073;
	mov.b32 	%r3075, %r3073;
	mov.b32 	%r3076, %r3073;
$L__BB0_1:                              // %__nv_exp2f.exit
                                        // =>This Inner Loop Header: Depth=1
	add.s32 	%r3002, %r3002, 64;
	setp.lt.u32 	%p1, %r3002, 3968;
	add.s32 	%r2342, %r3003, 1;
	setp.gt.s32 	%p2, %r2342, 1;
	selp.b32 	%r3003, 0, %r2342, %p2;
	.loc	1 47 20                         // gqa.py:47:20 @[ gqa.py:185:82 ]
	cp.async.wait_group 	2;
	bar.sync 	0;
	shl.b32 	%r2343, %r3003, 13;
	add.s32 	%r2345, %r305, 32768;
	add.s32 	%r2346, %r2345, %r2343;
$L__tmp2:
	.loc	1 177 16                        // gqa.py:177:16
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r470, %r471, %r472, %r473}, [%r346];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r694, %r695, %r696, %r697}, [%r351];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r918, %r919, %r920, %r921}, [%r356];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1142, %r1143, %r1144, %r1145}, [%r361];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r582, %r583, %r584, %r585}, [%r366];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r806, %r807, %r808, %r809}, [%r371];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1030, %r1031, %r1032, %r1033}, [%r376];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1254, %r1255, %r1256, %r1257}, [%r381];
	// end inline asm
$L__tmp3:
	.loc	1 47 20                         // gqa.py:47:20 @[ gqa.py:185:82 ]
	shl.b32 	%r2347, %r17, 1;
	add.s32 	%r386, %r2346, %r2347;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r474, %r475, %r698, %r699}, [%r386];
	// end inline asm
	add.s32 	%r391, %r2346, %r2348;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r922, %r923, %r1146, %r1147}, [%r391];
	// end inline asm
	add.s32 	%r396, %r386, 1024;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r488, %r489, %r712, %r713}, [%r396];
	// end inline asm
	add.s32 	%r401, %r2346, %r2349;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r936, %r937, %r1160, %r1161}, [%r401];
	// end inline asm
	add.s32 	%r406, %r386, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r502, %r503, %r726, %r727}, [%r406];
	// end inline asm
	add.s32 	%r411, %r2346, %r2350;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r950, %r951, %r1174, %r1175}, [%r411];
	// end inline asm
	add.s32 	%r416, %r386, 3072;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r516, %r517, %r740, %r741}, [%r416];
	// end inline asm
	add.s32 	%r421, %r2346, %r2351;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r964, %r965, %r1188, %r1189}, [%r421];
	// end inline asm
	add.s32 	%r426, %r386, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r530, %r531, %r754, %r755}, [%r426];
	// end inline asm
	add.s32 	%r431, %r2346, %r2352;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r978, %r979, %r1202, %r1203}, [%r431];
	// end inline asm
	add.s32 	%r436, %r386, 5120;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r544, %r545, %r768, %r769}, [%r436];
	// end inline asm
	add.s32 	%r441, %r2346, %r2353;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r992, %r993, %r1216, %r1217}, [%r441];
	// end inline asm
	add.s32 	%r446, %r386, 6144;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r558, %r559, %r782, %r783}, [%r446];
	// end inline asm
	add.s32 	%r451, %r2346, %r2354;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1006, %r1007, %r1230, %r1231}, [%r451];
	// end inline asm
	add.s32 	%r456, %r386, 7168;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r572, %r573, %r796, %r797}, [%r456];
	// end inline asm
	add.s32 	%r461, %r2346, %r2355;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1020, %r1021, %r1244, %r1245}, [%r461];
	// end inline asm
	mov.b32 	%r899, 0;
	.loc	1 48 23                         // gqa.py:48:23 @[ gqa.py:185:82 ]
	mov.b32 	%r686, %r899;
	mov.b32 	%r687, %r899;
	mov.b32 	%r688, %r899;
	mov.b32 	%r689, %r899;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r686, %r687, %r688, %r689 }, { %r470, %r471, %r472, %r473 }, { %r474, %r475 }, { %r686, %r687, %r688, %r689 };
	// end inline asm
	mov.b32 	%r700, %r899;
	mov.b32 	%r701, %r899;
	mov.b32 	%r702, %r899;
	mov.b32 	%r703, %r899;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r700, %r701, %r702, %r703 }, { %r470, %r471, %r472, %r473 }, { %r488, %r489 }, { %r700, %r701, %r702, %r703 };
	// end inline asm
	mov.b32 	%r714, %r899;
	mov.b32 	%r715, %r899;
	mov.b32 	%r716, %r899;
	mov.b32 	%r717, %r899;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r714, %r715, %r716, %r717 }, { %r470, %r471, %r472, %r473 }, { %r502, %r503 }, { %r714, %r715, %r716, %r717 };
	// end inline asm
	mov.b32 	%r728, %r899;
	mov.b32 	%r729, %r899;
	mov.b32 	%r730, %r899;
	mov.b32 	%r731, %r899;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r728, %r729, %r730, %r731 }, { %r470, %r471, %r472, %r473 }, { %r516, %r517 }, { %r728, %r729, %r730, %r731 };
	// end inline asm
	mov.b32 	%r742, %r899;
	mov.b32 	%r743, %r899;
	mov.b32 	%r744, %r899;
	mov.b32 	%r745, %r899;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r742, %r743, %r744, %r745 }, { %r470, %r471, %r472, %r473 }, { %r530, %r531 }, { %r742, %r743, %r744, %r745 };
	// end inline asm
	mov.b32 	%r756, %r899;
	mov.b32 	%r757, %r899;
	mov.b32 	%r758, %r899;
	mov.b32 	%r759, %r899;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r756, %r757, %r758, %r759 }, { %r470, %r471, %r472, %r473 }, { %r544, %r545 }, { %r756, %r757, %r758, %r759 };
	// end inline asm
	mov.b32 	%r770, %r899;
	mov.b32 	%r771, %r899;
	mov.b32 	%r772, %r899;
	mov.b32 	%r773, %r899;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r770, %r771, %r772, %r773 }, { %r470, %r471, %r472, %r473 }, { %r558, %r559 }, { %r770, %r771, %r772, %r773 };
	// end inline asm
	mov.b32 	%r784, %r899;
	mov.b32 	%r785, %r899;
	mov.b32 	%r786, %r899;
	mov.b32 	%r787, %r899;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r784, %r785, %r786, %r787 }, { %r470, %r471, %r472, %r473 }, { %r572, %r573 }, { %r784, %r785, %r786, %r787 };
	// end inline asm
	mov.b32 	%r798, %r899;
	mov.b32 	%r799, %r899;
	mov.b32 	%r800, %r899;
	mov.b32 	%r801, %r899;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r798, %r799, %r800, %r801 }, { %r582, %r583, %r584, %r585 }, { %r474, %r475 }, { %r798, %r799, %r800, %r801 };
	// end inline asm
	mov.b32 	%r812, %r899;
	mov.b32 	%r813, %r899;
	mov.b32 	%r814, %r899;
	mov.b32 	%r815, %r899;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r812, %r813, %r814, %r815 }, { %r582, %r583, %r584, %r585 }, { %r488, %r489 }, { %r812, %r813, %r814, %r815 };
	// end inline asm
	mov.b32 	%r826, %r899;
	mov.b32 	%r827, %r899;
	mov.b32 	%r828, %r899;
	mov.b32 	%r829, %r899;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r826, %r827, %r828, %r829 }, { %r582, %r583, %r584, %r585 }, { %r502, %r503 }, { %r826, %r827, %r828, %r829 };
	// end inline asm
	mov.b32 	%r840, %r899;
	mov.b32 	%r841, %r899;
	mov.b32 	%r842, %r899;
	mov.b32 	%r843, %r899;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r840, %r841, %r842, %r843 }, { %r582, %r583, %r584, %r585 }, { %r516, %r517 }, { %r840, %r841, %r842, %r843 };
	// end inline asm
	mov.b32 	%r854, %r899;
	mov.b32 	%r855, %r899;
	mov.b32 	%r856, %r899;
	mov.b32 	%r857, %r899;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r854, %r855, %r856, %r857 }, { %r582, %r583, %r584, %r585 }, { %r530, %r531 }, { %r854, %r855, %r856, %r857 };
	// end inline asm
	mov.b32 	%r868, %r899;
	mov.b32 	%r869, %r899;
	mov.b32 	%r870, %r899;
	mov.b32 	%r871, %r899;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r868, %r869, %r870, %r871 }, { %r582, %r583, %r584, %r585 }, { %r544, %r545 }, { %r868, %r869, %r870, %r871 };
	// end inline asm
	mov.b32 	%r882, %r899;
	mov.b32 	%r883, %r899;
	mov.b32 	%r884, %r899;
	mov.b32 	%r885, %r899;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r882, %r883, %r884, %r885 }, { %r582, %r583, %r584, %r585 }, { %r558, %r559 }, { %r882, %r883, %r884, %r885 };
	// end inline asm
	mov.b32 	%r896, %r899;
	mov.b32 	%r897, %r899;
	mov.b32 	%r898, %r899;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r896, %r897, %r898, %r899 }, { %r582, %r583, %r584, %r585 }, { %r572, %r573 }, { %r896, %r897, %r898, %r899 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r686, %r687, %r688, %r689 }, { %r694, %r695, %r696, %r697 }, { %r698, %r699 }, { %r686, %r687, %r688, %r689 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r700, %r701, %r702, %r703 }, { %r694, %r695, %r696, %r697 }, { %r712, %r713 }, { %r700, %r701, %r702, %r703 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r714, %r715, %r716, %r717 }, { %r694, %r695, %r696, %r697 }, { %r726, %r727 }, { %r714, %r715, %r716, %r717 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r728, %r729, %r730, %r731 }, { %r694, %r695, %r696, %r697 }, { %r740, %r741 }, { %r728, %r729, %r730, %r731 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r742, %r743, %r744, %r745 }, { %r694, %r695, %r696, %r697 }, { %r754, %r755 }, { %r742, %r743, %r744, %r745 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r756, %r757, %r758, %r759 }, { %r694, %r695, %r696, %r697 }, { %r768, %r769 }, { %r756, %r757, %r758, %r759 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r770, %r771, %r772, %r773 }, { %r694, %r695, %r696, %r697 }, { %r782, %r783 }, { %r770, %r771, %r772, %r773 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r784, %r785, %r786, %r787 }, { %r694, %r695, %r696, %r697 }, { %r796, %r797 }, { %r784, %r785, %r786, %r787 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r798, %r799, %r800, %r801 }, { %r806, %r807, %r808, %r809 }, { %r698, %r699 }, { %r798, %r799, %r800, %r801 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r812, %r813, %r814, %r815 }, { %r806, %r807, %r808, %r809 }, { %r712, %r713 }, { %r812, %r813, %r814, %r815 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r826, %r827, %r828, %r829 }, { %r806, %r807, %r808, %r809 }, { %r726, %r727 }, { %r826, %r827, %r828, %r829 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r840, %r841, %r842, %r843 }, { %r806, %r807, %r808, %r809 }, { %r740, %r741 }, { %r840, %r841, %r842, %r843 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r854, %r855, %r856, %r857 }, { %r806, %r807, %r808, %r809 }, { %r754, %r755 }, { %r854, %r855, %r856, %r857 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r868, %r869, %r870, %r871 }, { %r806, %r807, %r808, %r809 }, { %r768, %r769 }, { %r868, %r869, %r870, %r871 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r882, %r883, %r884, %r885 }, { %r806, %r807, %r808, %r809 }, { %r782, %r783 }, { %r882, %r883, %r884, %r885 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r896, %r897, %r898, %r899 }, { %r806, %r807, %r808, %r809 }, { %r796, %r797 }, { %r896, %r897, %r898, %r899 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r686, %r687, %r688, %r689 }, { %r918, %r919, %r920, %r921 }, { %r922, %r923 }, { %r686, %r687, %r688, %r689 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r700, %r701, %r702, %r703 }, { %r918, %r919, %r920, %r921 }, { %r936, %r937 }, { %r700, %r701, %r702, %r703 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r714, %r715, %r716, %r717 }, { %r918, %r919, %r920, %r921 }, { %r950, %r951 }, { %r714, %r715, %r716, %r717 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r728, %r729, %r730, %r731 }, { %r918, %r919, %r920, %r921 }, { %r964, %r965 }, { %r728, %r729, %r730, %r731 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r742, %r743, %r744, %r745 }, { %r918, %r919, %r920, %r921 }, { %r978, %r979 }, { %r742, %r743, %r744, %r745 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r756, %r757, %r758, %r759 }, { %r918, %r919, %r920, %r921 }, { %r992, %r993 }, { %r756, %r757, %r758, %r759 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r770, %r771, %r772, %r773 }, { %r918, %r919, %r920, %r921 }, { %r1006, %r1007 }, { %r770, %r771, %r772, %r773 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r784, %r785, %r786, %r787 }, { %r918, %r919, %r920, %r921 }, { %r1020, %r1021 }, { %r784, %r785, %r786, %r787 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r798, %r799, %r800, %r801 }, { %r1030, %r1031, %r1032, %r1033 }, { %r922, %r923 }, { %r798, %r799, %r800, %r801 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r812, %r813, %r814, %r815 }, { %r1030, %r1031, %r1032, %r1033 }, { %r936, %r937 }, { %r812, %r813, %r814, %r815 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r826, %r827, %r828, %r829 }, { %r1030, %r1031, %r1032, %r1033 }, { %r950, %r951 }, { %r826, %r827, %r828, %r829 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r840, %r841, %r842, %r843 }, { %r1030, %r1031, %r1032, %r1033 }, { %r964, %r965 }, { %r840, %r841, %r842, %r843 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r854, %r855, %r856, %r857 }, { %r1030, %r1031, %r1032, %r1033 }, { %r978, %r979 }, { %r854, %r855, %r856, %r857 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r868, %r869, %r870, %r871 }, { %r1030, %r1031, %r1032, %r1033 }, { %r992, %r993 }, { %r868, %r869, %r870, %r871 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r882, %r883, %r884, %r885 }, { %r1030, %r1031, %r1032, %r1033 }, { %r1006, %r1007 }, { %r882, %r883, %r884, %r885 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r896, %r897, %r898, %r899 }, { %r1030, %r1031, %r1032, %r1033 }, { %r1020, %r1021 }, { %r896, %r897, %r898, %r899 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r686, %r687, %r688, %r689 }, { %r1142, %r1143, %r1144, %r1145 }, { %r1146, %r1147 }, { %r686, %r687, %r688, %r689 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r700, %r701, %r702, %r703 }, { %r1142, %r1143, %r1144, %r1145 }, { %r1160, %r1161 }, { %r700, %r701, %r702, %r703 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r714, %r715, %r716, %r717 }, { %r1142, %r1143, %r1144, %r1145 }, { %r1174, %r1175 }, { %r714, %r715, %r716, %r717 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r728, %r729, %r730, %r731 }, { %r1142, %r1143, %r1144, %r1145 }, { %r1188, %r1189 }, { %r728, %r729, %r730, %r731 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r742, %r743, %r744, %r745 }, { %r1142, %r1143, %r1144, %r1145 }, { %r1202, %r1203 }, { %r742, %r743, %r744, %r745 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r756, %r757, %r758, %r759 }, { %r1142, %r1143, %r1144, %r1145 }, { %r1216, %r1217 }, { %r756, %r757, %r758, %r759 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r770, %r771, %r772, %r773 }, { %r1142, %r1143, %r1144, %r1145 }, { %r1230, %r1231 }, { %r770, %r771, %r772, %r773 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r784, %r785, %r786, %r787 }, { %r1142, %r1143, %r1144, %r1145 }, { %r1244, %r1245 }, { %r784, %r785, %r786, %r787 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r798, %r799, %r800, %r801 }, { %r1254, %r1255, %r1256, %r1257 }, { %r1146, %r1147 }, { %r798, %r799, %r800, %r801 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r812, %r813, %r814, %r815 }, { %r1254, %r1255, %r1256, %r1257 }, { %r1160, %r1161 }, { %r812, %r813, %r814, %r815 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r826, %r827, %r828, %r829 }, { %r1254, %r1255, %r1256, %r1257 }, { %r1174, %r1175 }, { %r826, %r827, %r828, %r829 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r840, %r841, %r842, %r843 }, { %r1254, %r1255, %r1256, %r1257 }, { %r1188, %r1189 }, { %r840, %r841, %r842, %r843 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r854, %r855, %r856, %r857 }, { %r1254, %r1255, %r1256, %r1257 }, { %r1202, %r1203 }, { %r854, %r855, %r856, %r857 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r868, %r869, %r870, %r871 }, { %r1254, %r1255, %r1256, %r1257 }, { %r1216, %r1217 }, { %r868, %r869, %r870, %r871 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r882, %r883, %r884, %r885 }, { %r1254, %r1255, %r1256, %r1257 }, { %r1230, %r1231 }, { %r882, %r883, %r884, %r885 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r896, %r897, %r898, %r899 }, { %r1254, %r1255, %r1256, %r1257 }, { %r1244, %r1245 }, { %r896, %r897, %r898, %r899 };
	// end inline asm
	.loc	2 167 27                        // standard.py:167:27 @[ gqa.py:185:82 ]
	max.f32 	%r2356, %r686, %r687;
	max.f32 	%r2357, %r688, %r689;
	max.f32 	%r2358, %r2356, %r700;
	max.f32 	%r2359, %r2358, %r701;
	max.f32 	%r2360, %r2357, %r702;
	max.f32 	%r2361, %r2360, %r703;
	max.f32 	%r2362, %r2359, %r714;
	max.f32 	%r2363, %r2362, %r715;
	max.f32 	%r2364, %r2361, %r716;
	max.f32 	%r2365, %r2364, %r717;
	max.f32 	%r2366, %r2363, %r728;
	max.f32 	%r2367, %r2366, %r729;
	max.f32 	%r2368, %r2365, %r730;
	max.f32 	%r2369, %r2368, %r731;
	max.f32 	%r2370, %r2367, %r742;
	max.f32 	%r2371, %r2370, %r743;
	max.f32 	%r2372, %r2369, %r744;
	max.f32 	%r2373, %r2372, %r745;
	max.f32 	%r2374, %r2371, %r756;
	max.f32 	%r2375, %r2374, %r757;
	max.f32 	%r2376, %r2373, %r758;
	max.f32 	%r2377, %r2376, %r759;
	max.f32 	%r2378, %r2375, %r770;
	max.f32 	%r2379, %r2378, %r771;
	max.f32 	%r2380, %r2377, %r772;
	max.f32 	%r2381, %r2380, %r773;
	max.f32 	%r2382, %r2379, %r784;
	max.f32 	%r2383, %r2382, %r785;
	max.f32 	%r2384, %r2381, %r786;
	max.f32 	%r2385, %r2384, %r787;
	max.f32 	%r2386, %r798, %r799;
	max.f32 	%r2387, %r800, %r801;
	max.f32 	%r2388, %r2386, %r812;
	max.f32 	%r2389, %r2388, %r813;
	max.f32 	%r2390, %r2387, %r814;
	max.f32 	%r2391, %r2390, %r815;
	max.f32 	%r2392, %r2389, %r826;
	max.f32 	%r2393, %r2392, %r827;
	max.f32 	%r2394, %r2391, %r828;
	max.f32 	%r2395, %r2394, %r829;
	max.f32 	%r2396, %r2393, %r840;
	max.f32 	%r2397, %r2396, %r841;
	max.f32 	%r2398, %r2395, %r842;
	max.f32 	%r2399, %r2398, %r843;
	max.f32 	%r2400, %r2397, %r854;
	max.f32 	%r2401, %r2400, %r855;
	max.f32 	%r2402, %r2399, %r856;
	max.f32 	%r2403, %r2402, %r857;
	max.f32 	%r2404, %r2401, %r868;
	max.f32 	%r2405, %r2404, %r869;
	max.f32 	%r2406, %r2403, %r870;
	max.f32 	%r2407, %r2406, %r871;
	max.f32 	%r2408, %r2405, %r882;
	max.f32 	%r2409, %r2408, %r883;
	max.f32 	%r2410, %r2407, %r884;
	max.f32 	%r2411, %r2410, %r885;
	max.f32 	%r2412, %r2409, %r896;
	max.f32 	%r2413, %r2412, %r897;
	max.f32 	%r2414, %r2411, %r898;
	max.f32 	%r2415, %r2414, %r899;
	.loc	2 188 40                        // standard.py:188:40 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r2416, %r2383, 2, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ gqa.py:185:82 ]
	max.f32 	%r2417, %r2383, %r2416;
	.loc	2 188 40                        // standard.py:188:40 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r2418, %r2417, 1, 31, -1;
	shfl.sync.bfly.b32 	%r2419, %r2385, 2, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ gqa.py:185:82 ]
	max.f32 	%r2420, %r2385, %r2419;
	.loc	2 188 40                        // standard.py:188:40 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r2421, %r2420, 1, 31, -1;
	shfl.sync.bfly.b32 	%r2422, %r2413, 2, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ gqa.py:185:82 ]
	max.f32 	%r2423, %r2413, %r2422;
	.loc	2 188 40                        // standard.py:188:40 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r2424, %r2423, 1, 31, -1;
	shfl.sync.bfly.b32 	%r2425, %r2415, 2, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ gqa.py:185:82 ]
	max.f32 	%r2426, %r2415, %r2425;
	.loc	2 188 40                        // standard.py:188:40 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r2427, %r2426, 1, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ gqa.py:185:82 ]
	max.f32 	%r2428, %r2426, %r2427;
	max.f32 	%r2429, %r2423, %r2424;
	max.f32 	%r2430, %r2420, %r2421;
	max.f32 	%r2431, %r2417, %r2418;
	.loc	1 55 51                         // gqa.py:55:51 @[ gqa.py:185:82 ]
	mul.f32 	%r2432, %r41, %r2431;
	mul.f32 	%r2433, %r41, %r2430;
	mul.f32 	%r2434, %r41, %r2429;
	mul.f32 	%r2435, %r41, %r2428;
	.loc	1 55 35                         // gqa.py:55:35 @[ gqa.py:185:82 ]
	max.f32 	%r125, %r3072, %r2435;
	max.f32 	%r124, %r3071, %r2434;
	max.f32 	%r123, %r3070, %r2433;
	max.f32 	%r122, %r3069, %r2432;
	.loc	1 56 33                         // gqa.py:56:33 @[ gqa.py:185:82 ]
	neg.f32 	%r2436, %r122;
	fma.rn.f32 	%r2437, %r41, %r686, %r2436;
	fma.rn.f32 	%r2438, %r41, %r687, %r2436;
	neg.f32 	%r2439, %r123;
	fma.rn.f32 	%r2440, %r41, %r688, %r2439;
	fma.rn.f32 	%r2441, %r41, %r689, %r2439;
	fma.rn.f32 	%r2442, %r41, %r700, %r2436;
	fma.rn.f32 	%r2443, %r41, %r701, %r2436;
	fma.rn.f32 	%r2444, %r41, %r702, %r2439;
	fma.rn.f32 	%r2445, %r41, %r703, %r2439;
	fma.rn.f32 	%r2446, %r41, %r714, %r2436;
	fma.rn.f32 	%r2447, %r41, %r715, %r2436;
	fma.rn.f32 	%r2448, %r41, %r716, %r2439;
	fma.rn.f32 	%r2449, %r41, %r717, %r2439;
	fma.rn.f32 	%r2450, %r41, %r728, %r2436;
	fma.rn.f32 	%r2451, %r41, %r729, %r2436;
	fma.rn.f32 	%r2452, %r41, %r730, %r2439;
	fma.rn.f32 	%r2453, %r41, %r731, %r2439;
	fma.rn.f32 	%r2454, %r41, %r742, %r2436;
	fma.rn.f32 	%r2455, %r41, %r743, %r2436;
	fma.rn.f32 	%r2456, %r41, %r744, %r2439;
	fma.rn.f32 	%r2457, %r41, %r745, %r2439;
	fma.rn.f32 	%r2458, %r41, %r756, %r2436;
	fma.rn.f32 	%r2459, %r41, %r757, %r2436;
	fma.rn.f32 	%r2460, %r41, %r758, %r2439;
	fma.rn.f32 	%r2461, %r41, %r759, %r2439;
	fma.rn.f32 	%r2462, %r41, %r770, %r2436;
	fma.rn.f32 	%r2463, %r41, %r771, %r2436;
	fma.rn.f32 	%r2464, %r41, %r772, %r2439;
	fma.rn.f32 	%r2465, %r41, %r773, %r2439;
	fma.rn.f32 	%r2466, %r41, %r784, %r2436;
	fma.rn.f32 	%r2467, %r41, %r785, %r2436;
	fma.rn.f32 	%r2468, %r41, %r786, %r2439;
	fma.rn.f32 	%r2469, %r41, %r787, %r2439;
	neg.f32 	%r2470, %r124;
	fma.rn.f32 	%r2471, %r41, %r798, %r2470;
	fma.rn.f32 	%r2472, %r41, %r799, %r2470;
	neg.f32 	%r2473, %r125;
	fma.rn.f32 	%r2474, %r41, %r800, %r2473;
	fma.rn.f32 	%r2475, %r41, %r801, %r2473;
	fma.rn.f32 	%r2476, %r41, %r812, %r2470;
	fma.rn.f32 	%r2477, %r41, %r813, %r2470;
	fma.rn.f32 	%r2478, %r41, %r814, %r2473;
	fma.rn.f32 	%r2479, %r41, %r815, %r2473;
	fma.rn.f32 	%r2480, %r41, %r826, %r2470;
	fma.rn.f32 	%r2481, %r41, %r827, %r2470;
	fma.rn.f32 	%r2482, %r41, %r828, %r2473;
	fma.rn.f32 	%r2483, %r41, %r829, %r2473;
	fma.rn.f32 	%r2484, %r41, %r840, %r2470;
	fma.rn.f32 	%r2485, %r41, %r841, %r2470;
	fma.rn.f32 	%r2486, %r41, %r842, %r2473;
	fma.rn.f32 	%r2487, %r41, %r843, %r2473;
	fma.rn.f32 	%r2488, %r41, %r854, %r2470;
	fma.rn.f32 	%r2489, %r41, %r855, %r2470;
	fma.rn.f32 	%r2490, %r41, %r856, %r2473;
	fma.rn.f32 	%r2491, %r41, %r857, %r2473;
	fma.rn.f32 	%r2492, %r41, %r868, %r2470;
	fma.rn.f32 	%r2493, %r41, %r869, %r2470;
	fma.rn.f32 	%r2494, %r41, %r870, %r2473;
	fma.rn.f32 	%r2495, %r41, %r871, %r2473;
	fma.rn.f32 	%r2496, %r41, %r882, %r2470;
	fma.rn.f32 	%r2497, %r41, %r883, %r2470;
	fma.rn.f32 	%r2498, %r41, %r884, %r2473;
	fma.rn.f32 	%r2499, %r41, %r885, %r2473;
	fma.rn.f32 	%r2500, %r41, %r896, %r2470;
	fma.rn.f32 	%r2501, %r41, %r897, %r2470;
	fma.rn.f32 	%r2502, %r41, %r898, %r2473;
	fma.rn.f32 	%r2503, %r41, %r899, %r2473;
	.loc	1 57 25                         // gqa.py:57:25 @[ gqa.py:185:82 ]
	ex2.approx.ftz.f32 	%r2504, %r2437;
	ex2.approx.ftz.f32 	%r2505, %r2438;
	ex2.approx.ftz.f32 	%r2506, %r2440;
	ex2.approx.ftz.f32 	%r2507, %r2441;
	ex2.approx.ftz.f32 	%r2508, %r2442;
	ex2.approx.ftz.f32 	%r2509, %r2443;
	ex2.approx.ftz.f32 	%r2510, %r2444;
	ex2.approx.ftz.f32 	%r2511, %r2445;
	ex2.approx.ftz.f32 	%r2512, %r2446;
	ex2.approx.ftz.f32 	%r2513, %r2447;
	ex2.approx.ftz.f32 	%r2514, %r2448;
	ex2.approx.ftz.f32 	%r2515, %r2449;
	ex2.approx.ftz.f32 	%r2516, %r2450;
	ex2.approx.ftz.f32 	%r2517, %r2451;
	ex2.approx.ftz.f32 	%r2518, %r2452;
	ex2.approx.ftz.f32 	%r2519, %r2453;
	ex2.approx.ftz.f32 	%r2520, %r2454;
	ex2.approx.ftz.f32 	%r2521, %r2455;
	ex2.approx.ftz.f32 	%r2522, %r2456;
	ex2.approx.ftz.f32 	%r2523, %r2457;
	ex2.approx.ftz.f32 	%r2524, %r2458;
	ex2.approx.ftz.f32 	%r2525, %r2459;
	ex2.approx.ftz.f32 	%r2526, %r2460;
	ex2.approx.ftz.f32 	%r2527, %r2461;
	ex2.approx.ftz.f32 	%r2528, %r2462;
	ex2.approx.ftz.f32 	%r2529, %r2463;
	ex2.approx.ftz.f32 	%r2530, %r2464;
	ex2.approx.ftz.f32 	%r2531, %r2465;
	ex2.approx.ftz.f32 	%r2532, %r2466;
	ex2.approx.ftz.f32 	%r2533, %r2467;
	ex2.approx.ftz.f32 	%r2534, %r2468;
	ex2.approx.ftz.f32 	%r2535, %r2469;
	ex2.approx.ftz.f32 	%r2536, %r2471;
	ex2.approx.ftz.f32 	%r2537, %r2472;
	ex2.approx.ftz.f32 	%r2538, %r2474;
	ex2.approx.ftz.f32 	%r2539, %r2475;
	ex2.approx.ftz.f32 	%r2540, %r2476;
	ex2.approx.ftz.f32 	%r2541, %r2477;
	ex2.approx.ftz.f32 	%r2542, %r2478;
	ex2.approx.ftz.f32 	%r2543, %r2479;
	ex2.approx.ftz.f32 	%r2544, %r2480;
	ex2.approx.ftz.f32 	%r2545, %r2481;
	ex2.approx.ftz.f32 	%r2546, %r2482;
	ex2.approx.ftz.f32 	%r2547, %r2483;
	ex2.approx.ftz.f32 	%r2548, %r2484;
	ex2.approx.ftz.f32 	%r2549, %r2485;
	ex2.approx.ftz.f32 	%r2550, %r2486;
	ex2.approx.ftz.f32 	%r2551, %r2487;
	ex2.approx.ftz.f32 	%r2552, %r2488;
	ex2.approx.ftz.f32 	%r2553, %r2489;
	ex2.approx.ftz.f32 	%r2554, %r2490;
	ex2.approx.ftz.f32 	%r2555, %r2491;
	ex2.approx.ftz.f32 	%r2556, %r2492;
	ex2.approx.ftz.f32 	%r2557, %r2493;
	ex2.approx.ftz.f32 	%r2558, %r2494;
	ex2.approx.ftz.f32 	%r2559, %r2495;
	ex2.approx.ftz.f32 	%r2560, %r2496;
	ex2.approx.ftz.f32 	%r2561, %r2497;
	ex2.approx.ftz.f32 	%r2562, %r2498;
	ex2.approx.ftz.f32 	%r2563, %r2499;
	ex2.approx.ftz.f32 	%r2564, %r2500;
	ex2.approx.ftz.f32 	%r2565, %r2501;
	ex2.approx.ftz.f32 	%r2566, %r2502;
	ex2.approx.ftz.f32 	%r2567, %r2503;
	.loc	2 260 15                        // standard.py:260:15 @[ gqa.py:185:82 ]
	add.f32 	%r2568, %r2504, %r2505;
	add.f32 	%r2569, %r2506, %r2507;
	add.f32 	%r2570, %r2568, %r2508;
	add.f32 	%r2571, %r2570, %r2509;
	add.f32 	%r2572, %r2569, %r2510;
	add.f32 	%r2573, %r2572, %r2511;
	add.f32 	%r2574, %r2571, %r2512;
	add.f32 	%r2575, %r2574, %r2513;
	add.f32 	%r2576, %r2573, %r2514;
	add.f32 	%r2577, %r2576, %r2515;
	add.f32 	%r2578, %r2575, %r2516;
	add.f32 	%r2579, %r2578, %r2517;
	add.f32 	%r2580, %r2577, %r2518;
	add.f32 	%r2581, %r2580, %r2519;
	add.f32 	%r2582, %r2579, %r2520;
	add.f32 	%r2583, %r2582, %r2521;
	add.f32 	%r2584, %r2581, %r2522;
	add.f32 	%r2585, %r2584, %r2523;
	add.f32 	%r2586, %r2583, %r2524;
	add.f32 	%r2587, %r2586, %r2525;
	add.f32 	%r2588, %r2585, %r2526;
	add.f32 	%r2589, %r2588, %r2527;
	add.f32 	%r2590, %r2587, %r2528;
	add.f32 	%r2591, %r2590, %r2529;
	add.f32 	%r2592, %r2589, %r2530;
	add.f32 	%r2593, %r2592, %r2531;
	add.f32 	%r2594, %r2591, %r2532;
	add.f32 	%r2595, %r2594, %r2533;
	add.f32 	%r2596, %r2593, %r2534;
	add.f32 	%r2597, %r2596, %r2535;
	add.f32 	%r2598, %r2536, %r2537;
	add.f32 	%r2599, %r2538, %r2539;
	add.f32 	%r2600, %r2598, %r2540;
	add.f32 	%r2601, %r2600, %r2541;
	add.f32 	%r2602, %r2599, %r2542;
	add.f32 	%r2603, %r2602, %r2543;
	add.f32 	%r2604, %r2601, %r2544;
	add.f32 	%r2605, %r2604, %r2545;
	add.f32 	%r2606, %r2603, %r2546;
	add.f32 	%r2607, %r2606, %r2547;
	add.f32 	%r2608, %r2605, %r2548;
	add.f32 	%r2609, %r2608, %r2549;
	add.f32 	%r2610, %r2607, %r2550;
	add.f32 	%r2611, %r2610, %r2551;
	add.f32 	%r2612, %r2609, %r2552;
	add.f32 	%r2613, %r2612, %r2553;
	add.f32 	%r2614, %r2611, %r2554;
	add.f32 	%r2615, %r2614, %r2555;
	add.f32 	%r2616, %r2613, %r2556;
	add.f32 	%r2617, %r2616, %r2557;
	add.f32 	%r2618, %r2615, %r2558;
	add.f32 	%r2619, %r2618, %r2559;
	add.f32 	%r2620, %r2617, %r2560;
	add.f32 	%r2621, %r2620, %r2561;
	add.f32 	%r2622, %r2619, %r2562;
	add.f32 	%r2623, %r2622, %r2563;
	add.f32 	%r2624, %r2621, %r2564;
	add.f32 	%r2625, %r2624, %r2565;
	add.f32 	%r2626, %r2623, %r2566;
	add.f32 	%r2627, %r2626, %r2567;
	.loc	2 290 36                        // standard.py:290:36 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r2628, %r2595, 2, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ gqa.py:185:82 ]
	add.f32 	%r2629, %r2595, %r2628;
	.loc	2 290 36                        // standard.py:290:36 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r2630, %r2629, 1, 31, -1;
	shfl.sync.bfly.b32 	%r2631, %r2597, 2, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ gqa.py:185:82 ]
	add.f32 	%r2632, %r2597, %r2631;
	.loc	2 290 36                        // standard.py:290:36 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r2633, %r2632, 1, 31, -1;
	shfl.sync.bfly.b32 	%r2634, %r2625, 2, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ gqa.py:185:82 ]
	add.f32 	%r2635, %r2625, %r2634;
	.loc	2 290 36                        // standard.py:290:36 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r2636, %r2635, 1, 31, -1;
	shfl.sync.bfly.b32 	%r2637, %r2627, 2, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ gqa.py:185:82 ]
	add.f32 	%r2638, %r2627, %r2637;
	.loc	2 290 36                        // standard.py:290:36 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r2639, %r2638, 1, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ gqa.py:185:82 ]
	add.f32 	%r2640, %r2638, %r2639;
	add.f32 	%r2641, %r2635, %r2636;
	add.f32 	%r2642, %r2632, %r2633;
	add.f32 	%r2643, %r2629, %r2630;
	.loc	1 60 35                         // gqa.py:60:35 @[ gqa.py:185:82 ]
	sub.f32 	%r2644, %r3072, %r125;
	sub.f32 	%r2645, %r3071, %r124;
	sub.f32 	%r2646, %r3070, %r123;
	sub.f32 	%r2647, %r3069, %r122;
	.loc	1 60 29                         // gqa.py:60:29 @[ gqa.py:185:82 ]
	ex2.approx.ftz.f32 	%r2648, %r2647;
	ex2.approx.ftz.f32 	%r2649, %r2646;
	ex2.approx.ftz.f32 	%r2650, %r2645;
	ex2.approx.ftz.f32 	%r2651, %r2644;
	.loc	1 61 28                         // gqa.py:61:28 @[ gqa.py:185:82 ]
	fma.rn.f32 	%r3073, %r3073, %r2648, %r2643;
	fma.rn.f32 	%r3074, %r3074, %r2649, %r2642;
	fma.rn.f32 	%r3075, %r3075, %r2650, %r2641;
	fma.rn.f32 	%r3076, %r3076, %r2651, %r2640;
	.loc	1 63 20                         // gqa.py:63:20 @[ gqa.py:185:82 ]
	mul.f32 	%r1662, %r1662, %r2648;
	mul.f32 	%r1663, %r1663, %r2648;
	mul.f32 	%r1664, %r1664, %r2649;
	mul.f32 	%r1665, %r1665, %r2649;
	mul.f32 	%r1676, %r1676, %r2648;
	mul.f32 	%r1677, %r1677, %r2648;
	mul.f32 	%r1678, %r1678, %r2649;
	mul.f32 	%r1679, %r1679, %r2649;
	mul.f32 	%r1690, %r1690, %r2648;
	mul.f32 	%r1691, %r1691, %r2648;
	mul.f32 	%r1692, %r1692, %r2649;
	mul.f32 	%r1693, %r1693, %r2649;
	mul.f32 	%r1704, %r1704, %r2648;
	mul.f32 	%r1705, %r1705, %r2648;
	mul.f32 	%r1706, %r1706, %r2649;
	mul.f32 	%r1707, %r1707, %r2649;
	mul.f32 	%r1718, %r1718, %r2648;
	mul.f32 	%r1719, %r1719, %r2648;
	mul.f32 	%r1720, %r1720, %r2649;
	mul.f32 	%r1721, %r1721, %r2649;
	mul.f32 	%r1732, %r1732, %r2648;
	mul.f32 	%r1733, %r1733, %r2648;
	mul.f32 	%r1734, %r1734, %r2649;
	mul.f32 	%r1735, %r1735, %r2649;
	mul.f32 	%r1746, %r1746, %r2648;
	mul.f32 	%r1747, %r1747, %r2648;
	mul.f32 	%r1748, %r1748, %r2649;
	mul.f32 	%r1749, %r1749, %r2649;
	mul.f32 	%r1760, %r1760, %r2648;
	mul.f32 	%r1761, %r1761, %r2648;
	mul.f32 	%r1762, %r1762, %r2649;
	mul.f32 	%r1763, %r1763, %r2649;
	mul.f32 	%r1774, %r1774, %r2650;
	mul.f32 	%r1775, %r1775, %r2650;
	mul.f32 	%r1776, %r1776, %r2651;
	mul.f32 	%r1777, %r1777, %r2651;
	mul.f32 	%r1788, %r1788, %r2650;
	mul.f32 	%r1789, %r1789, %r2650;
	mul.f32 	%r1790, %r1790, %r2651;
	mul.f32 	%r1791, %r1791, %r2651;
	mul.f32 	%r1802, %r1802, %r2650;
	mul.f32 	%r1803, %r1803, %r2650;
	mul.f32 	%r1804, %r1804, %r2651;
	mul.f32 	%r1805, %r1805, %r2651;
	mul.f32 	%r1816, %r1816, %r2650;
	mul.f32 	%r1817, %r1817, %r2650;
	mul.f32 	%r1818, %r1818, %r2651;
	mul.f32 	%r1819, %r1819, %r2651;
	mul.f32 	%r1830, %r1830, %r2650;
	mul.f32 	%r1831, %r1831, %r2650;
	mul.f32 	%r1832, %r1832, %r2651;
	mul.f32 	%r1833, %r1833, %r2651;
	mul.f32 	%r1844, %r1844, %r2650;
	mul.f32 	%r1845, %r1845, %r2650;
	mul.f32 	%r1846, %r1846, %r2651;
	mul.f32 	%r1847, %r1847, %r2651;
	mul.f32 	%r1858, %r1858, %r2650;
	mul.f32 	%r1859, %r1859, %r2650;
	mul.f32 	%r1860, %r1860, %r2651;
	mul.f32 	%r1861, %r1861, %r2651;
	mul.f32 	%r1872, %r1872, %r2650;
	mul.f32 	%r1873, %r1873, %r2650;
	mul.f32 	%r1874, %r1874, %r2651;
	mul.f32 	%r1875, %r1875, %r2651;
	.loc	1 65 20                         // gqa.py:65:20 @[ gqa.py:185:82 ]
	add.s32 	%r2652, %r305, 49152;
	add.s32 	%r2653, %r2652, %r2343;
	shl.b32 	%r2654, %r26, 1;
	add.s32 	%r1362, %r2653, %r2654;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r1450, %r1451, %r1674, %r1675}, [%r1362];
	// end inline asm
	add.s32 	%r1367, %r1362, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r1898, %r1899, %r2122, %r2123}, [%r1367];
	// end inline asm
	add.s32 	%r1372, %r2653, %r2655;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r1464, %r1465, %r1688, %r1689}, [%r1372];
	// end inline asm
	add.s32 	%r1377, %r2653, %r2656;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r1912, %r1913, %r2136, %r2137}, [%r1377];
	// end inline asm
	add.s32 	%r1382, %r2653, %r2657;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r1478, %r1479, %r1702, %r1703}, [%r1382];
	// end inline asm
	add.s32 	%r1387, %r2653, %r2658;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r1926, %r1927, %r2150, %r2151}, [%r1387];
	// end inline asm
	add.s32 	%r1392, %r2653, %r2659;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r1492, %r1493, %r1716, %r1717}, [%r1392];
	// end inline asm
	add.s32 	%r1397, %r2653, %r2660;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r1940, %r1941, %r2164, %r2165}, [%r1397];
	// end inline asm
	add.s32 	%r1402, %r2653, %r2661;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r1506, %r1507, %r1730, %r1731}, [%r1402];
	// end inline asm
	add.s32 	%r1407, %r2653, %r2662;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r1954, %r1955, %r2178, %r2179}, [%r1407];
	// end inline asm
	add.s32 	%r1412, %r2653, %r2663;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r1520, %r1521, %r1744, %r1745}, [%r1412];
	// end inline asm
	add.s32 	%r1417, %r2653, %r2664;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r1968, %r1969, %r2192, %r2193}, [%r1417];
	// end inline asm
	add.s32 	%r1422, %r2653, %r2665;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r1534, %r1535, %r1758, %r1759}, [%r1422];
	// end inline asm
	add.s32 	%r1427, %r2653, %r2666;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r1982, %r1983, %r2206, %r2207}, [%r1427];
	// end inline asm
	add.s32 	%r1432, %r2653, %r2667;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r1548, %r1549, %r1772, %r1773}, [%r1432];
	// end inline asm
	add.s32 	%r1437, %r2653, %r2668;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r1996, %r1997, %r2220, %r2221}, [%r1437];
	// end inline asm
	.loc	1 69 21                         // gqa.py:69:21 @[ gqa.py:185:82 ]
	cvt.rn.f16x2.f32 	%r1460, %r2505, %r2504;
	cvt.rn.f16x2.f32 	%r1461, %r2507, %r2506;
	cvt.rn.f16x2.f32 	%r1462, %r2509, %r2508;
	cvt.rn.f16x2.f32 	%r1463, %r2511, %r2510;
	cvt.rn.f16x2.f32 	%r1684, %r2513, %r2512;
	cvt.rn.f16x2.f32 	%r1685, %r2515, %r2514;
	cvt.rn.f16x2.f32 	%r1686, %r2517, %r2516;
	cvt.rn.f16x2.f32 	%r1687, %r2519, %r2518;
	cvt.rn.f16x2.f32 	%r1908, %r2521, %r2520;
	cvt.rn.f16x2.f32 	%r1909, %r2523, %r2522;
	cvt.rn.f16x2.f32 	%r1910, %r2525, %r2524;
	cvt.rn.f16x2.f32 	%r1911, %r2527, %r2526;
	cvt.rn.f16x2.f32 	%r2132, %r2529, %r2528;
	cvt.rn.f16x2.f32 	%r2133, %r2531, %r2530;
	cvt.rn.f16x2.f32 	%r2134, %r2533, %r2532;
	cvt.rn.f16x2.f32 	%r2135, %r2535, %r2534;
	cvt.rn.f16x2.f32 	%r1572, %r2537, %r2536;
	cvt.rn.f16x2.f32 	%r1573, %r2539, %r2538;
	cvt.rn.f16x2.f32 	%r1574, %r2541, %r2540;
	cvt.rn.f16x2.f32 	%r1575, %r2543, %r2542;
	cvt.rn.f16x2.f32 	%r1796, %r2545, %r2544;
	cvt.rn.f16x2.f32 	%r1797, %r2547, %r2546;
	cvt.rn.f16x2.f32 	%r1798, %r2549, %r2548;
	cvt.rn.f16x2.f32 	%r1799, %r2551, %r2550;
	cvt.rn.f16x2.f32 	%r2020, %r2553, %r2552;
	cvt.rn.f16x2.f32 	%r2021, %r2555, %r2554;
	cvt.rn.f16x2.f32 	%r2022, %r2557, %r2556;
	cvt.rn.f16x2.f32 	%r2023, %r2559, %r2558;
	cvt.rn.f16x2.f32 	%r2244, %r2561, %r2560;
	cvt.rn.f16x2.f32 	%r2245, %r2563, %r2562;
	cvt.rn.f16x2.f32 	%r2246, %r2565, %r2564;
	cvt.rn.f16x2.f32 	%r2247, %r2567, %r2566;
	.loc	1 70 27                         // gqa.py:70:27 @[ gqa.py:185:82 ]
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1662, %r1663, %r1664, %r1665 }, { %r1460, %r1461, %r1462, %r1463 }, { %r1450, %r1451 }, { %r1662, %r1663, %r1664, %r1665 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1676, %r1677, %r1678, %r1679 }, { %r1460, %r1461, %r1462, %r1463 }, { %r1464, %r1465 }, { %r1676, %r1677, %r1678, %r1679 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1690, %r1691, %r1692, %r1693 }, { %r1460, %r1461, %r1462, %r1463 }, { %r1478, %r1479 }, { %r1690, %r1691, %r1692, %r1693 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1704, %r1705, %r1706, %r1707 }, { %r1460, %r1461, %r1462, %r1463 }, { %r1492, %r1493 }, { %r1704, %r1705, %r1706, %r1707 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1718, %r1719, %r1720, %r1721 }, { %r1460, %r1461, %r1462, %r1463 }, { %r1506, %r1507 }, { %r1718, %r1719, %r1720, %r1721 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1732, %r1733, %r1734, %r1735 }, { %r1460, %r1461, %r1462, %r1463 }, { %r1520, %r1521 }, { %r1732, %r1733, %r1734, %r1735 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1746, %r1747, %r1748, %r1749 }, { %r1460, %r1461, %r1462, %r1463 }, { %r1534, %r1535 }, { %r1746, %r1747, %r1748, %r1749 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1760, %r1761, %r1762, %r1763 }, { %r1460, %r1461, %r1462, %r1463 }, { %r1548, %r1549 }, { %r1760, %r1761, %r1762, %r1763 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1774, %r1775, %r1776, %r1777 }, { %r1572, %r1573, %r1574, %r1575 }, { %r1450, %r1451 }, { %r1774, %r1775, %r1776, %r1777 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1788, %r1789, %r1790, %r1791 }, { %r1572, %r1573, %r1574, %r1575 }, { %r1464, %r1465 }, { %r1788, %r1789, %r1790, %r1791 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1802, %r1803, %r1804, %r1805 }, { %r1572, %r1573, %r1574, %r1575 }, { %r1478, %r1479 }, { %r1802, %r1803, %r1804, %r1805 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1816, %r1817, %r1818, %r1819 }, { %r1572, %r1573, %r1574, %r1575 }, { %r1492, %r1493 }, { %r1816, %r1817, %r1818, %r1819 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1830, %r1831, %r1832, %r1833 }, { %r1572, %r1573, %r1574, %r1575 }, { %r1506, %r1507 }, { %r1830, %r1831, %r1832, %r1833 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1844, %r1845, %r1846, %r1847 }, { %r1572, %r1573, %r1574, %r1575 }, { %r1520, %r1521 }, { %r1844, %r1845, %r1846, %r1847 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1858, %r1859, %r1860, %r1861 }, { %r1572, %r1573, %r1574, %r1575 }, { %r1534, %r1535 }, { %r1858, %r1859, %r1860, %r1861 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1872, %r1873, %r1874, %r1875 }, { %r1572, %r1573, %r1574, %r1575 }, { %r1548, %r1549 }, { %r1872, %r1873, %r1874, %r1875 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1662, %r1663, %r1664, %r1665 }, { %r1684, %r1685, %r1686, %r1687 }, { %r1674, %r1675 }, { %r1662, %r1663, %r1664, %r1665 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1676, %r1677, %r1678, %r1679 }, { %r1684, %r1685, %r1686, %r1687 }, { %r1688, %r1689 }, { %r1676, %r1677, %r1678, %r1679 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1690, %r1691, %r1692, %r1693 }, { %r1684, %r1685, %r1686, %r1687 }, { %r1702, %r1703 }, { %r1690, %r1691, %r1692, %r1693 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1704, %r1705, %r1706, %r1707 }, { %r1684, %r1685, %r1686, %r1687 }, { %r1716, %r1717 }, { %r1704, %r1705, %r1706, %r1707 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1718, %r1719, %r1720, %r1721 }, { %r1684, %r1685, %r1686, %r1687 }, { %r1730, %r1731 }, { %r1718, %r1719, %r1720, %r1721 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1732, %r1733, %r1734, %r1735 }, { %r1684, %r1685, %r1686, %r1687 }, { %r1744, %r1745 }, { %r1732, %r1733, %r1734, %r1735 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1746, %r1747, %r1748, %r1749 }, { %r1684, %r1685, %r1686, %r1687 }, { %r1758, %r1759 }, { %r1746, %r1747, %r1748, %r1749 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1760, %r1761, %r1762, %r1763 }, { %r1684, %r1685, %r1686, %r1687 }, { %r1772, %r1773 }, { %r1760, %r1761, %r1762, %r1763 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1774, %r1775, %r1776, %r1777 }, { %r1796, %r1797, %r1798, %r1799 }, { %r1674, %r1675 }, { %r1774, %r1775, %r1776, %r1777 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1788, %r1789, %r1790, %r1791 }, { %r1796, %r1797, %r1798, %r1799 }, { %r1688, %r1689 }, { %r1788, %r1789, %r1790, %r1791 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1802, %r1803, %r1804, %r1805 }, { %r1796, %r1797, %r1798, %r1799 }, { %r1702, %r1703 }, { %r1802, %r1803, %r1804, %r1805 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1816, %r1817, %r1818, %r1819 }, { %r1796, %r1797, %r1798, %r1799 }, { %r1716, %r1717 }, { %r1816, %r1817, %r1818, %r1819 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1830, %r1831, %r1832, %r1833 }, { %r1796, %r1797, %r1798, %r1799 }, { %r1730, %r1731 }, { %r1830, %r1831, %r1832, %r1833 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1844, %r1845, %r1846, %r1847 }, { %r1796, %r1797, %r1798, %r1799 }, { %r1744, %r1745 }, { %r1844, %r1845, %r1846, %r1847 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1858, %r1859, %r1860, %r1861 }, { %r1796, %r1797, %r1798, %r1799 }, { %r1758, %r1759 }, { %r1858, %r1859, %r1860, %r1861 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1872, %r1873, %r1874, %r1875 }, { %r1796, %r1797, %r1798, %r1799 }, { %r1772, %r1773 }, { %r1872, %r1873, %r1874, %r1875 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1662, %r1663, %r1664, %r1665 }, { %r1908, %r1909, %r1910, %r1911 }, { %r1898, %r1899 }, { %r1662, %r1663, %r1664, %r1665 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1676, %r1677, %r1678, %r1679 }, { %r1908, %r1909, %r1910, %r1911 }, { %r1912, %r1913 }, { %r1676, %r1677, %r1678, %r1679 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1690, %r1691, %r1692, %r1693 }, { %r1908, %r1909, %r1910, %r1911 }, { %r1926, %r1927 }, { %r1690, %r1691, %r1692, %r1693 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1704, %r1705, %r1706, %r1707 }, { %r1908, %r1909, %r1910, %r1911 }, { %r1940, %r1941 }, { %r1704, %r1705, %r1706, %r1707 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1718, %r1719, %r1720, %r1721 }, { %r1908, %r1909, %r1910, %r1911 }, { %r1954, %r1955 }, { %r1718, %r1719, %r1720, %r1721 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1732, %r1733, %r1734, %r1735 }, { %r1908, %r1909, %r1910, %r1911 }, { %r1968, %r1969 }, { %r1732, %r1733, %r1734, %r1735 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1746, %r1747, %r1748, %r1749 }, { %r1908, %r1909, %r1910, %r1911 }, { %r1982, %r1983 }, { %r1746, %r1747, %r1748, %r1749 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1760, %r1761, %r1762, %r1763 }, { %r1908, %r1909, %r1910, %r1911 }, { %r1996, %r1997 }, { %r1760, %r1761, %r1762, %r1763 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1774, %r1775, %r1776, %r1777 }, { %r2020, %r2021, %r2022, %r2023 }, { %r1898, %r1899 }, { %r1774, %r1775, %r1776, %r1777 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1788, %r1789, %r1790, %r1791 }, { %r2020, %r2021, %r2022, %r2023 }, { %r1912, %r1913 }, { %r1788, %r1789, %r1790, %r1791 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1802, %r1803, %r1804, %r1805 }, { %r2020, %r2021, %r2022, %r2023 }, { %r1926, %r1927 }, { %r1802, %r1803, %r1804, %r1805 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1816, %r1817, %r1818, %r1819 }, { %r2020, %r2021, %r2022, %r2023 }, { %r1940, %r1941 }, { %r1816, %r1817, %r1818, %r1819 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1830, %r1831, %r1832, %r1833 }, { %r2020, %r2021, %r2022, %r2023 }, { %r1954, %r1955 }, { %r1830, %r1831, %r1832, %r1833 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1844, %r1845, %r1846, %r1847 }, { %r2020, %r2021, %r2022, %r2023 }, { %r1968, %r1969 }, { %r1844, %r1845, %r1846, %r1847 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1858, %r1859, %r1860, %r1861 }, { %r2020, %r2021, %r2022, %r2023 }, { %r1982, %r1983 }, { %r1858, %r1859, %r1860, %r1861 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1872, %r1873, %r1874, %r1875 }, { %r2020, %r2021, %r2022, %r2023 }, { %r1996, %r1997 }, { %r1872, %r1873, %r1874, %r1875 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1662, %r1663, %r1664, %r1665 }, { %r2132, %r2133, %r2134, %r2135 }, { %r2122, %r2123 }, { %r1662, %r1663, %r1664, %r1665 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1676, %r1677, %r1678, %r1679 }, { %r2132, %r2133, %r2134, %r2135 }, { %r2136, %r2137 }, { %r1676, %r1677, %r1678, %r1679 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1690, %r1691, %r1692, %r1693 }, { %r2132, %r2133, %r2134, %r2135 }, { %r2150, %r2151 }, { %r1690, %r1691, %r1692, %r1693 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1704, %r1705, %r1706, %r1707 }, { %r2132, %r2133, %r2134, %r2135 }, { %r2164, %r2165 }, { %r1704, %r1705, %r1706, %r1707 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1718, %r1719, %r1720, %r1721 }, { %r2132, %r2133, %r2134, %r2135 }, { %r2178, %r2179 }, { %r1718, %r1719, %r1720, %r1721 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1732, %r1733, %r1734, %r1735 }, { %r2132, %r2133, %r2134, %r2135 }, { %r2192, %r2193 }, { %r1732, %r1733, %r1734, %r1735 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1746, %r1747, %r1748, %r1749 }, { %r2132, %r2133, %r2134, %r2135 }, { %r2206, %r2207 }, { %r1746, %r1747, %r1748, %r1749 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1760, %r1761, %r1762, %r1763 }, { %r2132, %r2133, %r2134, %r2135 }, { %r2220, %r2221 }, { %r1760, %r1761, %r1762, %r1763 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1774, %r1775, %r1776, %r1777 }, { %r2244, %r2245, %r2246, %r2247 }, { %r2122, %r2123 }, { %r1774, %r1775, %r1776, %r1777 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1788, %r1789, %r1790, %r1791 }, { %r2244, %r2245, %r2246, %r2247 }, { %r2136, %r2137 }, { %r1788, %r1789, %r1790, %r1791 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1802, %r1803, %r1804, %r1805 }, { %r2244, %r2245, %r2246, %r2247 }, { %r2150, %r2151 }, { %r1802, %r1803, %r1804, %r1805 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1816, %r1817, %r1818, %r1819 }, { %r2244, %r2245, %r2246, %r2247 }, { %r2164, %r2165 }, { %r1816, %r1817, %r1818, %r1819 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1830, %r1831, %r1832, %r1833 }, { %r2244, %r2245, %r2246, %r2247 }, { %r2178, %r2179 }, { %r1830, %r1831, %r1832, %r1833 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1844, %r1845, %r1846, %r1847 }, { %r2244, %r2245, %r2246, %r2247 }, { %r2192, %r2193 }, { %r1844, %r1845, %r1846, %r1847 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1858, %r1859, %r1860, %r1861 }, { %r2244, %r2245, %r2246, %r2247 }, { %r2206, %r2207 }, { %r1858, %r1859, %r1860, %r1861 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1872, %r1873, %r1874, %r1875 }, { %r2244, %r2245, %r2246, %r2247 }, { %r2220, %r2221 }, { %r1872, %r1873, %r1874, %r1875 };
	// end inline asm
	.loc	1 44 33                         // gqa.py:44:33 @[ gqa.py:185:82 ]
	add.s32 	%r2669, %r3004, 1;
	setp.gt.s32 	%p3, %r2669, 1;
	selp.b32 	%r3004, 0, %r2669, %p3;
	.loc	1 47 20                         // gqa.py:47:20 @[ gqa.py:185:82 ]
	add.s64 	%rd131, %rd175, %rd11;
	add.s64 	%rd132, %rd177, %rd11;
	shl.b32 	%r2670, %r3004, 13;
	add.s32 	%r2671, %r2345, %r2670;
	bar.sync 	0;
	add.s32 	%r2334, %r2671, %r304;
	add.s32 	%r2336, %r2334, 4096;
	selp.b32 	%r2335, 16, 0, %p1;
	// begin inline asm
	cp.async.cg.shared.global [ %r2334 + 0 ], [ %rd131 + 0 ], 0x10, %r2335;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r2336 + 0 ], [ %rd132 + 0 ], 0x10, %r2335;
	// end inline asm
	cp.async.commit_group;
	.loc	1 65 20                         // gqa.py:65:20 @[ gqa.py:185:82 ]
	add.s64 	%rd133, %rd176, %rd11;
	add.s64 	%rd134, %rd178, %rd11;
	add.s32 	%r2673, %r2652, %r2670;
	add.s32 	%r2338, %r2673, %r304;
	add.s32 	%r2340, %r2338, 4096;
	// begin inline asm
	cp.async.cg.shared.global [ %r2338 + 0 ], [ %rd133 + 0 ], 0x10, %r2335;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r2340 + 0 ], [ %rd134 + 0 ], 0x10, %r2335;
	// end inline asm
	cp.async.commit_group;
	.loc	1 44 33                         // gqa.py:44:33 @[ gqa.py:185:82 ]
	add.s64 	%rd178, %rd178, %rd13;
	add.s64 	%rd177, %rd177, %rd15;
	add.s64 	%rd176, %rd176, %rd13;
	add.s64 	%rd175, %rd175, %rd15;
	setp.lt.u32 	%p4, %r3002, 4032;
	mov.b32 	%r3069, %r122;
	mov.b32 	%r3070, %r123;
	mov.b32 	%r3071, %r124;
	mov.b32 	%r3072, %r125;
	@%p4 bra 	$L__BB0_1;
// %bb.2:
	cp.async.wait_group 	0;
	bar.sync 	0;
$L__tmp4:
	.loc	1 198 24                        // gqa.py:198:24
	setp.lt.f32 	%p5, %r3073, 0f00800000;
	mul.f32 	%r2674, %r3073, 0f4B000000;
	selp.f32 	%r200, %r2674, %r3073, %p5;
	selp.f32 	%r2675, 0fC1B80000, 0f00000000, %p5;
	add.s32 	%r2676, %r200, -1060439283;
	and.b32 	%r2677, %r2676, -8388608;
	sub.s32 	%r2678, %r200, %r2677;
	cvt.rn.f32.s32 	%r2679, %r2677;
	mov.b32 	%r2680, 0f34000000;
	fma.rn.ftz.f32 	%r2681, %r2679, %r2680, %r2675;
	add.f32 	%r2682, %r2678, 0fBF800000;
	mov.b32 	%r2683, 0fBE2C7F30;
	mov.b32 	%r2684, 0f3DC6B27F;
	fma.rn.ftz.f32 	%r2685, %r2684, %r2682, %r2683;
	mov.b32 	%r2686, 0f3E2FCF2A;
	fma.rn.ftz.f32 	%r2687, %r2685, %r2682, %r2686;
	mov.b32 	%r2688, 0fBE374E43;
	fma.rn.ftz.f32 	%r2689, %r2687, %r2682, %r2688;
	mov.b32 	%r2690, 0f3E520BF4;
	fma.rn.ftz.f32 	%r2691, %r2689, %r2682, %r2690;
	mov.b32 	%r2692, 0fBE763C8B;
	fma.rn.ftz.f32 	%r2693, %r2691, %r2682, %r2692;
	mov.b32 	%r2694, 0f3E93BF99;
	fma.rn.ftz.f32 	%r2695, %r2693, %r2682, %r2694;
	mov.b32 	%r2696, 0fBEB8AA49;
	fma.rn.ftz.f32 	%r2697, %r2695, %r2682, %r2696;
	mov.b32 	%r2698, 0f3EF6384A;
	fma.rn.ftz.f32 	%r2699, %r2697, %r2682, %r2698;
	mov.b32 	%r2700, 0fBF38AA3B;
	fma.rn.ftz.f32 	%r2701, %r2699, %r2682, %r2700;
	mul.f32 	%r2702, %r2682, %r2701;
	mul.f32 	%r2703, %r2682, %r2702;
	mov.b32 	%r2704, 0f3FB8AA3B;
	fma.rn.ftz.f32 	%r2705, %r2682, %r2704, %r2703;
	add.f32 	%r3077, %r2681, %r2705;
	setp.lt.u32 	%p6, %r200, 2139095040;
	mov.b32 	%r2706, 0f7F800000;
	@%p6 bra 	$L__BB0_4;
// %bb.3:                               // %__nv_fmaf_rn.exit.i.i
	.loc	1 0 24                          // gqa.py:0:24
	fma.rn.ftz.f32 	%r3077, %r200, %r2706, %r2706;
$L__BB0_4:                              // %__nv_log2f.exit
	.loc	1 198 24                        // gqa.py:198:24
	setp.lt.f32 	%p7, %r3074, 0f00800000;
	mul.f32 	%r2707, %r3074, 0f4B000000;
	selp.f32 	%r205, %r2707, %r3074, %p7;
	selp.f32 	%r2708, 0fC1B80000, 0f00000000, %p7;
	add.s32 	%r2709, %r205, -1060439283;
	and.b32 	%r2710, %r2709, -8388608;
	sub.s32 	%r2711, %r205, %r2710;
	cvt.rn.f32.s32 	%r2712, %r2710;
	fma.rn.ftz.f32 	%r2714, %r2712, %r2680, %r2708;
	add.f32 	%r2715, %r2711, 0fBF800000;
	fma.rn.ftz.f32 	%r2718, %r2684, %r2715, %r2683;
	fma.rn.ftz.f32 	%r2720, %r2718, %r2715, %r2686;
	fma.rn.ftz.f32 	%r2722, %r2720, %r2715, %r2688;
	fma.rn.ftz.f32 	%r2724, %r2722, %r2715, %r2690;
	fma.rn.ftz.f32 	%r2726, %r2724, %r2715, %r2692;
	fma.rn.ftz.f32 	%r2728, %r2726, %r2715, %r2694;
	fma.rn.ftz.f32 	%r2730, %r2728, %r2715, %r2696;
	fma.rn.ftz.f32 	%r2732, %r2730, %r2715, %r2698;
	fma.rn.ftz.f32 	%r2734, %r2732, %r2715, %r2700;
	mul.f32 	%r2735, %r2715, %r2734;
	mul.f32 	%r2736, %r2715, %r2735;
	fma.rn.ftz.f32 	%r2738, %r2715, %r2704, %r2736;
	add.f32 	%r3078, %r2714, %r2738;
	setp.lt.u32 	%p8, %r205, 2139095040;
	@%p8 bra 	$L__BB0_6;
// %bb.5:                               // %__nv_fmaf_rn.exit.i.i333
	.loc	1 0 24                          // gqa.py:0:24
	fma.rn.ftz.f32 	%r3078, %r205, %r2706, %r2706;
$L__BB0_6:                              // %__nv_log2f.exit336
	.loc	1 198 24                        // gqa.py:198:24
	setp.lt.f32 	%p9, %r3075, 0f00800000;
	mul.f32 	%r2740, %r3075, 0f4B000000;
	selp.f32 	%r210, %r2740, %r3075, %p9;
	selp.f32 	%r2741, 0fC1B80000, 0f00000000, %p9;
	add.s32 	%r2742, %r210, -1060439283;
	and.b32 	%r2743, %r2742, -8388608;
	sub.s32 	%r2744, %r210, %r2743;
	cvt.rn.f32.s32 	%r2745, %r2743;
	mov.b32 	%r2746, 0f34000000;
	fma.rn.ftz.f32 	%r2747, %r2745, %r2746, %r2741;
	add.f32 	%r2748, %r2744, 0fBF800000;
	mov.b32 	%r2749, 0fBE2C7F30;
	mov.b32 	%r2750, 0f3DC6B27F;
	fma.rn.ftz.f32 	%r2751, %r2750, %r2748, %r2749;
	mov.b32 	%r2752, 0f3E2FCF2A;
	fma.rn.ftz.f32 	%r2753, %r2751, %r2748, %r2752;
	mov.b32 	%r2754, 0fBE374E43;
	fma.rn.ftz.f32 	%r2755, %r2753, %r2748, %r2754;
	mov.b32 	%r2756, 0f3E520BF4;
	fma.rn.ftz.f32 	%r2757, %r2755, %r2748, %r2756;
	mov.b32 	%r2758, 0fBE763C8B;
	fma.rn.ftz.f32 	%r2759, %r2757, %r2748, %r2758;
	mov.b32 	%r2760, 0f3E93BF99;
	fma.rn.ftz.f32 	%r2761, %r2759, %r2748, %r2760;
	mov.b32 	%r2762, 0fBEB8AA49;
	fma.rn.ftz.f32 	%r2763, %r2761, %r2748, %r2762;
	mov.b32 	%r2764, 0f3EF6384A;
	fma.rn.ftz.f32 	%r2765, %r2763, %r2748, %r2764;
	mov.b32 	%r2766, 0fBF38AA3B;
	fma.rn.ftz.f32 	%r2767, %r2765, %r2748, %r2766;
	mul.f32 	%r2768, %r2748, %r2767;
	mul.f32 	%r2769, %r2748, %r2768;
	mov.b32 	%r2770, 0f3FB8AA3B;
	fma.rn.ftz.f32 	%r2771, %r2748, %r2770, %r2769;
	add.f32 	%r3079, %r2747, %r2771;
	setp.lt.u32 	%p10, %r210, 2139095040;
	mov.b32 	%r2772, 0f7F800000;
	@%p10 bra 	$L__BB0_8;
// %bb.7:                               // %__nv_fmaf_rn.exit.i.i363
	.loc	1 0 24                          // gqa.py:0:24
	fma.rn.ftz.f32 	%r3079, %r210, %r2772, %r2772;
$L__BB0_8:                              // %__nv_log2f.exit366
	.loc	1 198 24                        // gqa.py:198:24
	setp.lt.f32 	%p11, %r3076, 0f00800000;
	mul.f32 	%r2773, %r3076, 0f4B000000;
	selp.f32 	%r215, %r2773, %r3076, %p11;
	selp.f32 	%r2774, 0fC1B80000, 0f00000000, %p11;
	add.s32 	%r2775, %r215, -1060439283;
	and.b32 	%r2776, %r2775, -8388608;
	sub.s32 	%r2777, %r215, %r2776;
	cvt.rn.f32.s32 	%r2778, %r2776;
	fma.rn.ftz.f32 	%r2780, %r2778, %r2746, %r2774;
	add.f32 	%r2781, %r2777, 0fBF800000;
	fma.rn.ftz.f32 	%r2784, %r2750, %r2781, %r2749;
	fma.rn.ftz.f32 	%r2786, %r2784, %r2781, %r2752;
	fma.rn.ftz.f32 	%r2788, %r2786, %r2781, %r2754;
	fma.rn.ftz.f32 	%r2790, %r2788, %r2781, %r2756;
	fma.rn.ftz.f32 	%r2792, %r2790, %r2781, %r2758;
	fma.rn.ftz.f32 	%r2794, %r2792, %r2781, %r2760;
	fma.rn.ftz.f32 	%r2796, %r2794, %r2781, %r2762;
	fma.rn.ftz.f32 	%r2798, %r2796, %r2781, %r2764;
	fma.rn.ftz.f32 	%r2800, %r2798, %r2781, %r2766;
	mul.f32 	%r2801, %r2781, %r2800;
	mul.f32 	%r2802, %r2781, %r2801;
	fma.rn.ftz.f32 	%r2804, %r2781, %r2770, %r2802;
	add.f32 	%r3080, %r2780, %r2804;
	setp.lt.u32 	%p12, %r215, 2139095040;
	@%p12 bra 	$L__BB0_10;
// %bb.9:                               // %__nv_fmaf_rn.exit.i.i393
	.loc	1 0 24                          // gqa.py:0:24
	fma.rn.ftz.f32 	%r3080, %r215, %r2772, %r2772;
$L__BB0_10:                             // %__nv_log2f.exit396
	.loc	1 167 46                        // gqa.py:167:46
	and.b32 	%r2839, %r3, 128;
	.loc	1 198 24                        // gqa.py:198:24
	setp.eq.f32 	%p13, %r210, 0f00000000;
	selp.f32 	%r2840, 0fFF800000, %r3079, %p13;
	setp.eq.f32 	%p14, %r205, 0f00000000;
	selp.f32 	%r2841, 0fFF800000, %r3078, %p14;
	setp.eq.f32 	%p15, %r200, 0f00000000;
	selp.f32 	%r2842, 0fFF800000, %r3077, %p15;
	.loc	1 159 19                        // gqa.py:159:19
	add.s64 	%rd145, %rd27, %rd11;
	.loc	1 164 8                         // gqa.py:164:8
	cvt.s64.s32 	%rd146, %r219;
	.loc	1 167 46                        // gqa.py:167:46
	and.b32 	%r2843, %r3, 255;
	.loc	1 167 33                        // gqa.py:167:33
	or.b32 	%r2844, %r2, %r2843;
	.loc	1 198 24                        // gqa.py:198:24
	setp.eq.f32 	%p16, %r215, 0f00000000;
	selp.f32 	%r2845, 0fFF800000, %r3080, %p16;
	.loc	1 198 11                        // gqa.py:198:11
	add.f32 	%r2846, %r122, %r2842;
	add.f32 	%r2847, %r123, %r2841;
	add.f32 	%r2848, %r124, %r2840;
	add.f32 	%r2849, %r125, %r2845;
	.loc	1 199 16                        // gqa.py:199:16
	div.full.f32 	%r2850, %r1662, %r3073;
	div.full.f32 	%r2851, %r1663, %r3073;
	div.full.f32 	%r2852, %r1664, %r3074;
	div.full.f32 	%r2853, %r1665, %r3074;
	div.full.f32 	%r2854, %r1676, %r3073;
	div.full.f32 	%r2855, %r1677, %r3073;
	div.full.f32 	%r2856, %r1678, %r3074;
	div.full.f32 	%r2857, %r1679, %r3074;
	div.full.f32 	%r2858, %r1690, %r3073;
	div.full.f32 	%r2859, %r1691, %r3073;
	div.full.f32 	%r2860, %r1692, %r3074;
	div.full.f32 	%r2861, %r1693, %r3074;
	div.full.f32 	%r2862, %r1704, %r3073;
	div.full.f32 	%r2863, %r1705, %r3073;
	div.full.f32 	%r2864, %r1706, %r3074;
	div.full.f32 	%r2865, %r1707, %r3074;
	div.full.f32 	%r2866, %r1718, %r3073;
	div.full.f32 	%r2867, %r1719, %r3073;
	div.full.f32 	%r2868, %r1720, %r3074;
	div.full.f32 	%r2869, %r1721, %r3074;
	div.full.f32 	%r2870, %r1732, %r3073;
	div.full.f32 	%r2871, %r1733, %r3073;
	div.full.f32 	%r2872, %r1734, %r3074;
	div.full.f32 	%r2873, %r1735, %r3074;
	div.full.f32 	%r2874, %r1746, %r3073;
	div.full.f32 	%r2875, %r1747, %r3073;
	div.full.f32 	%r2876, %r1748, %r3074;
	div.full.f32 	%r2877, %r1749, %r3074;
	div.full.f32 	%r2878, %r1760, %r3073;
	div.full.f32 	%r2879, %r1761, %r3073;
	div.full.f32 	%r2880, %r1762, %r3074;
	div.full.f32 	%r2881, %r1763, %r3074;
	div.full.f32 	%r2882, %r1774, %r3075;
	div.full.f32 	%r2883, %r1775, %r3075;
	div.full.f32 	%r2884, %r1776, %r3076;
	div.full.f32 	%r2885, %r1777, %r3076;
	div.full.f32 	%r2886, %r1788, %r3075;
	div.full.f32 	%r2887, %r1789, %r3075;
	div.full.f32 	%r2888, %r1790, %r3076;
	div.full.f32 	%r2889, %r1791, %r3076;
	div.full.f32 	%r2890, %r1802, %r3075;
	div.full.f32 	%r2891, %r1803, %r3075;
	div.full.f32 	%r2892, %r1804, %r3076;
	div.full.f32 	%r2893, %r1805, %r3076;
	div.full.f32 	%r2894, %r1816, %r3075;
	div.full.f32 	%r2895, %r1817, %r3075;
	div.full.f32 	%r2896, %r1818, %r3076;
	div.full.f32 	%r2897, %r1819, %r3076;
	div.full.f32 	%r2898, %r1830, %r3075;
	div.full.f32 	%r2899, %r1831, %r3075;
	div.full.f32 	%r2900, %r1832, %r3076;
	div.full.f32 	%r2901, %r1833, %r3076;
	div.full.f32 	%r2902, %r1844, %r3075;
	div.full.f32 	%r2903, %r1845, %r3075;
	div.full.f32 	%r2904, %r1846, %r3076;
	div.full.f32 	%r2905, %r1847, %r3076;
	div.full.f32 	%r2906, %r1858, %r3075;
	div.full.f32 	%r2907, %r1859, %r3075;
	div.full.f32 	%r2908, %r1860, %r3076;
	div.full.f32 	%r2909, %r1861, %r3076;
	div.full.f32 	%r2910, %r1872, %r3075;
	div.full.f32 	%r2911, %r1873, %r3075;
	div.full.f32 	%r2912, %r1874, %r3076;
	div.full.f32 	%r2913, %r1875, %r3076;
	.loc	1 200 26                        // gqa.py:200:26
	shl.b32 	%r2914, %r1, 5;
	.loc	1 200 17                        // gqa.py:200:17
	mul.wide.u32 	%rd147, %r2914, 4;
	add.s64 	%rd148, %rd26, %rd147;
	.loc	1 200 34                        // gqa.py:200:34
	mul.wide.s32 	%rd149, %r2844, 4;
	add.s64 	%rd135, %rd148, %rd149;
	.loc	1 201 21                        // gqa.py:201:21
	shl.b32 	%r2915, %r3, 1;
	and.b32 	%r2916, %r2915, 192;
	add.s32 	%r2918, %r305, %r2916;
	and.b32 	%r2919, %r3, 28;
	add.s32 	%r2920, %r2918, %r2919;
	shl.b32 	%r2921, %r2839, 1;
	add.s32 	%r2922, %r2920, %r2921;
	st.shared.b32 	[%r2922], %r2846;
	st.shared.b32 	[%r2922+32], %r2847;
	st.shared.b32 	[%r2922+512], %r2848;
	st.shared.b32 	[%r2922+544], %r2849;
	bar.sync 	0;
	shl.b32 	%r2923, %r2843, 2;
	add.s32 	%r2924, %r305, %r2923;
	ld.shared.b32 	%r2806, [%r2924];
	// begin inline asm
	st.global.b32 [ %rd135 + 0 ], { %r2806 };
	// end inline asm
	.loc	1 202 33                        // gqa.py:202:33
	cvt.rn.f16x2.f32 	%r2925, %r2851, %r2850;
	cvt.rn.f16x2.f32 	%r2926, %r2853, %r2852;
	cvt.rn.f16x2.f32 	%r2927, %r2855, %r2854;
	cvt.rn.f16x2.f32 	%r2928, %r2857, %r2856;
	cvt.rn.f16x2.f32 	%r2929, %r2859, %r2858;
	cvt.rn.f16x2.f32 	%r2930, %r2861, %r2860;
	cvt.rn.f16x2.f32 	%r2931, %r2863, %r2862;
	cvt.rn.f16x2.f32 	%r2932, %r2865, %r2864;
	cvt.rn.f16x2.f32 	%r2933, %r2867, %r2866;
	cvt.rn.f16x2.f32 	%r2934, %r2869, %r2868;
	cvt.rn.f16x2.f32 	%r2935, %r2871, %r2870;
	cvt.rn.f16x2.f32 	%r2936, %r2873, %r2872;
	cvt.rn.f16x2.f32 	%r2937, %r2875, %r2874;
	cvt.rn.f16x2.f32 	%r2938, %r2877, %r2876;
	cvt.rn.f16x2.f32 	%r2939, %r2879, %r2878;
	cvt.rn.f16x2.f32 	%r2940, %r2881, %r2880;
	cvt.rn.f16x2.f32 	%r2941, %r2883, %r2882;
	cvt.rn.f16x2.f32 	%r2942, %r2885, %r2884;
	cvt.rn.f16x2.f32 	%r2943, %r2887, %r2886;
	cvt.rn.f16x2.f32 	%r2944, %r2889, %r2888;
	cvt.rn.f16x2.f32 	%r2945, %r2891, %r2890;
	cvt.rn.f16x2.f32 	%r2946, %r2893, %r2892;
	cvt.rn.f16x2.f32 	%r2947, %r2895, %r2894;
	cvt.rn.f16x2.f32 	%r2948, %r2897, %r2896;
	cvt.rn.f16x2.f32 	%r2949, %r2899, %r2898;
	cvt.rn.f16x2.f32 	%r2950, %r2901, %r2900;
	cvt.rn.f16x2.f32 	%r2951, %r2903, %r2902;
	cvt.rn.f16x2.f32 	%r2952, %r2905, %r2904;
	cvt.rn.f16x2.f32 	%r2953, %r2907, %r2906;
	cvt.rn.f16x2.f32 	%r2954, %r2909, %r2908;
	cvt.rn.f16x2.f32 	%r2955, %r2911, %r2910;
	cvt.rn.f16x2.f32 	%r2956, %r2913, %r2912;
	.loc	1 202 26                        // gqa.py:202:26
	mul.lo.s64 	%rd150, %rd2, %rd146;
	mul.lo.s64 	%rd151, %rd3, %rd146;
	mul.lo.s64 	%rd152, %rd4, %rd146;
	mul.lo.s64 	%rd153, %rd5, %rd146;
	mul.lo.s64 	%rd154, %rd6, %rd146;
	mul.lo.s64 	%rd155, %rd7, %rd146;
	mul.lo.s64 	%rd156, %rd8, %rd146;
	mul.lo.s64 	%rd157, %rd9, %rd146;
	shl.b64 	%rd158, %rd150, 1;
	add.s64 	%rd159, %rd145, %rd158;
	shl.b64 	%rd160, %rd10, 1;
	add.s64 	%rd136, %rd159, %rd160;
	shl.b64 	%rd161, %rd151, 1;
	add.s64 	%rd162, %rd145, %rd161;
	add.s64 	%rd137, %rd162, %rd160;
	shl.b64 	%rd163, %rd152, 1;
	add.s64 	%rd164, %rd145, %rd163;
	add.s64 	%rd138, %rd164, %rd160;
	shl.b64 	%rd165, %rd153, 1;
	add.s64 	%rd166, %rd145, %rd165;
	add.s64 	%rd139, %rd166, %rd160;
	shl.b64 	%rd167, %rd154, 1;
	add.s64 	%rd168, %rd145, %rd167;
	add.s64 	%rd140, %rd168, %rd160;
	shl.b64 	%rd169, %rd155, 1;
	add.s64 	%rd170, %rd145, %rd169;
	add.s64 	%rd141, %rd170, %rd160;
	shl.b64 	%rd171, %rd156, 1;
	add.s64 	%rd172, %rd145, %rd171;
	add.s64 	%rd142, %rd172, %rd160;
	shl.b64 	%rd173, %rd157, 1;
	add.s64 	%rd174, %rd145, %rd173;
	add.s64 	%rd143, %rd174, %rd160;
	bar.sync 	0;
	and.b32 	%r2957, %r2915, 6;
	shl.b32 	%r2958, %r3, 4;
	and.b32 	%r2959, %r2958, 192;
	or.b32 	%r2960, %r2959, %r2957;
	shl.b32 	%r2961, %r4, 4;
	or.b32 	%r2962, %r2960, %r2961;
	and.b32 	%r2963, %r8, 3072;
	or.b32 	%r2964, %r2962, %r2963;
	shl.b32 	%r2965, %r2839, 5;
	or.b32 	%r2966, %r2964, %r2965;
	and.b32 	%r2967, %r6, 2040;
	shr.u32 	%r2968, %r2966, 2;
	and.b32 	%r2969, %r2968, 1916;
	add.s32 	%r2970, %r305, %r2969;
	shl.b32 	%r2971, %r2966, 1;
	add.s32 	%r2972, %r2970, %r2971;
	st.shared.b32 	[%r2972], %r2925;
	or.b32 	%r2973, %r2966, 512;
	shr.u32 	%r2974, %r2973, 2;
	and.b32 	%r2975, %r2974, 1073741822;
	add.s32 	%r2976, %r305, %r2975;
	add.s32 	%r2977, %r2976, %r2971;
	st.shared.b32 	[%r2977+1024], %r2926;
	st.shared.b32 	[%r2972+16], %r2927;
	and.b32 	%r2978, %r2974, 1073741808;
	add.s32 	%r2979, %r305, %r2978;
	add.s32 	%r2980, %r2979, %r2971;
	st.shared.b32 	[%r2980+1040], %r2928;
	st.shared.b32 	[%r2972+32], %r2929;
	st.shared.b32 	[%r2980+1056], %r2930;
	st.shared.b32 	[%r2972+48], %r2931;
	st.shared.b32 	[%r2980+1072], %r2932;
	st.shared.b32 	[%r2972+64], %r2933;
	st.shared.b32 	[%r2980+1088], %r2934;
	st.shared.b32 	[%r2972+80], %r2935;
	st.shared.b32 	[%r2980+1104], %r2936;
	st.shared.b32 	[%r2972+96], %r2937;
	st.shared.b32 	[%r2980+1120], %r2938;
	st.shared.b32 	[%r2972+112], %r2939;
	st.shared.b32 	[%r2980+1136], %r2940;
	bar.sync 	0;
	and.b32 	%r2981, %r3, 248;
	shl.b32 	%r2982, %r2981, 1;
	add.s32 	%r2983, %r305, %r2982;
	shl.b32 	%r2984, %r2967, 1;
	add.s32 	%r2985, %r2983, %r2984;
	ld.shared.v4.b32 	{%r2807, %r2808, %r2809, %r2810}, [%r2985];
	or.b32 	%r2986, %r2967, 2048;
	shr.u32 	%r2987, %r2986, 2;
	and.b32 	%r2988, %r2987, 1008;
	add.s32 	%r2989, %r305, %r2988;
	add.s32 	%r2990, %r2989, %r2984;
	ld.shared.v4.b32 	{%r2811, %r2812, %r2813, %r2814}, [%r2990+4096];
	or.b32 	%r2991, %r2967, 4096;
	shr.u32 	%r2992, %r2991, 2;
	and.b32 	%r2993, %r2992, 1520;
	add.s32 	%r2994, %r305, %r2993;
	add.s32 	%r2995, %r2994, %r2984;
	ld.shared.v4.b32 	{%r2815, %r2816, %r2817, %r2818}, [%r2995+8192];
	or.b32 	%r2996, %r6, 6144;
	shr.u32 	%r2997, %r2996, 2;
	and.b32 	%r2998, %r2997, 2032;
	add.s32 	%r2999, %r305, %r2998;
	shl.b32 	%r3000, %r2996, 1;
	add.s32 	%r3001, %r2999, %r3000;
	ld.shared.v4.b32 	{%r2819, %r2820, %r2821, %r2822}, [%r3001];
	bar.sync 	0;
	st.shared.b32 	[%r2972], %r2941;
	st.shared.b32 	[%r2977+1024], %r2942;
	st.shared.b32 	[%r2972+16], %r2943;
	st.shared.b32 	[%r2980+1040], %r2944;
	st.shared.b32 	[%r2972+32], %r2945;
	st.shared.b32 	[%r2980+1056], %r2946;
	st.shared.b32 	[%r2972+48], %r2947;
	st.shared.b32 	[%r2980+1072], %r2948;
	st.shared.b32 	[%r2972+64], %r2949;
	st.shared.b32 	[%r2980+1088], %r2950;
	st.shared.b32 	[%r2972+80], %r2951;
	st.shared.b32 	[%r2980+1104], %r2952;
	st.shared.b32 	[%r2972+96], %r2953;
	st.shared.b32 	[%r2980+1120], %r2954;
	st.shared.b32 	[%r2972+112], %r2955;
	st.shared.b32 	[%r2980+1136], %r2956;
	bar.sync 	0;
	ld.shared.v4.b32 	{%r2823, %r2824, %r2825, %r2826}, [%r2985];
	ld.shared.v4.b32 	{%r2827, %r2828, %r2829, %r2830}, [%r2990+4096];
	ld.shared.v4.b32 	{%r2831, %r2832, %r2833, %r2834}, [%r2995+8192];
	ld.shared.v4.b32 	{%r2835, %r2836, %r2837, %r2838}, [%r3001];
	// begin inline asm
	st.global.v4.b32 [ %rd136 + 0 ], { %r2807, %r2808, %r2809, %r2810 };
	// end inline asm
	// begin inline asm
	st.global.v4.b32 [ %rd137 + 0 ], { %r2811, %r2812, %r2813, %r2814 };
	// end inline asm
	// begin inline asm
	st.global.v4.b32 [ %rd138 + 0 ], { %r2815, %r2816, %r2817, %r2818 };
	// end inline asm
	// begin inline asm
	st.global.v4.b32 [ %rd139 + 0 ], { %r2819, %r2820, %r2821, %r2822 };
	// end inline asm
	// begin inline asm
	st.global.v4.b32 [ %rd140 + 0 ], { %r2823, %r2824, %r2825, %r2826 };
	// end inline asm
	// begin inline asm
	st.global.v4.b32 [ %rd141 + 0 ], { %r2827, %r2828, %r2829, %r2830 };
	// end inline asm
	// begin inline asm
	st.global.v4.b32 [ %rd142 + 0 ], { %r2831, %r2832, %r2833, %r2834 };
	// end inline asm
	// begin inline asm
	st.global.v4.b32 [ %rd143 + 0 ], { %r2835, %r2836, %r2837, %r2838 };
	// end inline asm
	.loc	1 202 4                         // gqa.py:202:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/ubuntu/anjiang/PTX_dataset/triton_ptx/gqa.py"
	.file	2 "/mnt/efs/anjiang/miniconda3/envs/ptx/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 131                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x7c DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 103                                 // DW_AT_name
.b8 113
.b8 97
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 117
.b8 98
.b8 117
.b8 110
.b8 116
.b8 117
.b8 47
.b8 97
.b8 110
.b8 106
.b8 105
.b8 97
.b8 110
.b8 103
.b8 47
.b8 80
.b8 84
.b8 88
.b8 95
.b8 100
.b8 97
.b8 116
.b8 97
.b8 115
.b8 101
.b8 116
.b8 47
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 116
.b8 120
.b8 0
.b8 2                                   // Abbrev [2] 0x4c:0xc DW_TAG_subprogram
.b8 95                                  // DW_AT_name
.b8 97
.b8 116
.b8 116
.b8 110
.b8 95
.b8 102
.b8 119
.b8 100
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x58:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 76                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x6d:0x18 DW_TAG_inlined_subroutine
.b32 76                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 185                                 // DW_AT_call_line
.b8 82                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
