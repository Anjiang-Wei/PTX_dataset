//
// Generated by LLVM NVPTX Back-End
//

.version 8.7
.target sm_80
.address_size 64

	// .globl	_attn_fwd               // -- Begin function _attn_fwd
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @_attn_fwd
.visible .entry _attn_fwd(
	.param .u64 .ptr .global .align 1 _attn_fwd_param_0,
	.param .u64 .ptr .global .align 1 _attn_fwd_param_1,
	.param .u64 .ptr .global .align 1 _attn_fwd_param_2,
	.param .f32 _attn_fwd_param_3,
	.param .u64 .ptr .global .align 1 _attn_fwd_param_4,
	.param .u64 .ptr .global .align 1 _attn_fwd_param_5,
	.param .u32 _attn_fwd_param_6,
	.param .u32 _attn_fwd_param_7,
	.param .u32 _attn_fwd_param_8,
	.param .u32 _attn_fwd_param_9,
	.param .u32 _attn_fwd_param_10,
	.param .u32 _attn_fwd_param_11,
	.param .u32 _attn_fwd_param_12,
	.param .u32 _attn_fwd_param_13,
	.param .u32 _attn_fwd_param_14,
	.param .u32 _attn_fwd_param_15,
	.param .u32 _attn_fwd_param_16,
	.param .u32 _attn_fwd_param_17,
	.param .u32 _attn_fwd_param_18,
	.param .u64 .ptr .global .align 1 _attn_fwd_param_19
)
.reqntid 128
{
	.reg .pred 	%p<17>;
	.reg .b32 	%r<1957>;
	.reg .b64 	%rd<195>;
	.loc	1 114 0                         // gqa.py:114:0
$L__func_begin0:
	.loc	1 114 0                         // gqa.py:114:0

// %bb.0:
	ld.param.b32 	%r208, [_attn_fwd_param_17];
	ld.param.b64 	%rd27, [_attn_fwd_param_5];
	ld.param.b64 	%rd26, [_attn_fwd_param_4];
	ld.param.b64 	%rd48, [_attn_fwd_param_0];
	ld.param.b64 	%rd49, [_attn_fwd_param_1];
$L__tmp0:
	.loc	1 127 28                        // gqa.py:127:28
	mov.u32 	%r277, %ctaid.x;
	.loc	1 128 27                        // gqa.py:128:27
	mov.u32 	%r1, %ctaid.y;
	ld.param.b64 	%rd50, [_attn_fwd_param_2];
	ld.param.b32 	%r278, [_attn_fwd_param_3];
	ld.param.b32 	%r279, [_attn_fwd_param_18];
	.loc	1 129 22                        // gqa.py:129:22
	div.s32 	%r281, %r1, %r279;
	.loc	1 130 21                        // gqa.py:130:21
	mul.lo.s32 	%r282, %r281, %r279;
	sub.s32 	%r283, %r1, %r282;
	ld.param.b32 	%r284, [_attn_fwd_param_6];
	ld.param.s32 	%rd51, [_attn_fwd_param_7];
	ld.param.s32 	%rd52, [_attn_fwd_param_8];
	.loc	1 131 38                        // gqa.py:131:38
	mul.wide.s32 	%rd53, %r281, %r284;
	.loc	1 131 59                        // gqa.py:131:59
	cvt.u64.u32 	%rd54, %r283;
	ld.param.b32 	%r285, [_attn_fwd_param_11];
	.loc	1 131 50                        // gqa.py:131:50
	mad.lo.s64 	%rd1, %rd54, %rd51, %rd53;
	.loc	1 135 17                        // gqa.py:135:17
	shl.b64 	%rd11, %rd1, 1;
	add.s64 	%rd55, %rd48, %rd11;
	ld.param.b32 	%r286, [_attn_fwd_param_14];
	.loc	1 138 27                        // gqa.py:138:27
	shl.b32 	%r2, %r277, 7;
	.loc	1 140 8                         // gqa.py:140:8
	cvt.s64.s32 	%rd56, %r2;
	.loc	1 143 17                        // gqa.py:143:17
	add.s64 	%rd57, %rd50, %rd11;
	.loc	1 148 8                         // gqa.py:148:8
	cvt.s64.s32 	%rd58, %r286;
	.loc	1 151 17                        // gqa.py:151:17
	add.s64 	%rd59, %rd49, %rd11;
	.loc	1 156 8                         // gqa.py:156:8
	cvt.s64.s32 	%rd60, %r285;
	.loc	1 167 46                        // gqa.py:167:46
	mov.u32 	%r3, %tid.x;
	and.b32 	%r4, %r3, 16;
	shr.u32 	%r287, %r3, 3;
	bfe.u32 	%r288, %r3, 3, 4;
	or.b32 	%r289, %r288, 16;
	or.b32 	%r290, %r288, 32;
	or.b32 	%r291, %r288, 48;
	or.b32 	%r292, %r288, 64;
	or.b32 	%r293, %r288, 80;
	or.b32 	%r294, %r288, 96;
	or.b32 	%r295, %r287, 112;
	bfe.s32 	%r296, %r3, 2, 1;
	.loc	1 175 16                        // gqa.py:175:16
	mul.f32 	%r30, %r278, 0f3FB8AA3B;
	.loc	1 177 16                        // gqa.py:177:16
	cvt.u64.u32 	%rd61, %r288;
	cvt.u64.u32 	%rd62, %r289;
	cvt.u64.u32 	%rd63, %r290;
	cvt.u64.u32 	%rd64, %r291;
	cvt.u64.u32 	%rd65, %r292;
	cvt.u64.u32 	%rd66, %r293;
	cvt.u64.u32 	%rd67, %r294;
	cvt.u64.u32 	%rd68, %r295;
	or.b64 	%rd2, %rd61, %rd56;
	or.b64 	%rd3, %rd62, %rd56;
	or.b64 	%rd4, %rd63, %rd56;
	or.b64 	%rd5, %rd64, %rd56;
	or.b64 	%rd6, %rd65, %rd56;
	or.b64 	%rd7, %rd66, %rd56;
	or.b64 	%rd8, %rd67, %rd56;
	or.b64 	%rd9, %rd68, %rd56;
	mul.lo.s64 	%rd69, %rd2, %rd52;
	mul.lo.s64 	%rd70, %rd3, %rd52;
	mul.lo.s64 	%rd71, %rd4, %rd52;
	mul.lo.s64 	%rd72, %rd5, %rd52;
	mul.lo.s64 	%rd73, %rd6, %rd52;
	mul.lo.s64 	%rd74, %rd7, %rd52;
	mul.lo.s64 	%rd75, %rd8, %rd52;
	mul.lo.s64 	%rd76, %rd9, %rd52;
	shl.b32 	%r6, %r3, 3;
	and.b32 	%r297, %r6, 56;
	cvt.u64.u32 	%rd10, %r297;
	shl.b64 	%rd77, %rd69, 1;
	add.s64 	%rd78, %rd55, %rd77;
	mul.wide.u32 	%rd79, %r297, 2;
	add.s64 	%rd28, %rd78, %rd79;
	shl.b64 	%rd80, %rd70, 1;
	add.s64 	%rd81, %rd55, %rd80;
	add.s64 	%rd29, %rd81, %rd79;
	shl.b64 	%rd82, %rd71, 1;
	add.s64 	%rd83, %rd55, %rd82;
	add.s64 	%rd30, %rd83, %rd79;
	shl.b64 	%rd84, %rd72, 1;
	add.s64 	%rd85, %rd55, %rd84;
	add.s64 	%rd31, %rd85, %rd79;
	shl.b64 	%rd86, %rd73, 1;
	add.s64 	%rd87, %rd55, %rd86;
	add.s64 	%rd32, %rd87, %rd79;
	shl.b64 	%rd88, %rd74, 1;
	add.s64 	%rd89, %rd55, %rd88;
	add.s64 	%rd33, %rd89, %rd79;
	shl.b64 	%rd90, %rd75, 1;
	add.s64 	%rd91, %rd55, %rd90;
	add.s64 	%rd34, %rd91, %rd79;
	shl.b64 	%rd92, %rd76, 1;
	add.s64 	%rd93, %rd55, %rd92;
	add.s64 	%rd35, %rd93, %rd79;
	// begin inline asm
	mov.u32 %r209, 0x0;
	mov.u32 %r210, 0x0;
	mov.u32 %r211, 0x0;
	mov.u32 %r212, 0x0;
	ld.global.v4.b32 { %r209, %r210, %r211, %r212 }, [ %rd28 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r213, 0x0;
	mov.u32 %r214, 0x0;
	mov.u32 %r215, 0x0;
	mov.u32 %r216, 0x0;
	ld.global.v4.b32 { %r213, %r214, %r215, %r216 }, [ %rd29 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r217, 0x0;
	mov.u32 %r218, 0x0;
	mov.u32 %r219, 0x0;
	mov.u32 %r220, 0x0;
	ld.global.v4.b32 { %r217, %r218, %r219, %r220 }, [ %rd30 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r221, 0x0;
	mov.u32 %r222, 0x0;
	mov.u32 %r223, 0x0;
	mov.u32 %r224, 0x0;
	ld.global.v4.b32 { %r221, %r222, %r223, %r224 }, [ %rd31 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r225, 0x0;
	mov.u32 %r226, 0x0;
	mov.u32 %r227, 0x0;
	mov.u32 %r228, 0x0;
	ld.global.v4.b32 { %r225, %r226, %r227, %r228 }, [ %rd32 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r229, 0x0;
	mov.u32 %r230, 0x0;
	mov.u32 %r231, 0x0;
	mov.u32 %r232, 0x0;
	ld.global.v4.b32 { %r229, %r230, %r231, %r232 }, [ %rd33 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r233, 0x0;
	mov.u32 %r234, 0x0;
	mov.u32 %r235, 0x0;
	mov.u32 %r236, 0x0;
	ld.global.v4.b32 { %r233, %r234, %r235, %r236 }, [ %rd34 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r237, 0x0;
	mov.u32 %r238, 0x0;
	mov.u32 %r239, 0x0;
	mov.u32 %r240, 0x0;
	ld.global.v4.b32 { %r237, %r238, %r239, %r240 }, [ %rd35 + 0 ];
	// end inline asm
	xor.b32 	%r298, %r6, %r3;
	and.b32 	%r299, %r298, 56;
	shl.b32 	%r300, %r288, 6;
	or.b32 	%r7, %r299, %r300;
	shl.b32 	%r301, %r7, 1;
	mov.b32 	%r302, global_smem;
	add.s32 	%r303, %r302, %r301;
	st.shared.v4.b32 	[%r303], {%r209, %r210, %r211, %r212};
	st.shared.v4.b32 	[%r303+2048], {%r213, %r214, %r215, %r216};
	shl.b32 	%r304, %r299, 1;
	add.s32 	%r305, %r302, %r304;
	shl.b32 	%r306, %r288, 7;
	add.s32 	%r307, %r305, %r306;
	st.shared.v4.b32 	[%r307+4096], {%r217, %r218, %r219, %r220};
	st.shared.v4.b32 	[%r307+6144], {%r221, %r222, %r223, %r224};
	st.shared.v4.b32 	[%r307+8192], {%r225, %r226, %r227, %r228};
	st.shared.v4.b32 	[%r307+10240], {%r229, %r230, %r231, %r232};
	st.shared.v4.b32 	[%r307+12288], {%r233, %r234, %r235, %r236};
	st.shared.v4.b32 	[%r307+14336], {%r237, %r238, %r239, %r240};
$L__tmp1:
	.loc	1 47 20                         // gqa.py:47:20 @[ gqa.py:185:82 ]
	mul.lo.s64 	%rd94, %rd60, %rd61;
	mul.lo.s64 	%rd95, %rd60, %rd62;
	shl.b64 	%rd96, %rd94, 1;
	add.s64 	%rd97, %rd59, %rd96;
	add.s64 	%rd36, %rd97, %rd79;
	shl.b64 	%rd98, %rd95, 1;
	add.s64 	%rd99, %rd59, %rd98;
	add.s64 	%rd37, %rd99, %rd79;
	add.s32 	%r241, %r303, 16384;
	add.s32 	%r243, %r303, 18432;
	mov.b32 	%r242, 16;
	// begin inline asm
	cp.async.cg.shared.global [ %r241 + 0 ], [ %rd36 + 0 ], 0x10, %r242;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r243 + 0 ], [ %rd37 + 0 ], 0x10, %r242;
	// end inline asm
	cp.async.commit_group;
	.loc	1 65 20                         // gqa.py:65:20 @[ gqa.py:185:82 ]
	mul.lo.s64 	%rd100, %rd58, %rd61;
	mul.lo.s64 	%rd101, %rd58, %rd62;
	shl.b64 	%rd102, %rd100, 1;
	add.s64 	%rd103, %rd57, %rd102;
	add.s64 	%rd38, %rd103, %rd79;
	shl.b64 	%rd104, %rd101, 1;
	add.s64 	%rd105, %rd57, %rd104;
	add.s64 	%rd39, %rd105, %rd79;
	add.s32 	%r245, %r303, 28672;
	add.s32 	%r247, %r303, 30720;
	// begin inline asm
	cp.async.cg.shared.global [ %r245 + 0 ], [ %rd38 + 0 ], 0x10, %r242;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r247 + 0 ], [ %rd39 + 0 ], 0x10, %r242;
	// end inline asm
	cp.async.commit_group;
	.loc	1 47 20                         // gqa.py:47:20 @[ gqa.py:185:82 ]
	mul.wide.s32 	%rd106, %r285, 32;
	add.s64 	%rd107, %rd94, %rd106;
	add.s64 	%rd108, %rd95, %rd106;
	shl.b64 	%rd109, %rd107, 1;
	add.s64 	%rd110, %rd59, %rd109;
	add.s64 	%rd40, %rd110, %rd79;
	shl.b64 	%rd111, %rd108, 1;
	add.s64 	%rd112, %rd59, %rd111;
	add.s64 	%rd41, %rd112, %rd79;
	bar.sync 	0;
	add.s32 	%r249, %r303, 20480;
	add.s32 	%r251, %r303, 22528;
	// begin inline asm
	cp.async.cg.shared.global [ %r249 + 0 ], [ %rd40 + 0 ], 0x10, %r242;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r251 + 0 ], [ %rd41 + 0 ], 0x10, %r242;
	// end inline asm
	cp.async.commit_group;
	.loc	1 65 20                         // gqa.py:65:20 @[ gqa.py:185:82 ]
	mul.wide.s32 	%rd113, %r286, 32;
	add.s64 	%rd114, %rd100, %rd113;
	add.s64 	%rd115, %rd101, %rd113;
	shl.b64 	%rd116, %rd114, 1;
	add.s64 	%rd117, %rd57, %rd116;
	add.s64 	%rd42, %rd117, %rd79;
	shl.b64 	%rd118, %rd115, 1;
	add.s64 	%rd119, %rd57, %rd118;
	add.s64 	%rd43, %rd119, %rd79;
	add.s32 	%r253, %r303, 32768;
	add.s32 	%r255, %r303, 34816;
	// begin inline asm
	cp.async.cg.shared.global [ %r253 + 0 ], [ %rd42 + 0 ], 0x10, %r242;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r255 + 0 ], [ %rd43 + 0 ], 0x10, %r242;
	// end inline asm
	cp.async.commit_group;
	.loc	1 47 20                         // gqa.py:47:20 @[ gqa.py:185:82 ]
	add.s64 	%rd120, %rd107, %rd106;
	add.s64 	%rd121, %rd108, %rd106;
	shl.b64 	%rd122, %rd120, 1;
	add.s64 	%rd123, %rd59, %rd122;
	add.s64 	%rd44, %rd123, %rd79;
	shl.b64 	%rd124, %rd121, 1;
	add.s64 	%rd125, %rd59, %rd124;
	add.s64 	%rd45, %rd125, %rd79;
	bar.sync 	0;
	add.s32 	%r257, %r303, 24576;
	add.s32 	%r259, %r303, 26624;
	// begin inline asm
	cp.async.cg.shared.global [ %r257 + 0 ], [ %rd44 + 0 ], 0x10, %r242;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r259 + 0 ], [ %rd45 + 0 ], 0x10, %r242;
	// end inline asm
	cp.async.commit_group;
	.loc	1 65 20                         // gqa.py:65:20 @[ gqa.py:185:82 ]
	add.s64 	%rd126, %rd114, %rd113;
	add.s64 	%rd127, %rd115, %rd113;
	shl.b64 	%rd128, %rd126, 1;
	add.s64 	%rd129, %rd57, %rd128;
	add.s64 	%rd46, %rd129, %rd79;
	shl.b64 	%rd130, %rd127, 1;
	add.s64 	%rd131, %rd57, %rd130;
	add.s64 	%rd47, %rd131, %rd79;
	add.s32 	%r261, %r303, 36864;
	add.s32 	%r263, %r303, 38912;
	// begin inline asm
	cp.async.cg.shared.global [ %r261 + 0 ], [ %rd46 + 0 ], 0x10, %r242;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r263 + 0 ], [ %rd47 + 0 ], 0x10, %r242;
	// end inline asm
	cp.async.commit_group;
	and.b32 	%r308, %r3, 3;
	mul.lo.s32 	%r309, %r308, 72;
	and.b32 	%r310, %r296, 288;
	xor.b32 	%r311, %r310, %r309;
	shl.b32 	%r312, %r3, 6;
	and.b32 	%r313, %r312, 512;
	or.b32 	%r314, %r311, %r313;
	shr.u32 	%r315, %r4, 1;
	xor.b32 	%r316, %r314, %r315;
	shl.b32 	%r8, %r3, 5;
	and.b32 	%r317, %r8, 1024;
	or.b32 	%r318, %r316, %r317;
	and.b32 	%r319, %r8, 2048;
	or.b32 	%r320, %r318, %r319;
	shl.b32 	%r321, %r320, 1;
	add.s32 	%r343, %r302, %r321;
	xor.b32 	%r322, %r320, 16;
	shl.b32 	%r323, %r322, 1;
	add.s32 	%r348, %r302, %r323;
	xor.b32 	%r324, %r320, 32;
	shl.b32 	%r325, %r324, 1;
	add.s32 	%r353, %r302, %r325;
	xor.b32 	%r326, %r320, 48;
	shl.b32 	%r327, %r326, 1;
	add.s32 	%r358, %r302, %r327;
	xor.b32 	%r328, %r320, 4096;
	shl.b32 	%r329, %r328, 1;
	add.s32 	%r363, %r302, %r329;
	xor.b32 	%r330, %r320, 4112;
	shl.b32 	%r331, %r330, 1;
	add.s32 	%r368, %r302, %r331;
	xor.b32 	%r332, %r320, 4128;
	shl.b32 	%r333, %r332, 1;
	add.s32 	%r373, %r302, %r333;
	xor.b32 	%r334, %r320, 4144;
	shl.b32 	%r335, %r334, 1;
	add.s32 	%r378, %r302, %r335;
	and.b32 	%r336, %r3, 24;
	xor.b32 	%r17, %r311, %r336;
	xor.b32 	%r18, %r17, 32;
	xor.b32 	%r19, %r17, 544;
	xor.b32 	%r20, %r17, 1056;
	xor.b32 	%r21, %r17, 1568;
	and.b32 	%r337, %r312, 1536;
	or.b32 	%r22, %r311, %r337;
	xor.b32 	%r23, %r22, 8;
	xor.b32 	%r24, %r22, 16;
	xor.b32 	%r25, %r22, 24;
	xor.b32 	%r26, %r22, 32;
	xor.b32 	%r27, %r22, 40;
	xor.b32 	%r28, %r22, 48;
	xor.b32 	%r29, %r22, 56;
	.loc	1 44 33                         // gqa.py:44:33 @[ gqa.py:185:82 ]
	or.b64 	%rd132, %rd61, 112;
	mul.lo.s64 	%rd133, %rd132, %rd58;
	shl.b64 	%rd134, %rd133, 1;
	and.b32 	%r338, %r3, 7;
	mul.wide.u32 	%rd135, %r338, 16;
	add.s64 	%rd136, %rd134, %rd135;
	add.s64 	%rd194, %rd50, %rd136;
	mul.wide.s32 	%rd13, %r286, 64;
	mul.lo.s64 	%rd137, %rd132, %rd60;
	shl.b64 	%rd138, %rd137, 1;
	add.s64 	%rd139, %rd138, %rd135;
	add.s64 	%rd193, %rd49, %rd139;
	mul.wide.s32 	%rd15, %r285, 64;
	or.b64 	%rd140, %rd61, 96;
	mul.lo.s64 	%rd141, %rd140, %rd58;
	shl.b64 	%rd142, %rd141, 1;
	add.s64 	%rd143, %rd142, %rd135;
	add.s64 	%rd192, %rd50, %rd143;
	mul.lo.s64 	%rd144, %rd140, %rd60;
	shl.b64 	%rd145, %rd144, 1;
	add.s64 	%rd146, %rd145, %rd135;
	add.s64 	%rd191, %rd49, %rd146;
	mov.b32 	%r1949, 0f3F800000;
	mov.b32 	%r1945, 0fFF800000;
	mov.b32 	%r1881, 0f00000000;
	mov.b32 	%r1880, 2;
	mov.b32 	%r1879, -1;
	mov.b32 	%r1878, -32;
	shl.b32 	%r1369, %r18, 1;
	shl.b32 	%r1370, %r19, 1;
	shl.b32 	%r1371, %r20, 1;
	shl.b32 	%r1372, %r21, 1;
	shl.b32 	%r1544, %r23, 1;
	shl.b32 	%r1545, %r24, 1;
	shl.b32 	%r1546, %r25, 1;
	shl.b32 	%r1547, %r26, 1;
	shl.b32 	%r1548, %r27, 1;
	shl.b32 	%r1549, %r28, 1;
	shl.b32 	%r1550, %r29, 1;
	mov.b32 	%r1882, %r1881;
	mov.b32 	%r1883, %r1881;
	mov.b32 	%r1884, %r1881;
	mov.b32 	%r1885, %r1881;
	mov.b32 	%r1886, %r1881;
	mov.b32 	%r1887, %r1881;
	mov.b32 	%r1888, %r1881;
	mov.b32 	%r1889, %r1881;
	mov.b32 	%r1890, %r1881;
	mov.b32 	%r1891, %r1881;
	mov.b32 	%r1892, %r1881;
	mov.b32 	%r1893, %r1881;
	mov.b32 	%r1894, %r1881;
	mov.b32 	%r1895, %r1881;
	mov.b32 	%r1896, %r1881;
	mov.b32 	%r1897, %r1881;
	mov.b32 	%r1898, %r1881;
	mov.b32 	%r1899, %r1881;
	mov.b32 	%r1900, %r1881;
	mov.b32 	%r1901, %r1881;
	mov.b32 	%r1902, %r1881;
	mov.b32 	%r1903, %r1881;
	mov.b32 	%r1904, %r1881;
	mov.b32 	%r1905, %r1881;
	mov.b32 	%r1906, %r1881;
	mov.b32 	%r1907, %r1881;
	mov.b32 	%r1908, %r1881;
	mov.b32 	%r1909, %r1881;
	mov.b32 	%r1910, %r1881;
	mov.b32 	%r1911, %r1881;
	mov.b32 	%r1912, %r1881;
	mov.b32 	%r1913, %r1881;
	mov.b32 	%r1914, %r1881;
	mov.b32 	%r1915, %r1881;
	mov.b32 	%r1916, %r1881;
	mov.b32 	%r1917, %r1881;
	mov.b32 	%r1918, %r1881;
	mov.b32 	%r1919, %r1881;
	mov.b32 	%r1920, %r1881;
	mov.b32 	%r1921, %r1881;
	mov.b32 	%r1922, %r1881;
	mov.b32 	%r1923, %r1881;
	mov.b32 	%r1924, %r1881;
	mov.b32 	%r1925, %r1881;
	mov.b32 	%r1926, %r1881;
	mov.b32 	%r1927, %r1881;
	mov.b32 	%r1928, %r1881;
	mov.b32 	%r1929, %r1881;
	mov.b32 	%r1930, %r1881;
	mov.b32 	%r1931, %r1881;
	mov.b32 	%r1932, %r1881;
	mov.b32 	%r1933, %r1881;
	mov.b32 	%r1934, %r1881;
	mov.b32 	%r1935, %r1881;
	mov.b32 	%r1936, %r1881;
	mov.b32 	%r1937, %r1881;
	mov.b32 	%r1938, %r1881;
	mov.b32 	%r1939, %r1881;
	mov.b32 	%r1940, %r1881;
	mov.b32 	%r1941, %r1881;
	mov.b32 	%r1942, %r1881;
	mov.b32 	%r1943, %r1881;
	mov.b32 	%r1944, %r1881;
	mov.b32 	%r1946, %r1945;
	mov.b32 	%r1947, %r1945;
	mov.b32 	%r1948, %r1945;
	mov.b32 	%r1950, %r1949;
	mov.b32 	%r1951, %r1949;
	mov.b32 	%r1952, %r1949;
$L__BB0_1:                              // %__nv_exp2f.exit
                                        // =>This Inner Loop Header: Depth=1
	add.s32 	%r1878, %r1878, 32;
	setp.lt.u32 	%p1, %r1878, 4000;
	add.s32 	%r1363, %r1879, 1;
	setp.gt.s32 	%p2, %r1363, 2;
	selp.b32 	%r1879, 0, %r1363, %p2;
	.loc	1 47 20                         // gqa.py:47:20 @[ gqa.py:185:82 ]
	cp.async.wait_group 	4;
	bar.sync 	0;
	shl.b32 	%r1364, %r1879, 12;
	add.s32 	%r1366, %r302, 16384;
	add.s32 	%r1367, %r1366, %r1364;
$L__tmp2:
	.loc	1 177 16                        // gqa.py:177:16
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r427, %r428, %r429, %r430}, [%r343];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r539, %r540, %r541, %r542}, [%r348];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r651, %r652, %r653, %r654}, [%r353];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r763, %r764, %r765, %r766}, [%r358];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r483, %r484, %r485, %r486}, [%r363];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r595, %r596, %r597, %r598}, [%r368];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r707, %r708, %r709, %r710}, [%r373];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r819, %r820, %r821, %r822}, [%r378];
	// end inline asm
$L__tmp3:
	.loc	1 47 20                         // gqa.py:47:20 @[ gqa.py:185:82 ]
	shl.b32 	%r1368, %r17, 1;
	add.s32 	%r383, %r1367, %r1368;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r431, %r432, %r543, %r544}, [%r383];
	// end inline asm
	add.s32 	%r388, %r1367, %r1369;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r655, %r656, %r767, %r768}, [%r388];
	// end inline asm
	add.s32 	%r393, %r383, 1024;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r445, %r446, %r557, %r558}, [%r393];
	// end inline asm
	add.s32 	%r398, %r1367, %r1370;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r669, %r670, %r781, %r782}, [%r398];
	// end inline asm
	add.s32 	%r403, %r383, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r459, %r460, %r571, %r572}, [%r403];
	// end inline asm
	add.s32 	%r408, %r1367, %r1371;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r683, %r684, %r795, %r796}, [%r408];
	// end inline asm
	add.s32 	%r413, %r383, 3072;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r473, %r474, %r585, %r586}, [%r413];
	// end inline asm
	add.s32 	%r418, %r1367, %r1372;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r697, %r698, %r809, %r810}, [%r418];
	// end inline asm
	mov.b32 	%r629, 0;
	.loc	1 48 23                         // gqa.py:48:23 @[ gqa.py:185:82 ]
	mov.b32 	%r531, %r629;
	mov.b32 	%r532, %r629;
	mov.b32 	%r533, %r629;
	mov.b32 	%r534, %r629;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r531, %r532, %r533, %r534 }, { %r427, %r428, %r429, %r430 }, { %r431, %r432 }, { %r531, %r532, %r533, %r534 };
	// end inline asm
	mov.b32 	%r545, %r629;
	mov.b32 	%r546, %r629;
	mov.b32 	%r547, %r629;
	mov.b32 	%r548, %r629;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r545, %r546, %r547, %r548 }, { %r427, %r428, %r429, %r430 }, { %r445, %r446 }, { %r545, %r546, %r547, %r548 };
	// end inline asm
	mov.b32 	%r559, %r629;
	mov.b32 	%r560, %r629;
	mov.b32 	%r561, %r629;
	mov.b32 	%r562, %r629;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r559, %r560, %r561, %r562 }, { %r427, %r428, %r429, %r430 }, { %r459, %r460 }, { %r559, %r560, %r561, %r562 };
	// end inline asm
	mov.b32 	%r573, %r629;
	mov.b32 	%r574, %r629;
	mov.b32 	%r575, %r629;
	mov.b32 	%r576, %r629;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r573, %r574, %r575, %r576 }, { %r427, %r428, %r429, %r430 }, { %r473, %r474 }, { %r573, %r574, %r575, %r576 };
	// end inline asm
	mov.b32 	%r587, %r629;
	mov.b32 	%r588, %r629;
	mov.b32 	%r589, %r629;
	mov.b32 	%r590, %r629;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r587, %r588, %r589, %r590 }, { %r483, %r484, %r485, %r486 }, { %r431, %r432 }, { %r587, %r588, %r589, %r590 };
	// end inline asm
	mov.b32 	%r601, %r629;
	mov.b32 	%r602, %r629;
	mov.b32 	%r603, %r629;
	mov.b32 	%r604, %r629;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r601, %r602, %r603, %r604 }, { %r483, %r484, %r485, %r486 }, { %r445, %r446 }, { %r601, %r602, %r603, %r604 };
	// end inline asm
	mov.b32 	%r615, %r629;
	mov.b32 	%r616, %r629;
	mov.b32 	%r617, %r629;
	mov.b32 	%r618, %r629;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r615, %r616, %r617, %r618 }, { %r483, %r484, %r485, %r486 }, { %r459, %r460 }, { %r615, %r616, %r617, %r618 };
	// end inline asm
	mov.b32 	%r630, %r629;
	mov.b32 	%r631, %r629;
	mov.b32 	%r632, %r629;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r629, %r630, %r631, %r632 }, { %r483, %r484, %r485, %r486 }, { %r473, %r474 }, { %r629, %r630, %r631, %r632 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r531, %r532, %r533, %r534 }, { %r539, %r540, %r541, %r542 }, { %r543, %r544 }, { %r531, %r532, %r533, %r534 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r545, %r546, %r547, %r548 }, { %r539, %r540, %r541, %r542 }, { %r557, %r558 }, { %r545, %r546, %r547, %r548 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r559, %r560, %r561, %r562 }, { %r539, %r540, %r541, %r542 }, { %r571, %r572 }, { %r559, %r560, %r561, %r562 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r573, %r574, %r575, %r576 }, { %r539, %r540, %r541, %r542 }, { %r585, %r586 }, { %r573, %r574, %r575, %r576 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r587, %r588, %r589, %r590 }, { %r595, %r596, %r597, %r598 }, { %r543, %r544 }, { %r587, %r588, %r589, %r590 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r601, %r602, %r603, %r604 }, { %r595, %r596, %r597, %r598 }, { %r557, %r558 }, { %r601, %r602, %r603, %r604 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r615, %r616, %r617, %r618 }, { %r595, %r596, %r597, %r598 }, { %r571, %r572 }, { %r615, %r616, %r617, %r618 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r629, %r630, %r631, %r632 }, { %r595, %r596, %r597, %r598 }, { %r585, %r586 }, { %r629, %r630, %r631, %r632 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r531, %r532, %r533, %r534 }, { %r651, %r652, %r653, %r654 }, { %r655, %r656 }, { %r531, %r532, %r533, %r534 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r545, %r546, %r547, %r548 }, { %r651, %r652, %r653, %r654 }, { %r669, %r670 }, { %r545, %r546, %r547, %r548 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r559, %r560, %r561, %r562 }, { %r651, %r652, %r653, %r654 }, { %r683, %r684 }, { %r559, %r560, %r561, %r562 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r573, %r574, %r575, %r576 }, { %r651, %r652, %r653, %r654 }, { %r697, %r698 }, { %r573, %r574, %r575, %r576 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r587, %r588, %r589, %r590 }, { %r707, %r708, %r709, %r710 }, { %r655, %r656 }, { %r587, %r588, %r589, %r590 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r601, %r602, %r603, %r604 }, { %r707, %r708, %r709, %r710 }, { %r669, %r670 }, { %r601, %r602, %r603, %r604 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r615, %r616, %r617, %r618 }, { %r707, %r708, %r709, %r710 }, { %r683, %r684 }, { %r615, %r616, %r617, %r618 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r629, %r630, %r631, %r632 }, { %r707, %r708, %r709, %r710 }, { %r697, %r698 }, { %r629, %r630, %r631, %r632 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r531, %r532, %r533, %r534 }, { %r763, %r764, %r765, %r766 }, { %r767, %r768 }, { %r531, %r532, %r533, %r534 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r545, %r546, %r547, %r548 }, { %r763, %r764, %r765, %r766 }, { %r781, %r782 }, { %r545, %r546, %r547, %r548 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r559, %r560, %r561, %r562 }, { %r763, %r764, %r765, %r766 }, { %r795, %r796 }, { %r559, %r560, %r561, %r562 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r573, %r574, %r575, %r576 }, { %r763, %r764, %r765, %r766 }, { %r809, %r810 }, { %r573, %r574, %r575, %r576 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r587, %r588, %r589, %r590 }, { %r819, %r820, %r821, %r822 }, { %r767, %r768 }, { %r587, %r588, %r589, %r590 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r601, %r602, %r603, %r604 }, { %r819, %r820, %r821, %r822 }, { %r781, %r782 }, { %r601, %r602, %r603, %r604 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r615, %r616, %r617, %r618 }, { %r819, %r820, %r821, %r822 }, { %r795, %r796 }, { %r615, %r616, %r617, %r618 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r629, %r630, %r631, %r632 }, { %r819, %r820, %r821, %r822 }, { %r809, %r810 }, { %r629, %r630, %r631, %r632 };
	// end inline asm
	.loc	2 167 27                        // standard.py:167:27 @[ gqa.py:185:82 ]
	max.f32 	%r1373, %r531, %r532;
	max.f32 	%r1374, %r533, %r534;
	max.f32 	%r1375, %r1373, %r545;
	max.f32 	%r1376, %r1375, %r546;
	max.f32 	%r1377, %r1374, %r547;
	max.f32 	%r1378, %r1377, %r548;
	max.f32 	%r1379, %r1376, %r559;
	max.f32 	%r1380, %r1379, %r560;
	max.f32 	%r1381, %r1378, %r561;
	max.f32 	%r1382, %r1381, %r562;
	max.f32 	%r1383, %r1380, %r573;
	max.f32 	%r1384, %r1383, %r574;
	max.f32 	%r1385, %r1382, %r575;
	max.f32 	%r1386, %r1385, %r576;
	max.f32 	%r1387, %r587, %r588;
	max.f32 	%r1388, %r589, %r590;
	max.f32 	%r1389, %r1387, %r601;
	max.f32 	%r1390, %r1389, %r602;
	max.f32 	%r1391, %r1388, %r603;
	max.f32 	%r1392, %r1391, %r604;
	max.f32 	%r1393, %r1390, %r615;
	max.f32 	%r1394, %r1393, %r616;
	max.f32 	%r1395, %r1392, %r617;
	max.f32 	%r1396, %r1395, %r618;
	max.f32 	%r1397, %r1394, %r629;
	max.f32 	%r1398, %r1397, %r630;
	max.f32 	%r1399, %r1396, %r631;
	max.f32 	%r1400, %r1399, %r632;
	.loc	2 188 40                        // standard.py:188:40 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1401, %r1384, 2, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ gqa.py:185:82 ]
	max.f32 	%r1402, %r1384, %r1401;
	.loc	2 188 40                        // standard.py:188:40 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1403, %r1402, 1, 31, -1;
	shfl.sync.bfly.b32 	%r1404, %r1386, 2, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ gqa.py:185:82 ]
	max.f32 	%r1405, %r1386, %r1404;
	.loc	2 188 40                        // standard.py:188:40 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1406, %r1405, 1, 31, -1;
	shfl.sync.bfly.b32 	%r1407, %r1398, 2, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ gqa.py:185:82 ]
	max.f32 	%r1408, %r1398, %r1407;
	.loc	2 188 40                        // standard.py:188:40 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1409, %r1408, 1, 31, -1;
	shfl.sync.bfly.b32 	%r1410, %r1400, 2, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ gqa.py:185:82 ]
	max.f32 	%r1411, %r1400, %r1410;
	.loc	2 188 40                        // standard.py:188:40 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1412, %r1411, 1, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ gqa.py:185:82 ]
	max.f32 	%r1413, %r1411, %r1412;
	max.f32 	%r1414, %r1408, %r1409;
	max.f32 	%r1415, %r1405, %r1406;
	max.f32 	%r1416, %r1402, %r1403;
	.loc	1 55 51                         // gqa.py:55:51 @[ gqa.py:185:82 ]
	mul.f32 	%r1417, %r30, %r1416;
	mul.f32 	%r1418, %r30, %r1415;
	mul.f32 	%r1419, %r30, %r1414;
	mul.f32 	%r1420, %r30, %r1413;
	.loc	1 55 35                         // gqa.py:55:35 @[ gqa.py:185:82 ]
	max.f32 	%r114, %r1948, %r1420;
	max.f32 	%r113, %r1947, %r1419;
	max.f32 	%r112, %r1946, %r1418;
	max.f32 	%r111, %r1945, %r1417;
	.loc	1 56 33                         // gqa.py:56:33 @[ gqa.py:185:82 ]
	neg.f32 	%r1421, %r111;
	fma.rn.f32 	%r1422, %r30, %r531, %r1421;
	fma.rn.f32 	%r1423, %r30, %r532, %r1421;
	neg.f32 	%r1424, %r112;
	fma.rn.f32 	%r1425, %r30, %r533, %r1424;
	fma.rn.f32 	%r1426, %r30, %r534, %r1424;
	fma.rn.f32 	%r1427, %r30, %r545, %r1421;
	fma.rn.f32 	%r1428, %r30, %r546, %r1421;
	fma.rn.f32 	%r1429, %r30, %r547, %r1424;
	fma.rn.f32 	%r1430, %r30, %r548, %r1424;
	fma.rn.f32 	%r1431, %r30, %r559, %r1421;
	fma.rn.f32 	%r1432, %r30, %r560, %r1421;
	fma.rn.f32 	%r1433, %r30, %r561, %r1424;
	fma.rn.f32 	%r1434, %r30, %r562, %r1424;
	fma.rn.f32 	%r1435, %r30, %r573, %r1421;
	fma.rn.f32 	%r1436, %r30, %r574, %r1421;
	fma.rn.f32 	%r1437, %r30, %r575, %r1424;
	fma.rn.f32 	%r1438, %r30, %r576, %r1424;
	neg.f32 	%r1439, %r113;
	fma.rn.f32 	%r1440, %r30, %r587, %r1439;
	fma.rn.f32 	%r1441, %r30, %r588, %r1439;
	neg.f32 	%r1442, %r114;
	fma.rn.f32 	%r1443, %r30, %r589, %r1442;
	fma.rn.f32 	%r1444, %r30, %r590, %r1442;
	fma.rn.f32 	%r1445, %r30, %r601, %r1439;
	fma.rn.f32 	%r1446, %r30, %r602, %r1439;
	fma.rn.f32 	%r1447, %r30, %r603, %r1442;
	fma.rn.f32 	%r1448, %r30, %r604, %r1442;
	fma.rn.f32 	%r1449, %r30, %r615, %r1439;
	fma.rn.f32 	%r1450, %r30, %r616, %r1439;
	fma.rn.f32 	%r1451, %r30, %r617, %r1442;
	fma.rn.f32 	%r1452, %r30, %r618, %r1442;
	fma.rn.f32 	%r1453, %r30, %r629, %r1439;
	fma.rn.f32 	%r1454, %r30, %r630, %r1439;
	fma.rn.f32 	%r1455, %r30, %r631, %r1442;
	fma.rn.f32 	%r1456, %r30, %r632, %r1442;
	.loc	1 57 25                         // gqa.py:57:25 @[ gqa.py:185:82 ]
	ex2.approx.ftz.f32 	%r1457, %r1422;
	ex2.approx.ftz.f32 	%r1458, %r1423;
	ex2.approx.ftz.f32 	%r1459, %r1425;
	ex2.approx.ftz.f32 	%r1460, %r1426;
	ex2.approx.ftz.f32 	%r1461, %r1427;
	ex2.approx.ftz.f32 	%r1462, %r1428;
	ex2.approx.ftz.f32 	%r1463, %r1429;
	ex2.approx.ftz.f32 	%r1464, %r1430;
	ex2.approx.ftz.f32 	%r1465, %r1431;
	ex2.approx.ftz.f32 	%r1466, %r1432;
	ex2.approx.ftz.f32 	%r1467, %r1433;
	ex2.approx.ftz.f32 	%r1468, %r1434;
	ex2.approx.ftz.f32 	%r1469, %r1435;
	ex2.approx.ftz.f32 	%r1470, %r1436;
	ex2.approx.ftz.f32 	%r1471, %r1437;
	ex2.approx.ftz.f32 	%r1472, %r1438;
	ex2.approx.ftz.f32 	%r1473, %r1440;
	ex2.approx.ftz.f32 	%r1474, %r1441;
	ex2.approx.ftz.f32 	%r1475, %r1443;
	ex2.approx.ftz.f32 	%r1476, %r1444;
	ex2.approx.ftz.f32 	%r1477, %r1445;
	ex2.approx.ftz.f32 	%r1478, %r1446;
	ex2.approx.ftz.f32 	%r1479, %r1447;
	ex2.approx.ftz.f32 	%r1480, %r1448;
	ex2.approx.ftz.f32 	%r1481, %r1449;
	ex2.approx.ftz.f32 	%r1482, %r1450;
	ex2.approx.ftz.f32 	%r1483, %r1451;
	ex2.approx.ftz.f32 	%r1484, %r1452;
	ex2.approx.ftz.f32 	%r1485, %r1453;
	ex2.approx.ftz.f32 	%r1486, %r1454;
	ex2.approx.ftz.f32 	%r1487, %r1455;
	ex2.approx.ftz.f32 	%r1488, %r1456;
	.loc	2 260 15                        // standard.py:260:15 @[ gqa.py:185:82 ]
	add.f32 	%r1489, %r1457, %r1458;
	add.f32 	%r1490, %r1459, %r1460;
	add.f32 	%r1491, %r1489, %r1461;
	add.f32 	%r1492, %r1491, %r1462;
	add.f32 	%r1493, %r1490, %r1463;
	add.f32 	%r1494, %r1493, %r1464;
	add.f32 	%r1495, %r1492, %r1465;
	add.f32 	%r1496, %r1495, %r1466;
	add.f32 	%r1497, %r1494, %r1467;
	add.f32 	%r1498, %r1497, %r1468;
	add.f32 	%r1499, %r1496, %r1469;
	add.f32 	%r1500, %r1499, %r1470;
	add.f32 	%r1501, %r1498, %r1471;
	add.f32 	%r1502, %r1501, %r1472;
	add.f32 	%r1503, %r1473, %r1474;
	add.f32 	%r1504, %r1475, %r1476;
	add.f32 	%r1505, %r1503, %r1477;
	add.f32 	%r1506, %r1505, %r1478;
	add.f32 	%r1507, %r1504, %r1479;
	add.f32 	%r1508, %r1507, %r1480;
	add.f32 	%r1509, %r1506, %r1481;
	add.f32 	%r1510, %r1509, %r1482;
	add.f32 	%r1511, %r1508, %r1483;
	add.f32 	%r1512, %r1511, %r1484;
	add.f32 	%r1513, %r1510, %r1485;
	add.f32 	%r1514, %r1513, %r1486;
	add.f32 	%r1515, %r1512, %r1487;
	add.f32 	%r1516, %r1515, %r1488;
	.loc	2 290 36                        // standard.py:290:36 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1517, %r1500, 2, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ gqa.py:185:82 ]
	add.f32 	%r1518, %r1500, %r1517;
	.loc	2 290 36                        // standard.py:290:36 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1519, %r1518, 1, 31, -1;
	shfl.sync.bfly.b32 	%r1520, %r1502, 2, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ gqa.py:185:82 ]
	add.f32 	%r1521, %r1502, %r1520;
	.loc	2 290 36                        // standard.py:290:36 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1522, %r1521, 1, 31, -1;
	shfl.sync.bfly.b32 	%r1523, %r1514, 2, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ gqa.py:185:82 ]
	add.f32 	%r1524, %r1514, %r1523;
	.loc	2 290 36                        // standard.py:290:36 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1525, %r1524, 1, 31, -1;
	shfl.sync.bfly.b32 	%r1526, %r1516, 2, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ gqa.py:185:82 ]
	add.f32 	%r1527, %r1516, %r1526;
	.loc	2 290 36                        // standard.py:290:36 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1528, %r1527, 1, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ gqa.py:185:82 ]
	add.f32 	%r1529, %r1527, %r1528;
	add.f32 	%r1530, %r1524, %r1525;
	add.f32 	%r1531, %r1521, %r1522;
	add.f32 	%r1532, %r1518, %r1519;
	.loc	1 60 35                         // gqa.py:60:35 @[ gqa.py:185:82 ]
	sub.f32 	%r1533, %r1948, %r114;
	sub.f32 	%r1534, %r1947, %r113;
	sub.f32 	%r1535, %r1946, %r112;
	sub.f32 	%r1536, %r1945, %r111;
	.loc	1 60 29                         // gqa.py:60:29 @[ gqa.py:185:82 ]
	ex2.approx.ftz.f32 	%r1537, %r1536;
	ex2.approx.ftz.f32 	%r1538, %r1535;
	ex2.approx.ftz.f32 	%r1539, %r1534;
	ex2.approx.ftz.f32 	%r1540, %r1533;
	.loc	1 61 28                         // gqa.py:61:28 @[ gqa.py:185:82 ]
	fma.rn.f32 	%r1949, %r1949, %r1537, %r1532;
	fma.rn.f32 	%r1950, %r1950, %r1538, %r1531;
	fma.rn.f32 	%r1951, %r1951, %r1539, %r1530;
	fma.rn.f32 	%r1952, %r1952, %r1540, %r1529;
	.loc	1 63 20                         // gqa.py:63:20 @[ gqa.py:185:82 ]
	mul.f32 	%r1881, %r1881, %r1537;
	mul.f32 	%r1882, %r1882, %r1537;
	mul.f32 	%r1883, %r1883, %r1538;
	mul.f32 	%r1884, %r1884, %r1538;
	mul.f32 	%r1885, %r1885, %r1537;
	mul.f32 	%r1886, %r1886, %r1537;
	mul.f32 	%r1887, %r1887, %r1538;
	mul.f32 	%r1888, %r1888, %r1538;
	mul.f32 	%r1889, %r1889, %r1537;
	mul.f32 	%r1890, %r1890, %r1537;
	mul.f32 	%r1891, %r1891, %r1538;
	mul.f32 	%r1892, %r1892, %r1538;
	mul.f32 	%r1893, %r1893, %r1537;
	mul.f32 	%r1894, %r1894, %r1537;
	mul.f32 	%r1895, %r1895, %r1538;
	mul.f32 	%r1896, %r1896, %r1538;
	mul.f32 	%r1897, %r1897, %r1537;
	mul.f32 	%r1898, %r1898, %r1537;
	mul.f32 	%r1899, %r1899, %r1538;
	mul.f32 	%r1900, %r1900, %r1538;
	mul.f32 	%r1901, %r1901, %r1537;
	mul.f32 	%r1902, %r1902, %r1537;
	mul.f32 	%r1903, %r1903, %r1538;
	mul.f32 	%r1904, %r1904, %r1538;
	mul.f32 	%r1905, %r1905, %r1537;
	mul.f32 	%r1906, %r1906, %r1537;
	mul.f32 	%r1907, %r1907, %r1538;
	mul.f32 	%r1908, %r1908, %r1538;
	mul.f32 	%r1909, %r1909, %r1537;
	mul.f32 	%r1910, %r1910, %r1537;
	mul.f32 	%r1911, %r1911, %r1538;
	mul.f32 	%r1912, %r1912, %r1538;
	mul.f32 	%r1913, %r1913, %r1539;
	mul.f32 	%r1914, %r1914, %r1539;
	mul.f32 	%r1915, %r1915, %r1540;
	mul.f32 	%r1916, %r1916, %r1540;
	mul.f32 	%r1917, %r1917, %r1539;
	mul.f32 	%r1918, %r1918, %r1539;
	mul.f32 	%r1919, %r1919, %r1540;
	mul.f32 	%r1920, %r1920, %r1540;
	mul.f32 	%r1921, %r1921, %r1539;
	mul.f32 	%r1922, %r1922, %r1539;
	mul.f32 	%r1923, %r1923, %r1540;
	mul.f32 	%r1924, %r1924, %r1540;
	mul.f32 	%r1925, %r1925, %r1539;
	mul.f32 	%r1926, %r1926, %r1539;
	mul.f32 	%r1927, %r1927, %r1540;
	mul.f32 	%r1928, %r1928, %r1540;
	mul.f32 	%r1929, %r1929, %r1539;
	mul.f32 	%r1930, %r1930, %r1539;
	mul.f32 	%r1931, %r1931, %r1540;
	mul.f32 	%r1932, %r1932, %r1540;
	mul.f32 	%r1933, %r1933, %r1539;
	mul.f32 	%r1934, %r1934, %r1539;
	mul.f32 	%r1935, %r1935, %r1540;
	mul.f32 	%r1936, %r1936, %r1540;
	mul.f32 	%r1937, %r1937, %r1539;
	mul.f32 	%r1938, %r1938, %r1539;
	mul.f32 	%r1939, %r1939, %r1540;
	mul.f32 	%r1940, %r1940, %r1540;
	mul.f32 	%r1941, %r1941, %r1539;
	mul.f32 	%r1942, %r1942, %r1539;
	mul.f32 	%r1943, %r1943, %r1540;
	mul.f32 	%r1944, %r1944, %r1540;
	.loc	1 65 20                         // gqa.py:65:20 @[ gqa.py:185:82 ]
	add.s32 	%r1541, %r302, 28672;
	add.s32 	%r1542, %r1541, %r1364;
	shl.b32 	%r1543, %r22, 1;
	add.s32 	%r871, %r1542, %r1543;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r919, %r920, %r1143, %r1144}, [%r871];
	// end inline asm
	add.s32 	%r876, %r1542, %r1544;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r933, %r934, %r1157, %r1158}, [%r876];
	// end inline asm
	add.s32 	%r881, %r1542, %r1545;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r947, %r948, %r1171, %r1172}, [%r881];
	// end inline asm
	add.s32 	%r886, %r1542, %r1546;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r961, %r962, %r1185, %r1186}, [%r886];
	// end inline asm
	add.s32 	%r891, %r1542, %r1547;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r975, %r976, %r1199, %r1200}, [%r891];
	// end inline asm
	add.s32 	%r896, %r1542, %r1548;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r989, %r990, %r1213, %r1214}, [%r896];
	// end inline asm
	add.s32 	%r901, %r1542, %r1549;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r1003, %r1004, %r1227, %r1228}, [%r901];
	// end inline asm
	add.s32 	%r906, %r1542, %r1550;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r1017, %r1018, %r1241, %r1242}, [%r906];
	// end inline asm
	.loc	1 69 21                         // gqa.py:69:21 @[ gqa.py:185:82 ]
	cvt.rn.f16x2.f32 	%r929, %r1458, %r1457;
	cvt.rn.f16x2.f32 	%r930, %r1460, %r1459;
	cvt.rn.f16x2.f32 	%r931, %r1462, %r1461;
	cvt.rn.f16x2.f32 	%r932, %r1464, %r1463;
	cvt.rn.f16x2.f32 	%r1153, %r1466, %r1465;
	cvt.rn.f16x2.f32 	%r1154, %r1468, %r1467;
	cvt.rn.f16x2.f32 	%r1155, %r1470, %r1469;
	cvt.rn.f16x2.f32 	%r1156, %r1472, %r1471;
	cvt.rn.f16x2.f32 	%r1041, %r1474, %r1473;
	cvt.rn.f16x2.f32 	%r1042, %r1476, %r1475;
	cvt.rn.f16x2.f32 	%r1043, %r1478, %r1477;
	cvt.rn.f16x2.f32 	%r1044, %r1480, %r1479;
	cvt.rn.f16x2.f32 	%r1265, %r1482, %r1481;
	cvt.rn.f16x2.f32 	%r1266, %r1484, %r1483;
	cvt.rn.f16x2.f32 	%r1267, %r1486, %r1485;
	cvt.rn.f16x2.f32 	%r1268, %r1488, %r1487;
	.loc	1 70 27                         // gqa.py:70:27 @[ gqa.py:185:82 ]
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1881, %r1882, %r1883, %r1884 }, { %r929, %r930, %r931, %r932 }, { %r919, %r920 }, { %r1881, %r1882, %r1883, %r1884 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1885, %r1886, %r1887, %r1888 }, { %r929, %r930, %r931, %r932 }, { %r933, %r934 }, { %r1885, %r1886, %r1887, %r1888 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1889, %r1890, %r1891, %r1892 }, { %r929, %r930, %r931, %r932 }, { %r947, %r948 }, { %r1889, %r1890, %r1891, %r1892 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1893, %r1894, %r1895, %r1896 }, { %r929, %r930, %r931, %r932 }, { %r961, %r962 }, { %r1893, %r1894, %r1895, %r1896 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1897, %r1898, %r1899, %r1900 }, { %r929, %r930, %r931, %r932 }, { %r975, %r976 }, { %r1897, %r1898, %r1899, %r1900 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1901, %r1902, %r1903, %r1904 }, { %r929, %r930, %r931, %r932 }, { %r989, %r990 }, { %r1901, %r1902, %r1903, %r1904 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1905, %r1906, %r1907, %r1908 }, { %r929, %r930, %r931, %r932 }, { %r1003, %r1004 }, { %r1905, %r1906, %r1907, %r1908 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1909, %r1910, %r1911, %r1912 }, { %r929, %r930, %r931, %r932 }, { %r1017, %r1018 }, { %r1909, %r1910, %r1911, %r1912 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1913, %r1914, %r1915, %r1916 }, { %r1041, %r1042, %r1043, %r1044 }, { %r919, %r920 }, { %r1913, %r1914, %r1915, %r1916 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1917, %r1918, %r1919, %r1920 }, { %r1041, %r1042, %r1043, %r1044 }, { %r933, %r934 }, { %r1917, %r1918, %r1919, %r1920 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1921, %r1922, %r1923, %r1924 }, { %r1041, %r1042, %r1043, %r1044 }, { %r947, %r948 }, { %r1921, %r1922, %r1923, %r1924 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1925, %r1926, %r1927, %r1928 }, { %r1041, %r1042, %r1043, %r1044 }, { %r961, %r962 }, { %r1925, %r1926, %r1927, %r1928 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1929, %r1930, %r1931, %r1932 }, { %r1041, %r1042, %r1043, %r1044 }, { %r975, %r976 }, { %r1929, %r1930, %r1931, %r1932 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1933, %r1934, %r1935, %r1936 }, { %r1041, %r1042, %r1043, %r1044 }, { %r989, %r990 }, { %r1933, %r1934, %r1935, %r1936 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1937, %r1938, %r1939, %r1940 }, { %r1041, %r1042, %r1043, %r1044 }, { %r1003, %r1004 }, { %r1937, %r1938, %r1939, %r1940 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1941, %r1942, %r1943, %r1944 }, { %r1041, %r1042, %r1043, %r1044 }, { %r1017, %r1018 }, { %r1941, %r1942, %r1943, %r1944 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1881, %r1882, %r1883, %r1884 }, { %r1153, %r1154, %r1155, %r1156 }, { %r1143, %r1144 }, { %r1881, %r1882, %r1883, %r1884 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1885, %r1886, %r1887, %r1888 }, { %r1153, %r1154, %r1155, %r1156 }, { %r1157, %r1158 }, { %r1885, %r1886, %r1887, %r1888 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1889, %r1890, %r1891, %r1892 }, { %r1153, %r1154, %r1155, %r1156 }, { %r1171, %r1172 }, { %r1889, %r1890, %r1891, %r1892 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1893, %r1894, %r1895, %r1896 }, { %r1153, %r1154, %r1155, %r1156 }, { %r1185, %r1186 }, { %r1893, %r1894, %r1895, %r1896 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1897, %r1898, %r1899, %r1900 }, { %r1153, %r1154, %r1155, %r1156 }, { %r1199, %r1200 }, { %r1897, %r1898, %r1899, %r1900 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1901, %r1902, %r1903, %r1904 }, { %r1153, %r1154, %r1155, %r1156 }, { %r1213, %r1214 }, { %r1901, %r1902, %r1903, %r1904 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1905, %r1906, %r1907, %r1908 }, { %r1153, %r1154, %r1155, %r1156 }, { %r1227, %r1228 }, { %r1905, %r1906, %r1907, %r1908 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1909, %r1910, %r1911, %r1912 }, { %r1153, %r1154, %r1155, %r1156 }, { %r1241, %r1242 }, { %r1909, %r1910, %r1911, %r1912 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1913, %r1914, %r1915, %r1916 }, { %r1265, %r1266, %r1267, %r1268 }, { %r1143, %r1144 }, { %r1913, %r1914, %r1915, %r1916 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1917, %r1918, %r1919, %r1920 }, { %r1265, %r1266, %r1267, %r1268 }, { %r1157, %r1158 }, { %r1917, %r1918, %r1919, %r1920 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1921, %r1922, %r1923, %r1924 }, { %r1265, %r1266, %r1267, %r1268 }, { %r1171, %r1172 }, { %r1921, %r1922, %r1923, %r1924 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1925, %r1926, %r1927, %r1928 }, { %r1265, %r1266, %r1267, %r1268 }, { %r1185, %r1186 }, { %r1925, %r1926, %r1927, %r1928 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1929, %r1930, %r1931, %r1932 }, { %r1265, %r1266, %r1267, %r1268 }, { %r1199, %r1200 }, { %r1929, %r1930, %r1931, %r1932 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1933, %r1934, %r1935, %r1936 }, { %r1265, %r1266, %r1267, %r1268 }, { %r1213, %r1214 }, { %r1933, %r1934, %r1935, %r1936 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1937, %r1938, %r1939, %r1940 }, { %r1265, %r1266, %r1267, %r1268 }, { %r1227, %r1228 }, { %r1937, %r1938, %r1939, %r1940 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { %r1941, %r1942, %r1943, %r1944 }, { %r1265, %r1266, %r1267, %r1268 }, { %r1241, %r1242 }, { %r1941, %r1942, %r1943, %r1944 };
	// end inline asm
	.loc	1 44 33                         // gqa.py:44:33 @[ gqa.py:185:82 ]
	add.s32 	%r1551, %r1880, 1;
	setp.gt.s32 	%p3, %r1551, 2;
	selp.b32 	%r1880, 0, %r1551, %p3;
	.loc	1 47 20                         // gqa.py:47:20 @[ gqa.py:185:82 ]
	add.s64 	%rd147, %rd191, %rd11;
	add.s64 	%rd148, %rd193, %rd11;
	shl.b32 	%r1552, %r1880, 12;
	add.s32 	%r1553, %r1366, %r1552;
	bar.sync 	0;
	add.s32 	%r1355, %r1553, %r301;
	add.s32 	%r1357, %r1355, 2048;
	selp.b32 	%r1356, 16, 0, %p1;
	// begin inline asm
	cp.async.cg.shared.global [ %r1355 + 0 ], [ %rd147 + 0 ], 0x10, %r1356;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r1357 + 0 ], [ %rd148 + 0 ], 0x10, %r1356;
	// end inline asm
	cp.async.commit_group;
	.loc	1 65 20                         // gqa.py:65:20 @[ gqa.py:185:82 ]
	add.s64 	%rd149, %rd192, %rd11;
	add.s64 	%rd150, %rd194, %rd11;
	add.s32 	%r1555, %r1541, %r1552;
	add.s32 	%r1359, %r1555, %r301;
	add.s32 	%r1361, %r1359, 2048;
	// begin inline asm
	cp.async.cg.shared.global [ %r1359 + 0 ], [ %rd149 + 0 ], 0x10, %r1356;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r1361 + 0 ], [ %rd150 + 0 ], 0x10, %r1356;
	// end inline asm
	cp.async.commit_group;
	.loc	1 44 33                         // gqa.py:44:33 @[ gqa.py:185:82 ]
	add.s64 	%rd194, %rd194, %rd13;
	add.s64 	%rd193, %rd193, %rd15;
	add.s64 	%rd192, %rd192, %rd13;
	add.s64 	%rd191, %rd191, %rd15;
	setp.lt.u32 	%p4, %r1878, 4064;
	mov.b32 	%r1945, %r111;
	mov.b32 	%r1946, %r112;
	mov.b32 	%r1947, %r113;
	mov.b32 	%r1948, %r114;
	@%p4 bra 	$L__BB0_1;
// %bb.2:
	cp.async.wait_group 	0;
	bar.sync 	0;
$L__tmp4:
	.loc	1 198 24                        // gqa.py:198:24
	setp.lt.f32 	%p5, %r1949, 0f00800000;
	mul.f32 	%r1556, %r1949, 0f4B000000;
	selp.f32 	%r189, %r1556, %r1949, %p5;
	selp.f32 	%r1557, 0fC1B80000, 0f00000000, %p5;
	add.s32 	%r1558, %r189, -1060439283;
	and.b32 	%r1559, %r1558, -8388608;
	sub.s32 	%r1560, %r189, %r1559;
	cvt.rn.f32.s32 	%r1561, %r1559;
	mov.b32 	%r1562, 0f34000000;
	fma.rn.ftz.f32 	%r1563, %r1561, %r1562, %r1557;
	add.f32 	%r1564, %r1560, 0fBF800000;
	mov.b32 	%r1565, 0fBE2C7F30;
	mov.b32 	%r1566, 0f3DC6B27F;
	fma.rn.ftz.f32 	%r1567, %r1566, %r1564, %r1565;
	mov.b32 	%r1568, 0f3E2FCF2A;
	fma.rn.ftz.f32 	%r1569, %r1567, %r1564, %r1568;
	mov.b32 	%r1570, 0fBE374E43;
	fma.rn.ftz.f32 	%r1571, %r1569, %r1564, %r1570;
	mov.b32 	%r1572, 0f3E520BF4;
	fma.rn.ftz.f32 	%r1573, %r1571, %r1564, %r1572;
	mov.b32 	%r1574, 0fBE763C8B;
	fma.rn.ftz.f32 	%r1575, %r1573, %r1564, %r1574;
	mov.b32 	%r1576, 0f3E93BF99;
	fma.rn.ftz.f32 	%r1577, %r1575, %r1564, %r1576;
	mov.b32 	%r1578, 0fBEB8AA49;
	fma.rn.ftz.f32 	%r1579, %r1577, %r1564, %r1578;
	mov.b32 	%r1580, 0f3EF6384A;
	fma.rn.ftz.f32 	%r1581, %r1579, %r1564, %r1580;
	mov.b32 	%r1582, 0fBF38AA3B;
	fma.rn.ftz.f32 	%r1583, %r1581, %r1564, %r1582;
	mul.f32 	%r1584, %r1564, %r1583;
	mul.f32 	%r1585, %r1564, %r1584;
	mov.b32 	%r1586, 0f3FB8AA3B;
	fma.rn.ftz.f32 	%r1587, %r1564, %r1586, %r1585;
	add.f32 	%r1953, %r1563, %r1587;
	setp.lt.u32 	%p6, %r189, 2139095040;
	mov.b32 	%r1588, 0f7F800000;
	@%p6 bra 	$L__BB0_4;
// %bb.3:                               // %__nv_fmaf_rn.exit.i.i
	.loc	1 0 24                          // gqa.py:0:24
	fma.rn.ftz.f32 	%r1953, %r189, %r1588, %r1588;
$L__BB0_4:                              // %__nv_log2f.exit
	.loc	1 198 24                        // gqa.py:198:24
	setp.lt.f32 	%p7, %r1950, 0f00800000;
	mul.f32 	%r1589, %r1950, 0f4B000000;
	selp.f32 	%r194, %r1589, %r1950, %p7;
	selp.f32 	%r1590, 0fC1B80000, 0f00000000, %p7;
	add.s32 	%r1591, %r194, -1060439283;
	and.b32 	%r1592, %r1591, -8388608;
	sub.s32 	%r1593, %r194, %r1592;
	cvt.rn.f32.s32 	%r1594, %r1592;
	fma.rn.ftz.f32 	%r1596, %r1594, %r1562, %r1590;
	add.f32 	%r1597, %r1593, 0fBF800000;
	fma.rn.ftz.f32 	%r1600, %r1566, %r1597, %r1565;
	fma.rn.ftz.f32 	%r1602, %r1600, %r1597, %r1568;
	fma.rn.ftz.f32 	%r1604, %r1602, %r1597, %r1570;
	fma.rn.ftz.f32 	%r1606, %r1604, %r1597, %r1572;
	fma.rn.ftz.f32 	%r1608, %r1606, %r1597, %r1574;
	fma.rn.ftz.f32 	%r1610, %r1608, %r1597, %r1576;
	fma.rn.ftz.f32 	%r1612, %r1610, %r1597, %r1578;
	fma.rn.ftz.f32 	%r1614, %r1612, %r1597, %r1580;
	fma.rn.ftz.f32 	%r1616, %r1614, %r1597, %r1582;
	mul.f32 	%r1617, %r1597, %r1616;
	mul.f32 	%r1618, %r1597, %r1617;
	fma.rn.ftz.f32 	%r1620, %r1597, %r1586, %r1618;
	add.f32 	%r1954, %r1596, %r1620;
	setp.lt.u32 	%p8, %r194, 2139095040;
	@%p8 bra 	$L__BB0_6;
// %bb.5:                               // %__nv_fmaf_rn.exit.i.i232
	.loc	1 0 24                          // gqa.py:0:24
	fma.rn.ftz.f32 	%r1954, %r194, %r1588, %r1588;
$L__BB0_6:                              // %__nv_log2f.exit235
	.loc	1 198 24                        // gqa.py:198:24
	setp.lt.f32 	%p9, %r1951, 0f00800000;
	mul.f32 	%r1622, %r1951, 0f4B000000;
	selp.f32 	%r199, %r1622, %r1951, %p9;
	selp.f32 	%r1623, 0fC1B80000, 0f00000000, %p9;
	add.s32 	%r1624, %r199, -1060439283;
	and.b32 	%r1625, %r1624, -8388608;
	sub.s32 	%r1626, %r199, %r1625;
	cvt.rn.f32.s32 	%r1627, %r1625;
	mov.b32 	%r1628, 0f34000000;
	fma.rn.ftz.f32 	%r1629, %r1627, %r1628, %r1623;
	add.f32 	%r1630, %r1626, 0fBF800000;
	mov.b32 	%r1631, 0fBE2C7F30;
	mov.b32 	%r1632, 0f3DC6B27F;
	fma.rn.ftz.f32 	%r1633, %r1632, %r1630, %r1631;
	mov.b32 	%r1634, 0f3E2FCF2A;
	fma.rn.ftz.f32 	%r1635, %r1633, %r1630, %r1634;
	mov.b32 	%r1636, 0fBE374E43;
	fma.rn.ftz.f32 	%r1637, %r1635, %r1630, %r1636;
	mov.b32 	%r1638, 0f3E520BF4;
	fma.rn.ftz.f32 	%r1639, %r1637, %r1630, %r1638;
	mov.b32 	%r1640, 0fBE763C8B;
	fma.rn.ftz.f32 	%r1641, %r1639, %r1630, %r1640;
	mov.b32 	%r1642, 0f3E93BF99;
	fma.rn.ftz.f32 	%r1643, %r1641, %r1630, %r1642;
	mov.b32 	%r1644, 0fBEB8AA49;
	fma.rn.ftz.f32 	%r1645, %r1643, %r1630, %r1644;
	mov.b32 	%r1646, 0f3EF6384A;
	fma.rn.ftz.f32 	%r1647, %r1645, %r1630, %r1646;
	mov.b32 	%r1648, 0fBF38AA3B;
	fma.rn.ftz.f32 	%r1649, %r1647, %r1630, %r1648;
	mul.f32 	%r1650, %r1630, %r1649;
	mul.f32 	%r1651, %r1630, %r1650;
	mov.b32 	%r1652, 0f3FB8AA3B;
	fma.rn.ftz.f32 	%r1653, %r1630, %r1652, %r1651;
	add.f32 	%r1955, %r1629, %r1653;
	setp.lt.u32 	%p10, %r199, 2139095040;
	mov.b32 	%r1654, 0f7F800000;
	@%p10 bra 	$L__BB0_8;
// %bb.7:                               // %__nv_fmaf_rn.exit.i.i262
	.loc	1 0 24                          // gqa.py:0:24
	fma.rn.ftz.f32 	%r1955, %r199, %r1654, %r1654;
$L__BB0_8:                              // %__nv_log2f.exit265
	.loc	1 198 24                        // gqa.py:198:24
	setp.lt.f32 	%p11, %r1952, 0f00800000;
	mul.f32 	%r1655, %r1952, 0f4B000000;
	selp.f32 	%r204, %r1655, %r1952, %p11;
	selp.f32 	%r1656, 0fC1B80000, 0f00000000, %p11;
	add.s32 	%r1657, %r204, -1060439283;
	and.b32 	%r1658, %r1657, -8388608;
	sub.s32 	%r1659, %r204, %r1658;
	cvt.rn.f32.s32 	%r1660, %r1658;
	fma.rn.ftz.f32 	%r1662, %r1660, %r1628, %r1656;
	add.f32 	%r1663, %r1659, 0fBF800000;
	fma.rn.ftz.f32 	%r1666, %r1632, %r1663, %r1631;
	fma.rn.ftz.f32 	%r1668, %r1666, %r1663, %r1634;
	fma.rn.ftz.f32 	%r1670, %r1668, %r1663, %r1636;
	fma.rn.ftz.f32 	%r1672, %r1670, %r1663, %r1638;
	fma.rn.ftz.f32 	%r1674, %r1672, %r1663, %r1640;
	fma.rn.ftz.f32 	%r1676, %r1674, %r1663, %r1642;
	fma.rn.ftz.f32 	%r1678, %r1676, %r1663, %r1644;
	fma.rn.ftz.f32 	%r1680, %r1678, %r1663, %r1646;
	fma.rn.ftz.f32 	%r1682, %r1680, %r1663, %r1648;
	mul.f32 	%r1683, %r1663, %r1682;
	mul.f32 	%r1684, %r1663, %r1683;
	fma.rn.ftz.f32 	%r1686, %r1663, %r1652, %r1684;
	add.f32 	%r1956, %r1662, %r1686;
	setp.lt.u32 	%p12, %r204, 2139095040;
	@%p12 bra 	$L__BB0_10;
// %bb.9:                               // %__nv_fmaf_rn.exit.i.i292
	.loc	1 0 24                          // gqa.py:0:24
	fma.rn.ftz.f32 	%r1956, %r204, %r1654, %r1654;
$L__BB0_10:                             // %__nv_log2f.exit295
	.loc	1 198 24                        // gqa.py:198:24
	setp.eq.f32 	%p13, %r199, 0f00000000;
	selp.f32 	%r1721, 0fFF800000, %r1955, %p13;
	setp.eq.f32 	%p14, %r194, 0f00000000;
	selp.f32 	%r1722, 0fFF800000, %r1954, %p14;
	setp.eq.f32 	%p15, %r189, 0f00000000;
	selp.f32 	%r1723, 0fFF800000, %r1953, %p15;
	.loc	1 159 19                        // gqa.py:159:19
	add.s64 	%rd161, %rd27, %rd11;
	.loc	1 164 8                         // gqa.py:164:8
	cvt.s64.s32 	%rd162, %r208;
	.loc	1 167 46                        // gqa.py:167:46
	and.b32 	%r1724, %r3, 127;
	.loc	1 167 33                        // gqa.py:167:33
	or.b32 	%r1725, %r2, %r1724;
	.loc	1 198 24                        // gqa.py:198:24
	setp.eq.f32 	%p16, %r204, 0f00000000;
	selp.f32 	%r1726, 0fFF800000, %r1956, %p16;
	.loc	1 198 11                        // gqa.py:198:11
	add.f32 	%r1727, %r111, %r1723;
	add.f32 	%r1728, %r112, %r1722;
	add.f32 	%r1729, %r113, %r1721;
	add.f32 	%r1730, %r114, %r1726;
	.loc	1 199 16                        // gqa.py:199:16
	div.full.f32 	%r1731, %r1881, %r1949;
	div.full.f32 	%r1732, %r1882, %r1949;
	div.full.f32 	%r1733, %r1883, %r1950;
	div.full.f32 	%r1734, %r1884, %r1950;
	div.full.f32 	%r1735, %r1885, %r1949;
	div.full.f32 	%r1736, %r1886, %r1949;
	div.full.f32 	%r1737, %r1887, %r1950;
	div.full.f32 	%r1738, %r1888, %r1950;
	div.full.f32 	%r1739, %r1889, %r1949;
	div.full.f32 	%r1740, %r1890, %r1949;
	div.full.f32 	%r1741, %r1891, %r1950;
	div.full.f32 	%r1742, %r1892, %r1950;
	div.full.f32 	%r1743, %r1893, %r1949;
	div.full.f32 	%r1744, %r1894, %r1949;
	div.full.f32 	%r1745, %r1895, %r1950;
	div.full.f32 	%r1746, %r1896, %r1950;
	div.full.f32 	%r1747, %r1897, %r1949;
	div.full.f32 	%r1748, %r1898, %r1949;
	div.full.f32 	%r1749, %r1899, %r1950;
	div.full.f32 	%r1750, %r1900, %r1950;
	div.full.f32 	%r1751, %r1901, %r1949;
	div.full.f32 	%r1752, %r1902, %r1949;
	div.full.f32 	%r1753, %r1903, %r1950;
	div.full.f32 	%r1754, %r1904, %r1950;
	div.full.f32 	%r1755, %r1905, %r1949;
	div.full.f32 	%r1756, %r1906, %r1949;
	div.full.f32 	%r1757, %r1907, %r1950;
	div.full.f32 	%r1758, %r1908, %r1950;
	div.full.f32 	%r1759, %r1909, %r1949;
	div.full.f32 	%r1760, %r1910, %r1949;
	div.full.f32 	%r1761, %r1911, %r1950;
	div.full.f32 	%r1762, %r1912, %r1950;
	div.full.f32 	%r1763, %r1913, %r1951;
	div.full.f32 	%r1764, %r1914, %r1951;
	div.full.f32 	%r1765, %r1915, %r1952;
	div.full.f32 	%r1766, %r1916, %r1952;
	div.full.f32 	%r1767, %r1917, %r1951;
	div.full.f32 	%r1768, %r1918, %r1951;
	div.full.f32 	%r1769, %r1919, %r1952;
	div.full.f32 	%r1770, %r1920, %r1952;
	div.full.f32 	%r1771, %r1921, %r1951;
	div.full.f32 	%r1772, %r1922, %r1951;
	div.full.f32 	%r1773, %r1923, %r1952;
	div.full.f32 	%r1774, %r1924, %r1952;
	div.full.f32 	%r1775, %r1925, %r1951;
	div.full.f32 	%r1776, %r1926, %r1951;
	div.full.f32 	%r1777, %r1927, %r1952;
	div.full.f32 	%r1778, %r1928, %r1952;
	div.full.f32 	%r1779, %r1929, %r1951;
	div.full.f32 	%r1780, %r1930, %r1951;
	div.full.f32 	%r1781, %r1931, %r1952;
	div.full.f32 	%r1782, %r1932, %r1952;
	div.full.f32 	%r1783, %r1933, %r1951;
	div.full.f32 	%r1784, %r1934, %r1951;
	div.full.f32 	%r1785, %r1935, %r1952;
	div.full.f32 	%r1786, %r1936, %r1952;
	div.full.f32 	%r1787, %r1937, %r1951;
	div.full.f32 	%r1788, %r1938, %r1951;
	div.full.f32 	%r1789, %r1939, %r1952;
	div.full.f32 	%r1790, %r1940, %r1952;
	div.full.f32 	%r1791, %r1941, %r1951;
	div.full.f32 	%r1792, %r1942, %r1951;
	div.full.f32 	%r1793, %r1943, %r1952;
	div.full.f32 	%r1794, %r1944, %r1952;
	.loc	1 200 26                        // gqa.py:200:26
	shl.b32 	%r1795, %r1, 5;
	.loc	1 200 17                        // gqa.py:200:17
	mul.wide.u32 	%rd163, %r1795, 4;
	add.s64 	%rd164, %rd26, %rd163;
	.loc	1 200 34                        // gqa.py:200:34
	mul.wide.s32 	%rd165, %r1725, 4;
	add.s64 	%rd151, %rd164, %rd165;
	.loc	1 201 21                        // gqa.py:201:21
	shl.b32 	%r1796, %r3, 1;
	and.b32 	%r1797, %r1796, 192;
	add.s32 	%r1799, %r302, %r1797;
	and.b32 	%r1800, %r3, 28;
	add.s32 	%r1801, %r1799, %r1800;
	st.shared.b32 	[%r1801], %r1727;
	st.shared.b32 	[%r1801+32], %r1728;
	st.shared.b32 	[%r1801+256], %r1729;
	st.shared.b32 	[%r1801+288], %r1730;
	bar.sync 	0;
	shl.b32 	%r1802, %r1724, 2;
	add.s32 	%r1803, %r302, %r1802;
	ld.shared.b32 	%r1688, [%r1803];
	// begin inline asm
	st.global.b32 [ %rd151 + 0 ], { %r1688 };
	// end inline asm
	.loc	1 202 33                        // gqa.py:202:33
	cvt.rn.f16x2.f32 	%r1804, %r1732, %r1731;
	cvt.rn.f16x2.f32 	%r1805, %r1734, %r1733;
	cvt.rn.f16x2.f32 	%r1806, %r1736, %r1735;
	cvt.rn.f16x2.f32 	%r1807, %r1738, %r1737;
	cvt.rn.f16x2.f32 	%r1808, %r1740, %r1739;
	cvt.rn.f16x2.f32 	%r1809, %r1742, %r1741;
	cvt.rn.f16x2.f32 	%r1810, %r1744, %r1743;
	cvt.rn.f16x2.f32 	%r1811, %r1746, %r1745;
	cvt.rn.f16x2.f32 	%r1812, %r1748, %r1747;
	cvt.rn.f16x2.f32 	%r1813, %r1750, %r1749;
	cvt.rn.f16x2.f32 	%r1814, %r1752, %r1751;
	cvt.rn.f16x2.f32 	%r1815, %r1754, %r1753;
	cvt.rn.f16x2.f32 	%r1816, %r1756, %r1755;
	cvt.rn.f16x2.f32 	%r1817, %r1758, %r1757;
	cvt.rn.f16x2.f32 	%r1818, %r1760, %r1759;
	cvt.rn.f16x2.f32 	%r1819, %r1762, %r1761;
	cvt.rn.f16x2.f32 	%r1820, %r1764, %r1763;
	cvt.rn.f16x2.f32 	%r1821, %r1766, %r1765;
	cvt.rn.f16x2.f32 	%r1822, %r1768, %r1767;
	cvt.rn.f16x2.f32 	%r1823, %r1770, %r1769;
	cvt.rn.f16x2.f32 	%r1824, %r1772, %r1771;
	cvt.rn.f16x2.f32 	%r1825, %r1774, %r1773;
	cvt.rn.f16x2.f32 	%r1826, %r1776, %r1775;
	cvt.rn.f16x2.f32 	%r1827, %r1778, %r1777;
	cvt.rn.f16x2.f32 	%r1828, %r1780, %r1779;
	cvt.rn.f16x2.f32 	%r1829, %r1782, %r1781;
	cvt.rn.f16x2.f32 	%r1830, %r1784, %r1783;
	cvt.rn.f16x2.f32 	%r1831, %r1786, %r1785;
	cvt.rn.f16x2.f32 	%r1832, %r1788, %r1787;
	cvt.rn.f16x2.f32 	%r1833, %r1790, %r1789;
	cvt.rn.f16x2.f32 	%r1834, %r1792, %r1791;
	cvt.rn.f16x2.f32 	%r1835, %r1794, %r1793;
	.loc	1 202 26                        // gqa.py:202:26
	mul.lo.s64 	%rd166, %rd2, %rd162;
	mul.lo.s64 	%rd167, %rd3, %rd162;
	mul.lo.s64 	%rd168, %rd4, %rd162;
	mul.lo.s64 	%rd169, %rd5, %rd162;
	mul.lo.s64 	%rd170, %rd6, %rd162;
	mul.lo.s64 	%rd171, %rd7, %rd162;
	mul.lo.s64 	%rd172, %rd8, %rd162;
	mul.lo.s64 	%rd173, %rd9, %rd162;
	shl.b64 	%rd174, %rd166, 1;
	add.s64 	%rd175, %rd161, %rd174;
	shl.b64 	%rd176, %rd10, 1;
	add.s64 	%rd152, %rd175, %rd176;
	shl.b64 	%rd177, %rd167, 1;
	add.s64 	%rd178, %rd161, %rd177;
	add.s64 	%rd153, %rd178, %rd176;
	shl.b64 	%rd179, %rd168, 1;
	add.s64 	%rd180, %rd161, %rd179;
	add.s64 	%rd154, %rd180, %rd176;
	shl.b64 	%rd181, %rd169, 1;
	add.s64 	%rd182, %rd161, %rd181;
	add.s64 	%rd155, %rd182, %rd176;
	shl.b64 	%rd183, %rd170, 1;
	add.s64 	%rd184, %rd161, %rd183;
	add.s64 	%rd156, %rd184, %rd176;
	shl.b64 	%rd185, %rd171, 1;
	add.s64 	%rd186, %rd161, %rd185;
	add.s64 	%rd157, %rd186, %rd176;
	shl.b64 	%rd187, %rd172, 1;
	add.s64 	%rd188, %rd161, %rd187;
	add.s64 	%rd158, %rd188, %rd176;
	shl.b64 	%rd189, %rd173, 1;
	add.s64 	%rd190, %rd161, %rd189;
	add.s64 	%rd159, %rd190, %rd176;
	bar.sync 	0;
	and.b32 	%r1836, %r1796, 6;
	shl.b32 	%r1837, %r3, 4;
	and.b32 	%r1838, %r1837, 192;
	or.b32 	%r1839, %r1838, %r1836;
	shl.b32 	%r1840, %r4, 4;
	or.b32 	%r1841, %r1839, %r1840;
	and.b32 	%r1842, %r8, 3072;
	or.b32 	%r1843, %r1841, %r1842;
	and.b32 	%r1844, %r6, 1016;
	shr.u32 	%r1845, %r1843, 2;
	and.b32 	%r1846, %r1845, 892;
	add.s32 	%r1847, %r302, %r1846;
	shl.b32 	%r1848, %r1843, 1;
	add.s32 	%r1849, %r1847, %r1848;
	st.shared.b32 	[%r1849], %r1804;
	or.b32 	%r1850, %r1843, 512;
	shr.u32 	%r1851, %r1850, 2;
	and.b32 	%r1852, %r1851, 1020;
	add.s32 	%r1853, %r302, %r1852;
	add.s32 	%r1854, %r1853, %r1848;
	st.shared.b32 	[%r1854+1024], %r1805;
	st.shared.b32 	[%r1849+16], %r1806;
	and.b32 	%r1855, %r1851, 1008;
	add.s32 	%r1856, %r302, %r1855;
	add.s32 	%r1857, %r1856, %r1848;
	st.shared.b32 	[%r1857+1040], %r1807;
	st.shared.b32 	[%r1849+32], %r1808;
	st.shared.b32 	[%r1857+1056], %r1809;
	st.shared.b32 	[%r1849+48], %r1810;
	st.shared.b32 	[%r1857+1072], %r1811;
	st.shared.b32 	[%r1849+64], %r1812;
	st.shared.b32 	[%r1857+1088], %r1813;
	st.shared.b32 	[%r1849+80], %r1814;
	st.shared.b32 	[%r1857+1104], %r1815;
	st.shared.b32 	[%r1849+96], %r1816;
	st.shared.b32 	[%r1857+1120], %r1817;
	st.shared.b32 	[%r1849+112], %r1818;
	st.shared.b32 	[%r1857+1136], %r1819;
	bar.sync 	0;
	and.b32 	%r1858, %r3, 120;
	shl.b32 	%r1859, %r1858, 1;
	add.s32 	%r1860, %r302, %r1859;
	shl.b32 	%r1861, %r1844, 1;
	add.s32 	%r1862, %r1860, %r1861;
	ld.shared.v4.b32 	{%r1689, %r1690, %r1691, %r1692}, [%r1862];
	or.b32 	%r1863, %r1844, 1024;
	shr.u32 	%r1864, %r1863, 2;
	and.b32 	%r1865, %r1864, 496;
	add.s32 	%r1866, %r302, %r1865;
	add.s32 	%r1867, %r1866, %r1861;
	ld.shared.v4.b32 	{%r1693, %r1694, %r1695, %r1696}, [%r1867+2048];
	or.b32 	%r1868, %r1844, 2048;
	shr.u32 	%r1869, %r1868, 2;
	and.b32 	%r1870, %r1869, 752;
	add.s32 	%r1871, %r302, %r1870;
	add.s32 	%r1872, %r1871, %r1861;
	ld.shared.v4.b32 	{%r1697, %r1698, %r1699, %r1700}, [%r1872+4096];
	or.b32 	%r1873, %r1844, 3072;
	shr.u32 	%r1874, %r1873, 2;
	and.b32 	%r1875, %r1874, 1008;
	add.s32 	%r1876, %r302, %r1875;
	add.s32 	%r1877, %r1876, %r1861;
	ld.shared.v4.b32 	{%r1701, %r1702, %r1703, %r1704}, [%r1877+6144];
	bar.sync 	0;
	st.shared.b32 	[%r1849], %r1820;
	st.shared.b32 	[%r1854+1024], %r1821;
	st.shared.b32 	[%r1849+16], %r1822;
	st.shared.b32 	[%r1857+1040], %r1823;
	st.shared.b32 	[%r1849+32], %r1824;
	st.shared.b32 	[%r1857+1056], %r1825;
	st.shared.b32 	[%r1849+48], %r1826;
	st.shared.b32 	[%r1857+1072], %r1827;
	st.shared.b32 	[%r1849+64], %r1828;
	st.shared.b32 	[%r1857+1088], %r1829;
	st.shared.b32 	[%r1849+80], %r1830;
	st.shared.b32 	[%r1857+1104], %r1831;
	st.shared.b32 	[%r1849+96], %r1832;
	st.shared.b32 	[%r1857+1120], %r1833;
	st.shared.b32 	[%r1849+112], %r1834;
	st.shared.b32 	[%r1857+1136], %r1835;
	bar.sync 	0;
	ld.shared.v4.b32 	{%r1705, %r1706, %r1707, %r1708}, [%r1862];
	ld.shared.v4.b32 	{%r1709, %r1710, %r1711, %r1712}, [%r1867+2048];
	ld.shared.v4.b32 	{%r1713, %r1714, %r1715, %r1716}, [%r1872+4096];
	ld.shared.v4.b32 	{%r1717, %r1718, %r1719, %r1720}, [%r1877+6144];
	// begin inline asm
	st.global.v4.b32 [ %rd152 + 0 ], { %r1689, %r1690, %r1691, %r1692 };
	// end inline asm
	// begin inline asm
	st.global.v4.b32 [ %rd153 + 0 ], { %r1693, %r1694, %r1695, %r1696 };
	// end inline asm
	// begin inline asm
	st.global.v4.b32 [ %rd154 + 0 ], { %r1697, %r1698, %r1699, %r1700 };
	// end inline asm
	// begin inline asm
	st.global.v4.b32 [ %rd155 + 0 ], { %r1701, %r1702, %r1703, %r1704 };
	// end inline asm
	// begin inline asm
	st.global.v4.b32 [ %rd156 + 0 ], { %r1705, %r1706, %r1707, %r1708 };
	// end inline asm
	// begin inline asm
	st.global.v4.b32 [ %rd157 + 0 ], { %r1709, %r1710, %r1711, %r1712 };
	// end inline asm
	// begin inline asm
	st.global.v4.b32 [ %rd158 + 0 ], { %r1713, %r1714, %r1715, %r1716 };
	// end inline asm
	// begin inline asm
	st.global.v4.b32 [ %rd159 + 0 ], { %r1717, %r1718, %r1719, %r1720 };
	// end inline asm
	.loc	1 202 4                         // gqa.py:202:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/ubuntu/anjiang/PTX_dataset/triton_ptx/gqa.py"
	.file	2 "/mnt/efs/anjiang/miniconda3/envs/ptx/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 131                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x7c DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 103                                 // DW_AT_name
.b8 113
.b8 97
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 117
.b8 98
.b8 117
.b8 110
.b8 116
.b8 117
.b8 47
.b8 97
.b8 110
.b8 106
.b8 105
.b8 97
.b8 110
.b8 103
.b8 47
.b8 80
.b8 84
.b8 88
.b8 95
.b8 100
.b8 97
.b8 116
.b8 97
.b8 115
.b8 101
.b8 116
.b8 47
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 116
.b8 120
.b8 0
.b8 2                                   // Abbrev [2] 0x4c:0xc DW_TAG_subprogram
.b8 95                                  // DW_AT_name
.b8 97
.b8 116
.b8 116
.b8 110
.b8 95
.b8 102
.b8 119
.b8 100
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x58:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 76                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x6d:0x18 DW_TAG_inlined_subroutine
.b32 76                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 185                                 // DW_AT_call_line
.b8 82                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
