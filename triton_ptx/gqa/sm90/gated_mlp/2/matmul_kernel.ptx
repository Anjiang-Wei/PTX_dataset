//
// Generated by LLVM NVPTX Back-End
//

.version 8.7
.target sm_90a
.address_size 64

	// .globl	matmul_kernel           // -- Begin function matmul_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @matmul_kernel
.visible .entry matmul_kernel(
	.param .u64 .ptr .global .align 1 matmul_kernel_param_0,
	.param .u64 .ptr .global .align 1 matmul_kernel_param_1,
	.param .u64 .ptr .global .align 1 matmul_kernel_param_2,
	.param .u32 matmul_kernel_param_3,
	.param .u32 matmul_kernel_param_4,
	.param .u32 matmul_kernel_param_5,
	.param .u32 matmul_kernel_param_6,
	.param .u32 matmul_kernel_param_7,
	.param .u64 .ptr .global .align 1 matmul_kernel_param_8
)
.reqntid 128
{
	.reg .pred 	%p<55>;
	.reg .b32 	%r<2129>;
	.reg .b64 	%rd<125>;
	.loc	1 68 0                          // gated_mlp.py:68:0
$L__func_begin0:
	.loc	1 68 0                          // gated_mlp.py:68:0

// %bb.0:
	ld.param.b32 	%r423, [matmul_kernel_param_7];
	ld.param.b32 	%r422, [matmul_kernel_param_4];
	ld.param.b32 	%r421, [matmul_kernel_param_3];
	ld.param.b64 	%rd19, [matmul_kernel_param_2];
	ld.param.b64 	%rd18, [matmul_kernel_param_1];
	ld.param.b64 	%rd17, [matmul_kernel_param_0];
$L__tmp0:
	.loc	1 91 24                         // gated_mlp.py:91:24
	mov.u32 	%r473, %ctaid.x;
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22 @[ gated_mlp.py:93:27 ]
	add.s32 	%r474, %r421, 127;
	.loc	2 40 28                         // standard.py:40:28 @[ gated_mlp.py:93:27 ]
	shr.s32 	%r475, %r474, 31;
	shr.u32 	%r476, %r475, 25;
	add.s32 	%r477, %r474, %r476;
	shr.s32 	%r478, %r477, 7;
$L__tmp2:
	.loc	1 94 38                         // gated_mlp.py:94:38
	shl.b32 	%r480, %r478, 3;
	.loc	1 95 22                         // gated_mlp.py:95:22
	div.s32 	%r481, %r473, %r480;
	ld.param.b32 	%r482, [matmul_kernel_param_6];
	.loc	1 96 29                         // gated_mlp.py:96:29
	shl.b32 	%r1, %r481, 3;
	.loc	1 97 35                         // gated_mlp.py:97:35
	sub.s32 	%r483, 1, %r1;
	.loc	1 97 48                         // gated_mlp.py:97:48
	min.s32 	%r2, %r483, 8;
	.loc	1 98 34                         // gated_mlp.py:98:34
	mul.lo.s32 	%r484, %r481, %r480;
	sub.s32 	%r3, %r473, %r484;
	.loc	1 99 40                         // gated_mlp.py:99:40
	div.s32 	%r4, %r3, %r2;
	.loc	1 109 23                        // gated_mlp.py:109:23
	shl.b32 	%r485, %r4, 7;
	.loc	1 109 51                        // gated_mlp.py:109:51
	mov.u32 	%r5, %tid.x;
	shl.b32 	%r6, %r5, 3;
	and.b32 	%r7, %r6, 24;
	and.b32 	%r486, %r6, 56;
	and.b32 	%r487, %r5, 8;
	shl.b32 	%r488, %r487, 3;
	and.b32 	%r9, %r5, 16;
	bfe.s32 	%r489, %r5, 4, 1;
	bfe.s32 	%r490, %r5, 5, 1;
	and.b32 	%r491, %r5, 32;
	bfe.s32 	%r492, %r5, 6, 1;
	and.b32 	%r493, %r5, 64;
	shr.u32 	%r10, %r5, 4;
	bfe.u32 	%r11, %r5, 4, 3;
	or.b32 	%r12, %r11, 8;
	or.b32 	%r13, %r11, 16;
	or.b32 	%r14, %r11, 24;
	.loc	1 109 38                        // gated_mlp.py:109:38
	or.b32 	%r494, %r485, %r488;
	or.b32 	%r15, %r494, %r486;
	.loc	1 109 68                        // gated_mlp.py:109:68
	rem.s32 	%r495, %r15, %r421;
	.loc	1 111 22                        // gated_mlp.py:111:22
	mul.wide.u32 	%rd44, %r7, 2;
	add.s64 	%rd20, %rd17, %rd44;
	.loc	1 112 40                        // gated_mlp.py:112:40
	shl.b32 	%r496, %r482, 3;
	.loc	1 112 52                        // gated_mlp.py:112:52
	mad.lo.s32 	%r497, %r482, %r11, %r495;
	add.s32 	%r498, %r497, %r496;
	add.s32 	%r499, %r498, %r496;
	add.s32 	%r500, %r499, %r496;
	.loc	1 112 22                        // gated_mlp.py:112:22
	mul.wide.s32 	%rd45, %r497, 2;
	add.s64 	%rd24, %rd18, %rd45;
	mul.wide.s32 	%rd46, %r498, 2;
	add.s64 	%rd25, %rd18, %rd46;
	mul.wide.s32 	%rd47, %r499, 2;
	add.s64 	%rd26, %rd18, %rd47;
	mul.wide.s32 	%rd48, %r500, 2;
	add.s64 	%rd27, %rd18, %rd48;
$L__tmp3:
	.loc	2 40 22                         // standard.py:40:22 @[ gated_mlp.py:120:33 ]
	add.s32 	%r501, %r422, 31;
$L__tmp4:
	.loc	1 129 33                        // gated_mlp.py:129:33
	shl.b32 	%r505, %r482, 5;
	.loc	1 120 22                        // gated_mlp.py:120:22
	setp.lt.s32 	%p1, %r501, 32;
	setp.gt.s32 	%p2, %r501, 31;
	.loc	1 123 51                        // gated_mlp.py:123:51
	setp.lt.s32 	%p3, %r7, %r422;
	.loc	1 123 20                        // gated_mlp.py:123:20
	and.b32 	%r506, %r5, 24;
	mul.lo.s32 	%r507, %r506, 9;
	xor.b32 	%r508, %r507, %r486;
	shl.b32 	%r17, %r491, 3;
	shl.b32 	%r18, %r493, 3;
	or.b32 	%r509, %r17, %r508;
	or.b32 	%r19, %r509, %r18;
	shl.b32 	%r510, %r19, 1;
	mov.b32 	%r511, global_smem;
	add.s32 	%r424, %r511, %r510;
	or.b32 	%r512, %r486, 1024;
	xor.b32 	%r513, %r507, %r512;
	or.b32 	%r514, %r17, %r513;
	or.b32 	%r20, %r514, %r18;
	shl.b32 	%r515, %r20, 1;
	add.s32 	%r426, %r511, %r515;
	or.b32 	%r516, %r486, 2048;
	xor.b32 	%r517, %r507, %r516;
	or.b32 	%r518, %r17, %r517;
	or.b32 	%r21, %r518, %r18;
	shl.b32 	%r519, %r21, 1;
	add.s32 	%r428, %r511, %r519;
	or.b32 	%r520, %r486, 3072;
	xor.b32 	%r521, %r507, %r520;
	or.b32 	%r522, %r17, %r521;
	or.b32 	%r22, %r522, %r18;
	shl.b32 	%r523, %r22, 1;
	add.s32 	%r430, %r511, %r523;
	selp.b32 	%r524, 16, 0, %p2;
	selp.b32 	%r427, %r524, 0, %p3;
	// begin inline asm
	cp.async.cg.shared.global [ %r424 + 0 ], [ %rd20 + 0 ], 0x10, %r427;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r426 + 0 ], [ %rd20 + 0 ], 0x10, %r427;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r428 + 0 ], [ %rd20 + 0 ], 0x10, %r427;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r430 + 0 ], [ %rd20 + 0 ], 0x10, %r427;
	// end inline asm
	cp.async.commit_group;
	.loc	1 124 51                        // gated_mlp.py:124:51
	setp.lt.s32 	%p4, %r11, %r422;
	setp.lt.s32 	%p5, %r12, %r422;
	setp.lt.s32 	%p6, %r13, %r422;
	setp.lt.s32 	%p7, %r14, %r422;
	.loc	1 124 20                        // gated_mlp.py:124:20
	shl.b32 	%r525, %r487, 8;
	or.b32 	%r526, %r486, %r525;
	and.b32 	%r527, %r489, 72;
	and.b32 	%r528, %r490, 144;
	and.b32 	%r529, %r492, 288;
	or.b32 	%r530, %r528, %r527;
	xor.b32 	%r531, %r530, %r526;
	xor.b32 	%r23, %r531, %r529;
	shl.b32 	%r532, %r23, 1;
	add.s32 	%r533, %r511, 32768;
	add.s32 	%r432, %r533, %r532;
	or.b32 	%r534, %r526, 512;
	or.b32 	%r535, %r530, %r529;
	xor.b32 	%r24, %r535, %r534;
	shl.b32 	%r536, %r24, 1;
	add.s32 	%r434, %r533, %r536;
	or.b32 	%r537, %r512, %r525;
	xor.b32 	%r25, %r535, %r537;
	shl.b32 	%r538, %r25, 1;
	add.s32 	%r436, %r533, %r538;
	or.b32 	%r539, %r526, 1536;
	xor.b32 	%r26, %r535, %r539;
	shl.b32 	%r540, %r26, 1;
	add.s32 	%r438, %r533, %r540;
	selp.b32 	%r433, %r524, 0, %p4;
	// begin inline asm
	cp.async.cg.shared.global [ %r432 + 0 ], [ %rd24 + 0 ], 0x10, %r433;
	// end inline asm
	selp.b32 	%r435, %r524, 0, %p5;
	// begin inline asm
	cp.async.cg.shared.global [ %r434 + 0 ], [ %rd25 + 0 ], 0x10, %r435;
	// end inline asm
	selp.b32 	%r437, %r524, 0, %p6;
	// begin inline asm
	cp.async.cg.shared.global [ %r436 + 0 ], [ %rd26 + 0 ], 0x10, %r437;
	// end inline asm
	selp.b32 	%r439, %r524, 0, %p7;
	// begin inline asm
	cp.async.cg.shared.global [ %r438 + 0 ], [ %rd27 + 0 ], 0x10, %r439;
	// end inline asm
	cp.async.commit_group;
	.loc	1 120 22                        // gated_mlp.py:120:22
	setp.gt.s32 	%p8, %r501, 63;
	.loc	1 128 18                        // gated_mlp.py:128:18
	add.s64 	%rd28, %rd20, 64;
	.loc	1 129 18                        // gated_mlp.py:129:18
	mul.wide.s32 	%rd49, %r505, 2;
	add.s64 	%rd32, %rd24, %rd49;
	add.s64 	%rd33, %rd25, %rd49;
	add.s64 	%rd34, %rd26, %rd49;
	add.s64 	%rd35, %rd27, %rd49;
	.loc	1 123 55                        // gated_mlp.py:123:55
	add.s32 	%r541, %r422, -32;
	.loc	1 123 51                        // gated_mlp.py:123:51
	setp.lt.s32 	%p9, %r7, %r541;
	.loc	1 123 20                        // gated_mlp.py:123:20
	bar.sync 	0;
	add.s32 	%r542, %r511, 8192;
	add.s32 	%r440, %r542, %r510;
	add.s32 	%r442, %r542, %r515;
	add.s32 	%r444, %r542, %r519;
	add.s32 	%r446, %r542, %r523;
	selp.b32 	%r543, 16, 0, %p9;
	selp.b32 	%r443, %r543, 0, %p8;
	// begin inline asm
	cp.async.cg.shared.global [ %r440 + 0 ], [ %rd28 + 0 ], 0x10, %r443;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r442 + 0 ], [ %rd28 + 0 ], 0x10, %r443;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r444 + 0 ], [ %rd28 + 0 ], 0x10, %r443;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r446 + 0 ], [ %rd28 + 0 ], 0x10, %r443;
	// end inline asm
	cp.async.commit_group;
	.loc	1 124 51                        // gated_mlp.py:124:51
	setp.lt.s32 	%p10, %r11, %r541;
	setp.lt.s32 	%p11, %r12, %r541;
	setp.lt.s32 	%p12, %r13, %r541;
	setp.lt.s32 	%p13, %r14, %r541;
	.loc	1 124 20                        // gated_mlp.py:124:20
	add.s32 	%r544, %r511, 40960;
	add.s32 	%r448, %r544, %r532;
	add.s32 	%r450, %r544, %r536;
	add.s32 	%r452, %r544, %r538;
	add.s32 	%r454, %r544, %r540;
	selp.b32 	%r545, 16, 0, %p10;
	selp.b32 	%r449, %r545, 0, %p8;
	// begin inline asm
	cp.async.cg.shared.global [ %r448 + 0 ], [ %rd32 + 0 ], 0x10, %r449;
	// end inline asm
	selp.b32 	%r546, 16, 0, %p11;
	selp.b32 	%r451, %r546, 0, %p8;
	// begin inline asm
	cp.async.cg.shared.global [ %r450 + 0 ], [ %rd33 + 0 ], 0x10, %r451;
	// end inline asm
	selp.b32 	%r547, 16, 0, %p12;
	selp.b32 	%r453, %r547, 0, %p8;
	// begin inline asm
	cp.async.cg.shared.global [ %r452 + 0 ], [ %rd34 + 0 ], 0x10, %r453;
	// end inline asm
	selp.b32 	%r548, 16, 0, %p13;
	selp.b32 	%r455, %r548, 0, %p8;
	// begin inline asm
	cp.async.cg.shared.global [ %r454 + 0 ], [ %rd35 + 0 ], 0x10, %r455;
	// end inline asm
	cp.async.commit_group;
	.loc	1 120 22                        // gated_mlp.py:120:22
	setp.gt.s32 	%p14, %r501, 95;
	.loc	1 128 18                        // gated_mlp.py:128:18
	add.s64 	%rd36, %rd20, 128;
	.loc	1 129 18                        // gated_mlp.py:129:18
	add.s64 	%rd40, %rd32, %rd49;
	add.s64 	%rd41, %rd33, %rd49;
	add.s64 	%rd42, %rd34, %rd49;
	add.s64 	%rd43, %rd35, %rd49;
	.loc	1 123 55                        // gated_mlp.py:123:55
	add.s32 	%r549, %r422, -64;
	.loc	1 123 51                        // gated_mlp.py:123:51
	setp.lt.s32 	%p15, %r7, %r549;
	.loc	1 123 20                        // gated_mlp.py:123:20
	bar.sync 	0;
	add.s32 	%r550, %r511, 16384;
	add.s32 	%r456, %r550, %r510;
	add.s32 	%r458, %r550, %r515;
	add.s32 	%r460, %r550, %r519;
	add.s32 	%r462, %r550, %r523;
	selp.b32 	%r551, 16, 0, %p15;
	selp.b32 	%r459, %r551, 0, %p14;
	// begin inline asm
	cp.async.cg.shared.global [ %r456 + 0 ], [ %rd36 + 0 ], 0x10, %r459;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r458 + 0 ], [ %rd36 + 0 ], 0x10, %r459;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r460 + 0 ], [ %rd36 + 0 ], 0x10, %r459;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r462 + 0 ], [ %rd36 + 0 ], 0x10, %r459;
	// end inline asm
	cp.async.commit_group;
	.loc	1 124 51                        // gated_mlp.py:124:51
	setp.lt.s32 	%p16, %r11, %r549;
	setp.lt.s32 	%p17, %r12, %r549;
	setp.lt.s32 	%p18, %r13, %r549;
	setp.lt.s32 	%p19, %r14, %r549;
	.loc	1 124 20                        // gated_mlp.py:124:20
	add.s32 	%r552, %r511, 49152;
	add.s32 	%r464, %r552, %r532;
	add.s32 	%r466, %r552, %r536;
	add.s32 	%r468, %r552, %r538;
	add.s32 	%r470, %r552, %r540;
	selp.b32 	%r553, 16, 0, %p16;
	selp.b32 	%r465, %r553, 0, %p14;
	// begin inline asm
	cp.async.cg.shared.global [ %r464 + 0 ], [ %rd40 + 0 ], 0x10, %r465;
	// end inline asm
	selp.b32 	%r554, 16, 0, %p17;
	selp.b32 	%r467, %r554, 0, %p14;
	// begin inline asm
	cp.async.cg.shared.global [ %r466 + 0 ], [ %rd41 + 0 ], 0x10, %r467;
	// end inline asm
	selp.b32 	%r555, 16, 0, %p18;
	selp.b32 	%r469, %r555, 0, %p14;
	// begin inline asm
	cp.async.cg.shared.global [ %r468 + 0 ], [ %rd42 + 0 ], 0x10, %r469;
	// end inline asm
	selp.b32 	%r556, 16, 0, %p19;
	selp.b32 	%r471, %r556, 0, %p14;
	// begin inline asm
	cp.async.cg.shared.global [ %r470 + 0 ], [ %rd43 + 0 ], 0x10, %r471;
	// end inline asm
	cp.async.commit_group;
	mov.b32 	%r1872, 0f00000000;
	mov.b32 	%r1873, %r1872;
	mov.b32 	%r1874, %r1872;
	mov.b32 	%r1875, %r1872;
	mov.b32 	%r1876, %r1872;
	mov.b32 	%r1877, %r1872;
	mov.b32 	%r1878, %r1872;
	mov.b32 	%r1879, %r1872;
	mov.b32 	%r1880, %r1872;
	mov.b32 	%r1881, %r1872;
	mov.b32 	%r1882, %r1872;
	mov.b32 	%r1883, %r1872;
	mov.b32 	%r1884, %r1872;
	mov.b32 	%r1885, %r1872;
	mov.b32 	%r1886, %r1872;
	mov.b32 	%r1887, %r1872;
	mov.b32 	%r1888, %r1872;
	mov.b32 	%r1889, %r1872;
	mov.b32 	%r1890, %r1872;
	mov.b32 	%r1891, %r1872;
	mov.b32 	%r1892, %r1872;
	mov.b32 	%r1893, %r1872;
	mov.b32 	%r1894, %r1872;
	mov.b32 	%r1895, %r1872;
	mov.b32 	%r1896, %r1872;
	mov.b32 	%r1897, %r1872;
	mov.b32 	%r1898, %r1872;
	mov.b32 	%r1899, %r1872;
	mov.b32 	%r1900, %r1872;
	mov.b32 	%r1901, %r1872;
	mov.b32 	%r1902, %r1872;
	mov.b32 	%r1903, %r1872;
	mov.b32 	%r1904, %r1872;
	mov.b32 	%r1905, %r1872;
	mov.b32 	%r1906, %r1872;
	mov.b32 	%r1907, %r1872;
	mov.b32 	%r1908, %r1872;
	mov.b32 	%r1909, %r1872;
	mov.b32 	%r1910, %r1872;
	mov.b32 	%r1911, %r1872;
	mov.b32 	%r1912, %r1872;
	mov.b32 	%r1913, %r1872;
	mov.b32 	%r1914, %r1872;
	mov.b32 	%r1915, %r1872;
	mov.b32 	%r1916, %r1872;
	mov.b32 	%r1917, %r1872;
	mov.b32 	%r1918, %r1872;
	mov.b32 	%r1919, %r1872;
	mov.b32 	%r1920, %r1872;
	mov.b32 	%r1921, %r1872;
	mov.b32 	%r1922, %r1872;
	mov.b32 	%r1923, %r1872;
	mov.b32 	%r1924, %r1872;
	mov.b32 	%r1925, %r1872;
	mov.b32 	%r1926, %r1872;
	mov.b32 	%r1927, %r1872;
	mov.b32 	%r1928, %r1872;
	mov.b32 	%r1929, %r1872;
	mov.b32 	%r1930, %r1872;
	mov.b32 	%r1931, %r1872;
	mov.b32 	%r1932, %r1872;
	mov.b32 	%r1933, %r1872;
	mov.b32 	%r1934, %r1872;
	mov.b32 	%r1935, %r1872;
	mov.b32 	%r1936, %r1872;
	mov.b32 	%r1937, %r1872;
	mov.b32 	%r1938, %r1872;
	mov.b32 	%r1939, %r1872;
	mov.b32 	%r1940, %r1872;
	mov.b32 	%r1941, %r1872;
	mov.b32 	%r1942, %r1872;
	mov.b32 	%r1943, %r1872;
	mov.b32 	%r1944, %r1872;
	mov.b32 	%r1945, %r1872;
	mov.b32 	%r1946, %r1872;
	mov.b32 	%r1947, %r1872;
	mov.b32 	%r1948, %r1872;
	mov.b32 	%r1949, %r1872;
	mov.b32 	%r1950, %r1872;
	mov.b32 	%r1951, %r1872;
	mov.b32 	%r1952, %r1872;
	mov.b32 	%r1953, %r1872;
	mov.b32 	%r1954, %r1872;
	mov.b32 	%r1955, %r1872;
	mov.b32 	%r1956, %r1872;
	mov.b32 	%r1957, %r1872;
	mov.b32 	%r1958, %r1872;
	mov.b32 	%r1959, %r1872;
	mov.b32 	%r1960, %r1872;
	mov.b32 	%r1961, %r1872;
	mov.b32 	%r1962, %r1872;
	mov.b32 	%r1963, %r1872;
	mov.b32 	%r1964, %r1872;
	mov.b32 	%r1965, %r1872;
	mov.b32 	%r1966, %r1872;
	mov.b32 	%r1967, %r1872;
	mov.b32 	%r1968, %r1872;
	mov.b32 	%r1969, %r1872;
	mov.b32 	%r1970, %r1872;
	mov.b32 	%r1971, %r1872;
	mov.b32 	%r1972, %r1872;
	mov.b32 	%r1973, %r1872;
	mov.b32 	%r1974, %r1872;
	mov.b32 	%r1975, %r1872;
	mov.b32 	%r1976, %r1872;
	mov.b32 	%r1977, %r1872;
	mov.b32 	%r1978, %r1872;
	mov.b32 	%r1979, %r1872;
	mov.b32 	%r1980, %r1872;
	mov.b32 	%r1981, %r1872;
	mov.b32 	%r1982, %r1872;
	mov.b32 	%r1983, %r1872;
	mov.b32 	%r1984, %r1872;
	mov.b32 	%r1985, %r1872;
	mov.b32 	%r1986, %r1872;
	mov.b32 	%r1987, %r1872;
	mov.b32 	%r1988, %r1872;
	mov.b32 	%r1989, %r1872;
	mov.b32 	%r1990, %r1872;
	mov.b32 	%r1991, %r1872;
	mov.b32 	%r1992, %r1872;
	mov.b32 	%r1993, %r1872;
	mov.b32 	%r1994, %r1872;
	mov.b32 	%r1995, %r1872;
	mov.b32 	%r1996, %r1872;
	mov.b32 	%r1997, %r1872;
	mov.b32 	%r1998, %r1872;
	mov.b32 	%r1999, %r1872;
	.loc	1 120 22                        // gated_mlp.py:120:22
	@%p1 bra 	$L__BB0_3;
// %bb.1:                               // %.lr.ph
	.loc	1 0 22                          // gated_mlp.py:0:22
	shr.u32 	%r8, %r5, 5;
	cvt.s64.s32 	%rd1, %r497;
	cvt.s64.s32 	%rd2, %r498;
	cvt.s64.s32 	%rd3, %r499;
	cvt.s64.s32 	%rd4, %r500;
	shr.s32 	%r502, %r501, 31;
	shr.u32 	%r503, %r502, 27;
	add.s32 	%r504, %r501, %r503;
	shr.s32 	%r16, %r504, 5;
	cvt.s64.s32 	%rd5, %r505;
	add.s32 	%r27, %r16, -3;
	add.s32 	%r1869, %r422, -96;
	.loc	1 120 22                        // gated_mlp.py:120:22
	shl.b64 	%rd6, %rd4, 1;
	mad.lo.s64 	%rd124, %rd5, 6, %rd18;
	shl.b64 	%rd8, %rd5, 1;
	shl.b64 	%rd9, %rd3, 1;
	shl.b64 	%rd10, %rd2, 1;
	shl.b64 	%rd11, %rd1, 1;
	and.b32 	%r561, %r5, 3;
	mul.wide.u32 	%rd50, %r561, 16;
	add.s64 	%rd51, %rd50, %rd17;
	add.s64 	%rd123, %rd51, 192;
	mov.b32 	%r1337, 0;
	mov.b32 	%r1872, 0f00000000;
	mov.b32 	%r1871, 2;
	mov.b32 	%r1870, -1;
	mov.b32 	%r1873, %r1872;
	mov.b32 	%r1874, %r1872;
	mov.b32 	%r1875, %r1872;
	mov.b32 	%r1876, %r1872;
	mov.b32 	%r1877, %r1872;
	mov.b32 	%r1878, %r1872;
	mov.b32 	%r1879, %r1872;
	mov.b32 	%r1880, %r1872;
	mov.b32 	%r1881, %r1872;
	mov.b32 	%r1882, %r1872;
	mov.b32 	%r1883, %r1872;
	mov.b32 	%r1884, %r1872;
	mov.b32 	%r1885, %r1872;
	mov.b32 	%r1886, %r1872;
	mov.b32 	%r1887, %r1872;
	mov.b32 	%r1888, %r1872;
	mov.b32 	%r1889, %r1872;
	mov.b32 	%r1890, %r1872;
	mov.b32 	%r1891, %r1872;
	mov.b32 	%r1892, %r1872;
	mov.b32 	%r1893, %r1872;
	mov.b32 	%r1894, %r1872;
	mov.b32 	%r1895, %r1872;
	mov.b32 	%r1896, %r1872;
	mov.b32 	%r1897, %r1872;
	mov.b32 	%r1898, %r1872;
	mov.b32 	%r1899, %r1872;
	mov.b32 	%r1900, %r1872;
	mov.b32 	%r1901, %r1872;
	mov.b32 	%r1902, %r1872;
	mov.b32 	%r1903, %r1872;
	mov.b32 	%r1904, %r1872;
	mov.b32 	%r1905, %r1872;
	mov.b32 	%r1906, %r1872;
	mov.b32 	%r1907, %r1872;
	mov.b32 	%r1908, %r1872;
	mov.b32 	%r1909, %r1872;
	mov.b32 	%r1910, %r1872;
	mov.b32 	%r1911, %r1872;
	mov.b32 	%r1912, %r1872;
	mov.b32 	%r1913, %r1872;
	mov.b32 	%r1914, %r1872;
	mov.b32 	%r1915, %r1872;
	mov.b32 	%r1916, %r1872;
	mov.b32 	%r1917, %r1872;
	mov.b32 	%r1918, %r1872;
	mov.b32 	%r1919, %r1872;
	mov.b32 	%r1920, %r1872;
	mov.b32 	%r1921, %r1872;
	mov.b32 	%r1922, %r1872;
	mov.b32 	%r1923, %r1872;
	mov.b32 	%r1924, %r1872;
	mov.b32 	%r1925, %r1872;
	mov.b32 	%r1926, %r1872;
	mov.b32 	%r1927, %r1872;
	mov.b32 	%r1928, %r1872;
	mov.b32 	%r1929, %r1872;
	mov.b32 	%r1930, %r1872;
	mov.b32 	%r1931, %r1872;
	mov.b32 	%r1932, %r1872;
	mov.b32 	%r1933, %r1872;
	mov.b32 	%r1934, %r1872;
	mov.b32 	%r1935, %r1872;
	mov.b32 	%r1936, %r1872;
	mov.b32 	%r1937, %r1872;
	mov.b32 	%r1938, %r1872;
	mov.b32 	%r1939, %r1872;
	mov.b32 	%r1940, %r1872;
	mov.b32 	%r1941, %r1872;
	mov.b32 	%r1942, %r1872;
	mov.b32 	%r1943, %r1872;
	mov.b32 	%r1944, %r1872;
	mov.b32 	%r1945, %r1872;
	mov.b32 	%r1946, %r1872;
	mov.b32 	%r1947, %r1872;
	mov.b32 	%r1948, %r1872;
	mov.b32 	%r1949, %r1872;
	mov.b32 	%r1950, %r1872;
	mov.b32 	%r1951, %r1872;
	mov.b32 	%r1952, %r1872;
	mov.b32 	%r1953, %r1872;
	mov.b32 	%r1954, %r1872;
	mov.b32 	%r1955, %r1872;
	mov.b32 	%r1956, %r1872;
	mov.b32 	%r1957, %r1872;
	mov.b32 	%r1958, %r1872;
	mov.b32 	%r1959, %r1872;
	mov.b32 	%r1960, %r1872;
	mov.b32 	%r1961, %r1872;
	mov.b32 	%r1962, %r1872;
	mov.b32 	%r1963, %r1872;
	mov.b32 	%r1964, %r1872;
	mov.b32 	%r1965, %r1872;
	mov.b32 	%r1966, %r1872;
	mov.b32 	%r1967, %r1872;
	mov.b32 	%r1968, %r1872;
	mov.b32 	%r1969, %r1872;
	mov.b32 	%r1970, %r1872;
	mov.b32 	%r1971, %r1872;
	mov.b32 	%r1972, %r1872;
	mov.b32 	%r1973, %r1872;
	mov.b32 	%r1974, %r1872;
	mov.b32 	%r1975, %r1872;
	mov.b32 	%r1976, %r1872;
	mov.b32 	%r1977, %r1872;
	mov.b32 	%r1978, %r1872;
	mov.b32 	%r1979, %r1872;
	mov.b32 	%r1980, %r1872;
	mov.b32 	%r1981, %r1872;
	mov.b32 	%r1982, %r1872;
	mov.b32 	%r1983, %r1872;
	mov.b32 	%r1984, %r1872;
	mov.b32 	%r1985, %r1872;
	mov.b32 	%r1986, %r1872;
	mov.b32 	%r1987, %r1872;
	mov.b32 	%r1988, %r1872;
	mov.b32 	%r1989, %r1872;
	mov.b32 	%r1990, %r1872;
	mov.b32 	%r1991, %r1872;
	mov.b32 	%r1992, %r1872;
	mov.b32 	%r1993, %r1872;
	mov.b32 	%r1994, %r1872;
	mov.b32 	%r1995, %r1872;
	mov.b32 	%r1996, %r1872;
	mov.b32 	%r1997, %r1872;
	mov.b32 	%r1998, %r1872;
	mov.b32 	%r1999, %r1872;
	mov.b32 	%r2000, %r1337;
$L__BB0_2:                              // =>This Inner Loop Header: Depth=1
	setp.lt.s32 	%p24, %r2000, %r27;
	add.s32 	%r1358, %r1870, 1;
	setp.gt.s32 	%p25, %r1358, 3;
	selp.b32 	%r1870, 0, %r1358, %p25;
	.loc	1 123 20                        // gated_mlp.py:123:20
	cp.async.wait_group 	4;
	bar.sync 	0;
	shl.b32 	%r1359, %r1870, 13;
	add.s32 	%r1202, %r511, %r1359;
	.loc	1 124 20                        // gated_mlp.py:124:20
	add.s32 	%r1205, %r533, %r1359;
	.loc	1 126 35                        // gated_mlp.py:126:35
	shfl.sync.idx.b32 	%r1362, %r8, 0, 31, -1;
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	bfe.u32 	%r1363, %r1202, 4, 14;
	cvt.u64.u32 	%rd68, %r1363;
	or.b64 	%rd52, %rd68, -9223371899382267904;
	bfe.u32 	%r1364, %r1205, 4, 14;
	cvt.u64.u32 	%rd69, %r1364;
	or.b64 	%rd53, %rd69, 4611686293322072064;
	mov.pred 	%p20, -1;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r1872,%r1873,%r1874,%r1875,%r1876,%r1877,%r1878,%r1879,%r1880,%r1881,%r1882,%r1883,%r1884,%r1885,%r1886,%r1887,%r1888,%r1889,%r1890,%r1891,%r1892,%r1893,%r1894,%r1895,%r1896,%r1897,%r1898,%r1899,%r1900,%r1901,%r1902,%r1903,%r1904,%r1905,%r1906,%r1907,%r1908,%r1909,%r1910,%r1911,%r1912,%r1913,%r1914,%r1915,%r1916,%r1917,%r1918,%r1919,%r1920,%r1921,%r1922,%r1923,%r1924,%r1925,%r1926,%r1927,%r1928,%r1929,%r1930,%r1931,%r1932,%r1933,%r1934,%r1935}, %rd52, %rd53, %p20, 1, 1, 0, 1;
	// end inline asm
	add.s32 	%r1365, %r1202, 32;
	bfe.u32 	%r1366, %r1365, 4, 14;
	cvt.u64.u32 	%rd70, %r1366;
	or.b64 	%rd54, %rd70, -9223371899382267904;
	add.s32 	%r1367, %r1205, 2048;
	bfe.u32 	%r1368, %r1367, 4, 14;
	cvt.u64.u32 	%rd71, %r1368;
	or.b64 	%rd55, %rd71, 4611686293322072064;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r1872,%r1873,%r1874,%r1875,%r1876,%r1877,%r1878,%r1879,%r1880,%r1881,%r1882,%r1883,%r1884,%r1885,%r1886,%r1887,%r1888,%r1889,%r1890,%r1891,%r1892,%r1893,%r1894,%r1895,%r1896,%r1897,%r1898,%r1899,%r1900,%r1901,%r1902,%r1903,%r1904,%r1905,%r1906,%r1907,%r1908,%r1909,%r1910,%r1911,%r1912,%r1913,%r1914,%r1915,%r1916,%r1917,%r1918,%r1919,%r1920,%r1921,%r1922,%r1923,%r1924,%r1925,%r1926,%r1927,%r1928,%r1929,%r1930,%r1931,%r1932,%r1933,%r1934,%r1935}, %rd54, %rd55, %p20, 1, 1, 0, 1;
	// end inline asm
	add.s32 	%r1369, %r1202, 4096;
	bfe.u32 	%r1370, %r1369, 4, 14;
	cvt.u64.u32 	%rd72, %r1370;
	or.b64 	%rd56, %rd72, -9223371899382267904;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r1936,%r1937,%r1938,%r1939,%r1940,%r1941,%r1942,%r1943,%r1944,%r1945,%r1946,%r1947,%r1948,%r1949,%r1950,%r1951,%r1952,%r1953,%r1954,%r1955,%r1956,%r1957,%r1958,%r1959,%r1960,%r1961,%r1962,%r1963,%r1964,%r1965,%r1966,%r1967,%r1968,%r1969,%r1970,%r1971,%r1972,%r1973,%r1974,%r1975,%r1976,%r1977,%r1978,%r1979,%r1980,%r1981,%r1982,%r1983,%r1984,%r1985,%r1986,%r1987,%r1988,%r1989,%r1990,%r1991,%r1992,%r1993,%r1994,%r1995,%r1996,%r1997,%r1998,%r1999}, %rd56, %rd53, %p20, 1, 1, 0, 1;
	// end inline asm
	add.s32 	%r1371, %r1202, 4128;
	bfe.u32 	%r1372, %r1371, 4, 14;
	cvt.u64.u32 	%rd73, %r1372;
	or.b64 	%rd58, %rd73, -9223371899382267904;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n128k16.f32.f16.f16 {%r1936,%r1937,%r1938,%r1939,%r1940,%r1941,%r1942,%r1943,%r1944,%r1945,%r1946,%r1947,%r1948,%r1949,%r1950,%r1951,%r1952,%r1953,%r1954,%r1955,%r1956,%r1957,%r1958,%r1959,%r1960,%r1961,%r1962,%r1963,%r1964,%r1965,%r1966,%r1967,%r1968,%r1969,%r1970,%r1971,%r1972,%r1973,%r1974,%r1975,%r1976,%r1977,%r1978,%r1979,%r1980,%r1981,%r1982,%r1983,%r1984,%r1985,%r1986,%r1987,%r1988,%r1989,%r1990,%r1991,%r1992,%r1993,%r1994,%r1995,%r1996,%r1997,%r1998,%r1999}, %rd58, %rd55, %p20, 1, 1, 0, 1;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	mov.b32 	%r1207, %r1337;
	mov.b32 	%r1203, %r1337;
	mov.b32 	%r1204, %r1337;
	mov.b32 	%r1206, %r1337;
	// begin inline asm
	// wait for regs: %r1872,%r1873,%r1874,%r1875,%r1876,%r1877,%r1878,%r1879,%r1880,%r1881,%r1882,%r1883,%r1884,%r1885,%r1886,%r1887,%r1888,%r1889,%r1890,%r1891,%r1892,%r1893,%r1894,%r1895,%r1896,%r1897,%r1898,%r1899,%r1900,%r1901,%r1902,%r1903,%r1904,%r1905,%r1906,%r1907,%r1908,%r1909,%r1910,%r1911,%r1912,%r1913,%r1914,%r1915,%r1916,%r1917,%r1918,%r1919,%r1920,%r1921,%r1922,%r1923,%r1924,%r1925,%r1926,%r1927,%r1928,%r1929,%r1930,%r1931,%r1932,%r1933,%r1934,%r1935,%r1936,%r1937,%r1938,%r1939,%r1940,%r1941,%r1942,%r1943,%r1944,%r1945,%r1946,%r1947,%r1948,%r1949,%r1950,%r1951,%r1952,%r1953,%r1954,%r1955,%r1956,%r1957,%r1958,%r1959,%r1960,%r1961,%r1962,%r1963,%r1964,%r1965,%r1966,%r1967,%r1968,%r1969,%r1970,%r1971,%r1972,%r1973,%r1974,%r1975,%r1976,%r1977,%r1978,%r1979,%r1980,%r1981,%r1982,%r1983,%r1984,%r1985,%r1986,%r1987,%r1988,%r1989,%r1990,%r1991,%r1992,%r1993,%r1994,%r1995,%r1996,%r1997,%r1998,%r1999,%r1202,%r1203,%r1204,%r1205,%r1206,%r1207
	wgmma.wait_group.sync.aligned 1;
	// end inline asm
	.loc	1 129 18                        // gated_mlp.py:129:18
	add.s64 	%rd64, %rd124, %rd11;
	add.s64 	%rd65, %rd124, %rd10;
	add.s64 	%rd66, %rd124, %rd9;
	.loc	1 120 22                        // gated_mlp.py:120:22
	add.s64 	%rd67, %rd124, %rd6;
	add.s32 	%r1373, %r1871, 1;
	setp.gt.s32 	%p26, %r1373, 3;
	selp.b32 	%r1871, 0, %r1373, %p26;
	.loc	1 123 51                        // gated_mlp.py:123:51
	setp.lt.s32 	%p27, %r7, %r1869;
	.loc	1 123 20                        // gated_mlp.py:123:20
	shl.b32 	%r1374, %r1871, 13;
	add.s32 	%r1375, %r511, %r1374;
	bar.sync 	0;
	add.s32 	%r1342, %r1375, %r510;
	add.s32 	%r1344, %r1375, %r515;
	add.s32 	%r1346, %r1375, %r519;
	add.s32 	%r1348, %r1375, %r523;
	selp.b32 	%r1380, 16, 0, %p27;
	selp.b32 	%r1345, %r1380, 0, %p24;
	// begin inline asm
	cp.async.cg.shared.global [ %r1342 + 0 ], [ %rd123 + 0 ], 0x10, %r1345;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r1344 + 0 ], [ %rd123 + 0 ], 0x10, %r1345;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r1346 + 0 ], [ %rd123 + 0 ], 0x10, %r1345;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r1348 + 0 ], [ %rd123 + 0 ], 0x10, %r1345;
	// end inline asm
	cp.async.commit_group;
	.loc	1 124 51                        // gated_mlp.py:124:51
	setp.lt.s32 	%p28, %r11, %r1869;
	setp.lt.s32 	%p29, %r12, %r1869;
	setp.lt.s32 	%p30, %r13, %r1869;
	setp.lt.s32 	%p31, %r14, %r1869;
	.loc	1 124 20                        // gated_mlp.py:124:20
	add.s32 	%r1381, %r533, %r1374;
	add.s32 	%r1350, %r1381, %r532;
	add.s32 	%r1352, %r1381, %r536;
	add.s32 	%r1354, %r1381, %r538;
	add.s32 	%r1356, %r1381, %r540;
	selp.b32 	%r1386, 16, 0, %p28;
	selp.b32 	%r1351, %r1386, 0, %p24;
	// begin inline asm
	cp.async.cg.shared.global [ %r1350 + 0 ], [ %rd64 + 0 ], 0x10, %r1351;
	// end inline asm
	selp.b32 	%r1387, 16, 0, %p29;
	selp.b32 	%r1353, %r1387, 0, %p24;
	// begin inline asm
	cp.async.cg.shared.global [ %r1352 + 0 ], [ %rd65 + 0 ], 0x10, %r1353;
	// end inline asm
	selp.b32 	%r1388, 16, 0, %p30;
	selp.b32 	%r1355, %r1388, 0, %p24;
	// begin inline asm
	cp.async.cg.shared.global [ %r1354 + 0 ], [ %rd66 + 0 ], 0x10, %r1355;
	// end inline asm
	selp.b32 	%r1389, 16, 0, %p31;
	selp.b32 	%r1357, %r1389, 0, %p24;
	// begin inline asm
	cp.async.cg.shared.global [ %r1356 + 0 ], [ %rd67 + 0 ], 0x10, %r1357;
	// end inline asm
	cp.async.commit_group;
	.loc	1 120 22                        // gated_mlp.py:120:22
	add.s32 	%r2000, %r2000, 1;
	add.s64 	%rd124, %rd124, %rd8;
	add.s64 	%rd123, %rd123, 64;
	add.s32 	%r1869, %r1869, -32;
	setp.ne.s32 	%p32, %r16, %r2000;
	@%p32 bra 	$L__BB0_2;
$L__BB0_3:                              // %._crit_edge
	.loc	1 98 54                         // gated_mlp.py:98:54
	mul.lo.s32 	%r1710, %r4, %r2;
	sub.s32 	%r1711, %r3, %r1710;
	.loc	1 98 27                         // gated_mlp.py:98:27
	add.s32 	%r1712, %r1711, %r1;
	.loc	1 120 22                        // gated_mlp.py:120:22
	// begin inline asm
	// wait for regs: %r1872,%r1873,%r1874,%r1875,%r1876,%r1877,%r1878,%r1879,%r1880,%r1881,%r1882,%r1883,%r1884,%r1885,%r1886,%r1887,%r1888,%r1889,%r1890,%r1891,%r1892,%r1893,%r1894,%r1895,%r1896,%r1897,%r1898,%r1899,%r1900,%r1901,%r1902,%r1903,%r1904,%r1905,%r1906,%r1907,%r1908,%r1909,%r1910,%r1911,%r1912,%r1913,%r1914,%r1915,%r1916,%r1917,%r1918,%r1919,%r1920,%r1921,%r1922,%r1923,%r1924,%r1925,%r1926,%r1927,%r1928,%r1929,%r1930,%r1931,%r1932,%r1933,%r1934,%r1935,%r1936,%r1937,%r1938,%r1939,%r1940,%r1941,%r1942,%r1943,%r1944,%r1945,%r1946,%r1947,%r1948,%r1949,%r1950,%r1951,%r1952,%r1953,%r1954,%r1955,%r1956,%r1957,%r1958,%r1959,%r1960,%r1961,%r1962,%r1963,%r1964,%r1965,%r1966,%r1967,%r1968,%r1969,%r1970,%r1971,%r1972,%r1973,%r1974,%r1975,%r1976,%r1977,%r1978,%r1979,%r1980,%r1981,%r1982,%r1983,%r1984,%r1985,%r1986,%r1987,%r1988,%r1989,%r1990,%r1991,%r1992,%r1993,%r1994,%r1995,%r1996,%r1997,%r1998,%r1999
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	cp.async.wait_group 	0;
	bar.sync 	0;
	.loc	1 134 23                        // gated_mlp.py:134:23
	cvt.rn.f16x2.f32 	%r1713, %r1873, %r1872;
	cvt.rn.f16x2.f32 	%r1714, %r1875, %r1874;
	cvt.rn.f16x2.f32 	%r1715, %r1877, %r1876;
	cvt.rn.f16x2.f32 	%r1716, %r1879, %r1878;
	cvt.rn.f16x2.f32 	%r1717, %r1881, %r1880;
	cvt.rn.f16x2.f32 	%r1718, %r1883, %r1882;
	cvt.rn.f16x2.f32 	%r1719, %r1885, %r1884;
	cvt.rn.f16x2.f32 	%r1720, %r1887, %r1886;
	cvt.rn.f16x2.f32 	%r1721, %r1889, %r1888;
	cvt.rn.f16x2.f32 	%r1722, %r1891, %r1890;
	cvt.rn.f16x2.f32 	%r1723, %r1893, %r1892;
	cvt.rn.f16x2.f32 	%r1724, %r1895, %r1894;
	cvt.rn.f16x2.f32 	%r1725, %r1897, %r1896;
	cvt.rn.f16x2.f32 	%r1726, %r1899, %r1898;
	cvt.rn.f16x2.f32 	%r1727, %r1901, %r1900;
	cvt.rn.f16x2.f32 	%r1728, %r1903, %r1902;
	cvt.rn.f16x2.f32 	%r1729, %r1905, %r1904;
	cvt.rn.f16x2.f32 	%r1730, %r1907, %r1906;
	cvt.rn.f16x2.f32 	%r1731, %r1909, %r1908;
	cvt.rn.f16x2.f32 	%r1732, %r1911, %r1910;
	cvt.rn.f16x2.f32 	%r1733, %r1913, %r1912;
	cvt.rn.f16x2.f32 	%r1734, %r1915, %r1914;
	cvt.rn.f16x2.f32 	%r1735, %r1917, %r1916;
	cvt.rn.f16x2.f32 	%r1736, %r1919, %r1918;
	cvt.rn.f16x2.f32 	%r1737, %r1921, %r1920;
	cvt.rn.f16x2.f32 	%r1738, %r1923, %r1922;
	cvt.rn.f16x2.f32 	%r1739, %r1925, %r1924;
	cvt.rn.f16x2.f32 	%r1740, %r1927, %r1926;
	cvt.rn.f16x2.f32 	%r1741, %r1929, %r1928;
	cvt.rn.f16x2.f32 	%r1742, %r1931, %r1930;
	cvt.rn.f16x2.f32 	%r1743, %r1933, %r1932;
	cvt.rn.f16x2.f32 	%r1744, %r1935, %r1934;
	cvt.rn.f16x2.f32 	%r1745, %r1937, %r1936;
	cvt.rn.f16x2.f32 	%r1746, %r1939, %r1938;
	cvt.rn.f16x2.f32 	%r1747, %r1941, %r1940;
	cvt.rn.f16x2.f32 	%r1748, %r1943, %r1942;
	cvt.rn.f16x2.f32 	%r1749, %r1945, %r1944;
	cvt.rn.f16x2.f32 	%r1750, %r1947, %r1946;
	cvt.rn.f16x2.f32 	%r1751, %r1949, %r1948;
	cvt.rn.f16x2.f32 	%r1752, %r1951, %r1950;
	cvt.rn.f16x2.f32 	%r1753, %r1953, %r1952;
	cvt.rn.f16x2.f32 	%r1754, %r1955, %r1954;
	cvt.rn.f16x2.f32 	%r1755, %r1957, %r1956;
	cvt.rn.f16x2.f32 	%r1756, %r1959, %r1958;
	cvt.rn.f16x2.f32 	%r1757, %r1961, %r1960;
	cvt.rn.f16x2.f32 	%r1758, %r1963, %r1962;
	cvt.rn.f16x2.f32 	%r1759, %r1965, %r1964;
	cvt.rn.f16x2.f32 	%r1760, %r1967, %r1966;
	cvt.rn.f16x2.f32 	%r1761, %r1969, %r1968;
	cvt.rn.f16x2.f32 	%r1762, %r1971, %r1970;
	cvt.rn.f16x2.f32 	%r1763, %r1973, %r1972;
	cvt.rn.f16x2.f32 	%r1764, %r1975, %r1974;
	cvt.rn.f16x2.f32 	%r1765, %r1977, %r1976;
	cvt.rn.f16x2.f32 	%r1766, %r1979, %r1978;
	cvt.rn.f16x2.f32 	%r1767, %r1981, %r1980;
	cvt.rn.f16x2.f32 	%r1768, %r1983, %r1982;
	cvt.rn.f16x2.f32 	%r1769, %r1985, %r1984;
	cvt.rn.f16x2.f32 	%r1770, %r1987, %r1986;
	cvt.rn.f16x2.f32 	%r1771, %r1989, %r1988;
	cvt.rn.f16x2.f32 	%r1772, %r1991, %r1990;
	cvt.rn.f16x2.f32 	%r1773, %r1993, %r1992;
	cvt.rn.f16x2.f32 	%r1774, %r1995, %r1994;
	cvt.rn.f16x2.f32 	%r1775, %r1997, %r1996;
	cvt.rn.f16x2.f32 	%r1776, %r1999, %r1998;
	.loc	1 138 22                        // gated_mlp.py:138:22
	shl.b32 	%r1777, %r1712, 7;
	.loc	1 138 37                        // gated_mlp.py:138:37
	or.b32 	%r1778, %r1777, %r11;
	or.b32 	%r1779, %r1777, %r12;
	or.b32 	%r1780, %r1777, %r13;
	or.b32 	%r1781, %r1777, %r14;
	or.b32 	%r1782, %r10, %r1777;
	or.b32 	%r1783, %r1782, 56;
	or.b32 	%r1784, %r1782, 120;
	.loc	1 140 33                        // gated_mlp.py:140:33
	mul.lo.s32 	%r1785, %r1778, %r423;
	mul.lo.s32 	%r1786, %r1779, %r423;
	mul.lo.s32 	%r1787, %r1780, %r423;
	mul.lo.s32 	%r1788, %r1781, %r423;
	shl.b32 	%r1789, %r423, 5;
	add.s32 	%r1790, %r1785, %r1789;
	shl.b32 	%r1791, %r423, 3;
	add.s32 	%r1792, %r1790, %r1791;
	add.s32 	%r1793, %r1792, %r1791;
	mul.lo.s32 	%r1794, %r1783, %r423;
	shl.b32 	%r1795, %r423, 4;
	add.s32 	%r1796, %r1793, %r1795;
	add.s32 	%r1797, %r1796, %r1791;
	add.s32 	%r1798, %r1797, %r1791;
	add.s32 	%r1799, %r1798, %r1791;
	add.s32 	%r1800, %r1799, %r1791;
	add.s32 	%r1801, %r1800, %r1791;
	add.s32 	%r1802, %r1801, %r1791;
	mul.lo.s32 	%r1803, %r1784, %r423;
	.loc	1 140 21                        // gated_mlp.py:140:21
	mul.wide.s32 	%rd90, %r1785, 2;
	add.s64 	%rd91, %rd19, %rd90;
	mul.wide.s32 	%rd92, %r1786, 2;
	add.s64 	%rd93, %rd19, %rd92;
	mul.wide.s32 	%rd94, %r1787, 2;
	add.s64 	%rd95, %rd19, %rd94;
	mul.wide.s32 	%rd96, %r1788, 2;
	add.s64 	%rd97, %rd19, %rd96;
	mul.wide.s32 	%rd98, %r1790, 2;
	add.s64 	%rd99, %rd19, %rd98;
	mul.wide.s32 	%rd100, %r1792, 2;
	add.s64 	%rd101, %rd19, %rd100;
	mul.wide.s32 	%rd102, %r1793, 2;
	add.s64 	%rd103, %rd19, %rd102;
	mul.wide.s32 	%rd104, %r1794, 2;
	add.s64 	%rd105, %rd19, %rd104;
	mul.wide.s32 	%rd106, %r1796, 2;
	add.s64 	%rd107, %rd19, %rd106;
	mul.wide.s32 	%rd108, %r1797, 2;
	add.s64 	%rd109, %rd19, %rd108;
	mul.wide.s32 	%rd110, %r1798, 2;
	add.s64 	%rd111, %rd19, %rd110;
	mul.wide.s32 	%rd112, %r1799, 2;
	add.s64 	%rd113, %rd19, %rd112;
	mul.wide.s32 	%rd114, %r1800, 2;
	add.s64 	%rd115, %rd19, %rd114;
	mul.wide.s32 	%rd116, %r1801, 2;
	add.s64 	%rd117, %rd19, %rd116;
	mul.wide.s32 	%rd118, %r1802, 2;
	add.s64 	%rd119, %rd19, %rd118;
	mul.wide.s32 	%rd120, %r1803, 2;
	add.s64 	%rd121, %rd19, %rd120;
	.loc	1 140 52                        // gated_mlp.py:140:52
	mul.wide.s32 	%rd122, %r15, 2;
	add.s64 	%rd74, %rd91, %rd122;
	add.s64 	%rd75, %rd93, %rd122;
	add.s64 	%rd76, %rd95, %rd122;
	add.s64 	%rd77, %rd97, %rd122;
	add.s64 	%rd78, %rd99, %rd122;
	add.s64 	%rd79, %rd101, %rd122;
	add.s64 	%rd80, %rd103, %rd122;
	add.s64 	%rd81, %rd105, %rd122;
	add.s64 	%rd82, %rd107, %rd122;
	add.s64 	%rd83, %rd109, %rd122;
	add.s64 	%rd84, %rd111, %rd122;
	add.s64 	%rd85, %rd113, %rd122;
	add.s64 	%rd86, %rd115, %rd122;
	add.s64 	%rd87, %rd117, %rd122;
	add.s64 	%rd88, %rd119, %rd122;
	add.s64 	%rd89, %rd121, %rd122;
	.loc	1 141 33                        // gated_mlp.py:141:33
	setp.lt.s32 	%p49, %r1778, 1;
	setp.lt.s32 	%p50, %r1779, 1;
	setp.lt.s32 	%p51, %r1780, 1;
	setp.lt.s32 	%p52, %r1781, 1;
	setp.lt.s32 	%p53, %r1777, 0;
	.loc	1 141 58                        // gated_mlp.py:141:58
	setp.lt.s32 	%p54, %r15, %r421;
	.loc	1 141 39                        // gated_mlp.py:141:39
	and.pred 	%p33, %p54, %p49;
	and.pred 	%p34, %p54, %p50;
	and.pred 	%p35, %p54, %p51;
	and.pred 	%p36, %p54, %p52;
	and.pred 	%p37, %p54, %p53;
	.loc	1 142 21                        // gated_mlp.py:142:21
	shl.b32 	%r1804, %r5, 1;
	and.b32 	%r1805, %r1804, 6;
	shl.b32 	%r1806, %r5, 5;
	and.b32 	%r1807, %r1806, 384;
	or.b32 	%r1808, %r1807, %r1805;
	shl.b32 	%r1809, %r9, 5;
	or.b32 	%r1810, %r1808, %r1809;
	shl.b32 	%r1811, %r5, 6;
	and.b32 	%r1812, %r1811, 6144;
	or.b32 	%r1813, %r1810, %r1812;
	and.b32 	%r1814, %r6, 248;
	or.b32 	%r1815, %r1814, %r17;
	or.b32 	%r1816, %r1815, %r18;
	shr.u32 	%r1817, %r1813, 3;
	add.s32 	%r1819, %r511, %r1817;
	shl.b32 	%r1820, %r1813, 1;
	add.s32 	%r1821, %r1819, %r1820;
	st.shared.b32 	[%r1821], %r1713;
	or.b32 	%r1822, %r1813, 1024;
	shr.u32 	%r1823, %r1822, 3;
	add.s32 	%r1824, %r511, %r1823;
	add.s32 	%r1825, %r1824, %r1820;
	st.shared.b32 	[%r1825+2048], %r1714;
	st.shared.b32 	[%r1821+16], %r1715;
	st.shared.b32 	[%r1825+2064], %r1716;
	st.shared.b32 	[%r1821+32], %r1717;
	and.b32 	%r1826, %r1823, 1008;
	add.s32 	%r1827, %r511, %r1826;
	add.s32 	%r1828, %r1827, %r1820;
	st.shared.b32 	[%r1828+2080], %r1718;
	st.shared.b32 	[%r1821+48], %r1719;
	st.shared.b32 	[%r1828+2096], %r1720;
	st.shared.b32 	[%r1821+64], %r1721;
	st.shared.b32 	[%r1828+2112], %r1722;
	st.shared.b32 	[%r1821+80], %r1723;
	st.shared.b32 	[%r1828+2128], %r1724;
	st.shared.b32 	[%r1821+96], %r1725;
	st.shared.b32 	[%r1828+2144], %r1726;
	st.shared.b32 	[%r1821+112], %r1727;
	st.shared.b32 	[%r1828+2160], %r1728;
	st.shared.b32 	[%r1821+128], %r1729;
	st.shared.b32 	[%r1828+2176], %r1730;
	st.shared.b32 	[%r1821+144], %r1731;
	st.shared.b32 	[%r1828+2192], %r1732;
	st.shared.b32 	[%r1821+160], %r1733;
	st.shared.b32 	[%r1828+2208], %r1734;
	st.shared.b32 	[%r1821+176], %r1735;
	st.shared.b32 	[%r1828+2224], %r1736;
	st.shared.b32 	[%r1821+192], %r1737;
	st.shared.b32 	[%r1828+2240], %r1738;
	st.shared.b32 	[%r1821+208], %r1739;
	st.shared.b32 	[%r1828+2256], %r1740;
	st.shared.b32 	[%r1821+224], %r1741;
	st.shared.b32 	[%r1828+2272], %r1742;
	st.shared.b32 	[%r1821+240], %r1743;
	st.shared.b32 	[%r1828+2288], %r1744;
	bar.sync 	0;
	shr.u32 	%r1829, %r1816, 3;
	and.b32 	%r1830, %r1829, 112;
	add.s32 	%r1831, %r511, %r1830;
	shl.b32 	%r1832, %r1816, 1;
	add.s32 	%r1833, %r1831, %r1832;
	ld.shared.v4.b32 	{%r1646, %r1647, %r1648, %r1649}, [%r1833];
	or.b32 	%r1834, %r1816, 1024;
	shr.u32 	%r1835, %r1834, 3;
	and.b32 	%r1836, %r1835, 240;
	add.s32 	%r1837, %r511, %r1836;
	add.s32 	%r1838, %r1837, %r1832;
	ld.shared.v4.b32 	{%r1650, %r1651, %r1652, %r1653}, [%r1838+2048];
	or.b32 	%r1839, %r1816, 2048;
	shr.u32 	%r1840, %r1839, 3;
	and.b32 	%r1841, %r1840, 368;
	add.s32 	%r1842, %r511, %r1841;
	add.s32 	%r1843, %r1842, %r1832;
	ld.shared.v4.b32 	{%r1654, %r1655, %r1656, %r1657}, [%r1843+4096];
	or.b32 	%r1844, %r1816, 3072;
	shr.u32 	%r1845, %r1844, 3;
	and.b32 	%r1846, %r1845, 496;
	add.s32 	%r1847, %r511, %r1846;
	add.s32 	%r1848, %r1847, %r1832;
	ld.shared.v4.b32 	{%r1658, %r1659, %r1660, %r1661}, [%r1848+6144];
	or.b32 	%r1849, %r1816, 4096;
	shr.u32 	%r1850, %r1849, 3;
	and.b32 	%r1851, %r1850, 624;
	add.s32 	%r1852, %r511, %r1851;
	add.s32 	%r1853, %r1852, %r1832;
	ld.shared.v4.b32 	{%r1662, %r1663, %r1664, %r1665}, [%r1853+8192];
	or.b32 	%r1854, %r1816, 5120;
	shr.u32 	%r1855, %r1854, 3;
	and.b32 	%r1856, %r1855, 752;
	add.s32 	%r1857, %r511, %r1856;
	add.s32 	%r1858, %r1857, %r1832;
	ld.shared.v4.b32 	{%r1666, %r1667, %r1668, %r1669}, [%r1858+10240];
	or.b32 	%r1859, %r1816, 6144;
	shr.u32 	%r1860, %r1859, 3;
	and.b32 	%r1861, %r1860, 880;
	add.s32 	%r1862, %r511, %r1861;
	add.s32 	%r1863, %r1862, %r1832;
	ld.shared.v4.b32 	{%r1670, %r1671, %r1672, %r1673}, [%r1863+12288];
	or.b32 	%r1864, %r1816, 7168;
	shr.u32 	%r1865, %r1864, 3;
	and.b32 	%r1866, %r1865, 1008;
	add.s32 	%r1867, %r511, %r1866;
	add.s32 	%r1868, %r1867, %r1832;
	ld.shared.v4.b32 	{%r1674, %r1675, %r1676, %r1677}, [%r1868+14336];
	bar.sync 	0;
	st.shared.b32 	[%r1821], %r1745;
	st.shared.b32 	[%r1825+2048], %r1746;
	st.shared.b32 	[%r1821+16], %r1747;
	st.shared.b32 	[%r1825+2064], %r1748;
	st.shared.b32 	[%r1821+32], %r1749;
	st.shared.b32 	[%r1828+2080], %r1750;
	st.shared.b32 	[%r1821+48], %r1751;
	st.shared.b32 	[%r1828+2096], %r1752;
	st.shared.b32 	[%r1821+64], %r1753;
	st.shared.b32 	[%r1828+2112], %r1754;
	st.shared.b32 	[%r1821+80], %r1755;
	st.shared.b32 	[%r1828+2128], %r1756;
	st.shared.b32 	[%r1821+96], %r1757;
	st.shared.b32 	[%r1828+2144], %r1758;
	st.shared.b32 	[%r1821+112], %r1759;
	st.shared.b32 	[%r1828+2160], %r1760;
	st.shared.b32 	[%r1821+128], %r1761;
	st.shared.b32 	[%r1828+2176], %r1762;
	st.shared.b32 	[%r1821+144], %r1763;
	st.shared.b32 	[%r1828+2192], %r1764;
	st.shared.b32 	[%r1821+160], %r1765;
	st.shared.b32 	[%r1828+2208], %r1766;
	st.shared.b32 	[%r1821+176], %r1767;
	st.shared.b32 	[%r1828+2224], %r1768;
	st.shared.b32 	[%r1821+192], %r1769;
	st.shared.b32 	[%r1828+2240], %r1770;
	st.shared.b32 	[%r1821+208], %r1771;
	st.shared.b32 	[%r1828+2256], %r1772;
	st.shared.b32 	[%r1821+224], %r1773;
	st.shared.b32 	[%r1828+2272], %r1774;
	st.shared.b32 	[%r1821+240], %r1775;
	st.shared.b32 	[%r1828+2288], %r1776;
	bar.sync 	0;
	ld.shared.v4.b32 	{%r1678, %r1679, %r1680, %r1681}, [%r1833];
	ld.shared.v4.b32 	{%r1682, %r1683, %r1684, %r1685}, [%r1838+2048];
	ld.shared.v4.b32 	{%r1686, %r1687, %r1688, %r1689}, [%r1843+4096];
	ld.shared.v4.b32 	{%r1690, %r1691, %r1692, %r1693}, [%r1848+6144];
	ld.shared.v4.b32 	{%r1694, %r1695, %r1696, %r1697}, [%r1853+8192];
	ld.shared.v4.b32 	{%r1698, %r1699, %r1700, %r1701}, [%r1858+10240];
	ld.shared.v4.b32 	{%r1702, %r1703, %r1704, %r1705}, [%r1863+12288];
	ld.shared.v4.b32 	{%r1706, %r1707, %r1708, %r1709}, [%r1868+14336];
	// begin inline asm
	@%p33 st.global.v4.b32 [ %rd74 + 0 ], { %r1646, %r1647, %r1648, %r1649 };
	// end inline asm
	// begin inline asm
	@%p34 st.global.v4.b32 [ %rd75 + 0 ], { %r1650, %r1651, %r1652, %r1653 };
	// end inline asm
	// begin inline asm
	@%p35 st.global.v4.b32 [ %rd76 + 0 ], { %r1654, %r1655, %r1656, %r1657 };
	// end inline asm
	// begin inline asm
	@%p36 st.global.v4.b32 [ %rd77 + 0 ], { %r1658, %r1659, %r1660, %r1661 };
	// end inline asm
	// begin inline asm
	@%p37 st.global.v4.b32 [ %rd78 + 0 ], { %r1662, %r1663, %r1664, %r1665 };
	// end inline asm
	// begin inline asm
	@%p37 st.global.v4.b32 [ %rd79 + 0 ], { %r1666, %r1667, %r1668, %r1669 };
	// end inline asm
	// begin inline asm
	@%p37 st.global.v4.b32 [ %rd80 + 0 ], { %r1670, %r1671, %r1672, %r1673 };
	// end inline asm
	// begin inline asm
	@%p37 st.global.v4.b32 [ %rd81 + 0 ], { %r1674, %r1675, %r1676, %r1677 };
	// end inline asm
	// begin inline asm
	@%p37 st.global.v4.b32 [ %rd82 + 0 ], { %r1678, %r1679, %r1680, %r1681 };
	// end inline asm
	// begin inline asm
	@%p37 st.global.v4.b32 [ %rd83 + 0 ], { %r1682, %r1683, %r1684, %r1685 };
	// end inline asm
	// begin inline asm
	@%p37 st.global.v4.b32 [ %rd84 + 0 ], { %r1686, %r1687, %r1688, %r1689 };
	// end inline asm
	// begin inline asm
	@%p37 st.global.v4.b32 [ %rd85 + 0 ], { %r1690, %r1691, %r1692, %r1693 };
	// end inline asm
	// begin inline asm
	@%p37 st.global.v4.b32 [ %rd86 + 0 ], { %r1694, %r1695, %r1696, %r1697 };
	// end inline asm
	// begin inline asm
	@%p37 st.global.v4.b32 [ %rd87 + 0 ], { %r1698, %r1699, %r1700, %r1701 };
	// end inline asm
	// begin inline asm
	@%p37 st.global.v4.b32 [ %rd88 + 0 ], { %r1702, %r1703, %r1704, %r1705 };
	// end inline asm
	// begin inline asm
	@%p37 st.global.v4.b32 [ %rd89 + 0 ], { %r1706, %r1707, %r1708, %r1709 };
	// end inline asm
	.loc	1 142 4                         // gated_mlp.py:142:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/ubuntu/PTX_dataset/triton_ptx/gated_mlp.py"
	.file	2 "/home/joy/miniconda3/envs/ptx/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 157                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x96 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 103                                 // DW_AT_name
.b8 97
.b8 116
.b8 101
.b8 100
.b8 95
.b8 109
.b8 108
.b8 112
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 117
.b8 98
.b8 117
.b8 110
.b8 116
.b8 117
.b8 47
.b8 80
.b8 84
.b8 88
.b8 95
.b8 100
.b8 97
.b8 116
.b8 97
.b8 115
.b8 101
.b8 116
.b8 47
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 116
.b8 120
.b8 0
.b8 2                                   // Abbrev [2] 0x4a:0x10 DW_TAG_subprogram
.b8 109                                 // DW_AT_name
.b8 97
.b8 116
.b8 109
.b8 117
.b8 108
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x5a:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 74                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x6f:0x18 DW_TAG_inlined_subroutine
.b32 74                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 93                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x87:0x18 DW_TAG_inlined_subroutine
.b32 74                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 120                                 // DW_AT_call_line
.b8 33                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
