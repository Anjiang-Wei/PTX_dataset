//
// Generated by LLVM NVPTX Back-End
//

.version 8.7
.target sm_90a
.address_size 64

	// .globl	_attn_fwd               // -- Begin function _attn_fwd
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @_attn_fwd
.visible .entry _attn_fwd(
	.param .u64 .ptr .global .align 1 _attn_fwd_param_0,
	.param .u64 .ptr .global .align 1 _attn_fwd_param_1,
	.param .u64 .ptr .global .align 1 _attn_fwd_param_2,
	.param .f32 _attn_fwd_param_3,
	.param .u64 .ptr .global .align 1 _attn_fwd_param_4,
	.param .u64 .ptr .global .align 1 _attn_fwd_param_5,
	.param .u32 _attn_fwd_param_6,
	.param .u32 _attn_fwd_param_7,
	.param .u32 _attn_fwd_param_8,
	.param .u32 _attn_fwd_param_9,
	.param .u32 _attn_fwd_param_10,
	.param .u32 _attn_fwd_param_11,
	.param .u32 _attn_fwd_param_12,
	.param .u32 _attn_fwd_param_13,
	.param .u32 _attn_fwd_param_14,
	.param .u32 _attn_fwd_param_15,
	.param .u32 _attn_fwd_param_16,
	.param .u32 _attn_fwd_param_17,
	.param .u32 _attn_fwd_param_18,
	.param .u64 .ptr .global .align 1 _attn_fwd_param_19
)
.reqntid 256
{
	.reg .pred 	%p<27>;
	.reg .b32 	%r<1830>;
	.reg .b64 	%rd<182>;
	.loc	1 114 0                         // gqa.py:114:0
$L__func_begin0:
	.loc	1 114 0                         // gqa.py:114:0

// %bb.0:
	ld.param.b32 	%r253, [_attn_fwd_param_17];
	ld.param.b64 	%rd20, [_attn_fwd_param_5];
	ld.param.b64 	%rd19, [_attn_fwd_param_4];
	ld.param.b64 	%rd33, [_attn_fwd_param_0];
	ld.param.b64 	%rd34, [_attn_fwd_param_1];
$L__tmp0:
	.loc	1 127 28                        // gqa.py:127:28
	mov.u32 	%r306, %ctaid.x;
	.loc	1 128 27                        // gqa.py:128:27
	mov.u32 	%r1, %ctaid.y;
	ld.param.b64 	%rd35, [_attn_fwd_param_2];
	ld.param.b32 	%r307, [_attn_fwd_param_3];
	ld.param.b32 	%r308, [_attn_fwd_param_18];
	.loc	1 129 22                        // gqa.py:129:22
	div.s32 	%r310, %r1, %r308;
	.loc	1 130 21                        // gqa.py:130:21
	mul.lo.s32 	%r311, %r310, %r308;
	sub.s32 	%r312, %r1, %r311;
	ld.param.b32 	%r313, [_attn_fwd_param_6];
	ld.param.s32 	%rd36, [_attn_fwd_param_7];
	ld.param.s32 	%rd37, [_attn_fwd_param_8];
	.loc	1 131 38                        // gqa.py:131:38
	mul.wide.s32 	%rd38, %r310, %r313;
	.loc	1 131 59                        // gqa.py:131:59
	cvt.u64.u32 	%rd39, %r312;
	ld.param.b32 	%r314, [_attn_fwd_param_11];
	.loc	1 131 50                        // gqa.py:131:50
	mad.lo.s64 	%rd1, %rd39, %rd36, %rd38;
	.loc	1 135 17                        // gqa.py:135:17
	shl.b64 	%rd40, %rd1, 1;
	add.s64 	%rd41, %rd33, %rd40;
	ld.param.b32 	%r315, [_attn_fwd_param_14];
	.loc	1 138 27                        // gqa.py:138:27
	shl.b32 	%r2, %r306, 8;
	.loc	1 140 8                         // gqa.py:140:8
	cvt.s64.s32 	%rd42, %r2;
	.loc	1 143 17                        // gqa.py:143:17
	add.s64 	%rd43, %rd35, %rd40;
	.loc	1 148 8                         // gqa.py:148:8
	cvt.s64.s32 	%rd44, %r315;
	.loc	1 151 17                        // gqa.py:151:17
	add.s64 	%rd45, %rd34, %rd40;
	.loc	1 156 8                         // gqa.py:156:8
	cvt.s64.s32 	%rd46, %r314;
	.loc	1 167 46                        // gqa.py:167:46
	mov.u32 	%r3, %tid.x;
	shr.u32 	%r4, %r3, 5;
	bfe.s32 	%r316, %r3, 5, 1;
	and.b32 	%r5, %r3, 128;
	shr.u32 	%r317, %r3, 3;
	bfe.u32 	%r318, %r3, 3, 5;
	or.b32 	%r319, %r318, 32;
	or.b32 	%r320, %r318, 64;
	or.b32 	%r321, %r317, 96;
	or.b32 	%r322, %r318, 128;
	or.b32 	%r323, %r318, 160;
	or.b32 	%r324, %r318, 192;
	or.b32 	%r325, %r317, 224;
	.loc	1 175 16                        // gqa.py:175:16
	mul.f32 	%r11, %r307, 0f3FB8AA3B;
	.loc	1 177 16                        // gqa.py:177:16
	cvt.u64.u32 	%rd47, %r318;
	cvt.u64.u32 	%rd48, %r319;
	cvt.u64.u32 	%rd49, %r320;
	cvt.u64.u32 	%rd50, %r321;
	cvt.u64.u32 	%rd51, %r322;
	cvt.u64.u32 	%rd52, %r323;
	cvt.u64.u32 	%rd53, %r324;
	cvt.u64.u32 	%rd54, %r325;
	or.b64 	%rd2, %rd47, %rd42;
	or.b64 	%rd3, %rd48, %rd42;
	or.b64 	%rd4, %rd49, %rd42;
	or.b64 	%rd5, %rd50, %rd42;
	or.b64 	%rd6, %rd51, %rd42;
	or.b64 	%rd7, %rd52, %rd42;
	or.b64 	%rd8, %rd53, %rd42;
	or.b64 	%rd9, %rd54, %rd42;
	mul.lo.s64 	%rd55, %rd2, %rd37;
	mul.lo.s64 	%rd56, %rd3, %rd37;
	mul.lo.s64 	%rd57, %rd4, %rd37;
	mul.lo.s64 	%rd58, %rd5, %rd37;
	mul.lo.s64 	%rd59, %rd6, %rd37;
	mul.lo.s64 	%rd60, %rd7, %rd37;
	mul.lo.s64 	%rd61, %rd8, %rd37;
	mul.lo.s64 	%rd62, %rd9, %rd37;
	shl.b32 	%r7, %r3, 3;
	and.b32 	%r326, %r7, 56;
	cvt.u64.u32 	%rd10, %r326;
	shl.b64 	%rd63, %rd55, 1;
	add.s64 	%rd64, %rd41, %rd63;
	mul.wide.u32 	%rd65, %r326, 2;
	add.s64 	%rd21, %rd64, %rd65;
	shl.b64 	%rd66, %rd56, 1;
	add.s64 	%rd67, %rd41, %rd66;
	add.s64 	%rd22, %rd67, %rd65;
	shl.b64 	%rd68, %rd57, 1;
	add.s64 	%rd69, %rd41, %rd68;
	add.s64 	%rd23, %rd69, %rd65;
	shl.b64 	%rd70, %rd58, 1;
	add.s64 	%rd71, %rd41, %rd70;
	add.s64 	%rd24, %rd71, %rd65;
	shl.b64 	%rd72, %rd59, 1;
	add.s64 	%rd73, %rd41, %rd72;
	add.s64 	%rd25, %rd73, %rd65;
	shl.b64 	%rd74, %rd60, 1;
	add.s64 	%rd75, %rd41, %rd74;
	add.s64 	%rd26, %rd75, %rd65;
	shl.b64 	%rd76, %rd61, 1;
	add.s64 	%rd77, %rd41, %rd76;
	add.s64 	%rd27, %rd77, %rd65;
	shl.b64 	%rd78, %rd62, 1;
	add.s64 	%rd79, %rd41, %rd78;
	add.s64 	%rd28, %rd79, %rd65;
	// begin inline asm
	mov.u32 %r254, 0x0;
	mov.u32 %r255, 0x0;
	mov.u32 %r256, 0x0;
	mov.u32 %r257, 0x0;
	ld.global.v4.b32 { %r254, %r255, %r256, %r257 }, [ %rd21 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r258, 0x0;
	mov.u32 %r259, 0x0;
	mov.u32 %r260, 0x0;
	mov.u32 %r261, 0x0;
	ld.global.v4.b32 { %r258, %r259, %r260, %r261 }, [ %rd22 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r262, 0x0;
	mov.u32 %r263, 0x0;
	mov.u32 %r264, 0x0;
	mov.u32 %r265, 0x0;
	ld.global.v4.b32 { %r262, %r263, %r264, %r265 }, [ %rd23 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r266, 0x0;
	mov.u32 %r267, 0x0;
	mov.u32 %r268, 0x0;
	mov.u32 %r269, 0x0;
	ld.global.v4.b32 { %r266, %r267, %r268, %r269 }, [ %rd24 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r270, 0x0;
	mov.u32 %r271, 0x0;
	mov.u32 %r272, 0x0;
	mov.u32 %r273, 0x0;
	ld.global.v4.b32 { %r270, %r271, %r272, %r273 }, [ %rd25 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r274, 0x0;
	mov.u32 %r275, 0x0;
	mov.u32 %r276, 0x0;
	mov.u32 %r277, 0x0;
	ld.global.v4.b32 { %r274, %r275, %r276, %r277 }, [ %rd26 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r278, 0x0;
	mov.u32 %r279, 0x0;
	mov.u32 %r280, 0x0;
	mov.u32 %r281, 0x0;
	ld.global.v4.b32 { %r278, %r279, %r280, %r281 }, [ %rd27 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r282, 0x0;
	mov.u32 %r283, 0x0;
	mov.u32 %r284, 0x0;
	mov.u32 %r285, 0x0;
	ld.global.v4.b32 { %r282, %r283, %r284, %r285 }, [ %rd28 + 0 ];
	// end inline asm
	and.b32 	%r327, %r316, 288;
	and.b32 	%r328, %r3, 24;
	mul.lo.s32 	%r329, %r328, 9;
	xor.b32 	%r330, %r329, %r326;
	xor.b32 	%r331, %r330, %r327;
	and.b32 	%r332, %r7, 512;
	shl.b32 	%r8, %r5, 3;
	or.b32 	%r333, %r332, %r331;
	or.b32 	%r334, %r333, %r8;
	shl.b32 	%r335, %r334, 1;
	mov.b32 	%r336, global_smem;
	add.s32 	%r337, %r336, %r335;
	st.shared.v4.b32 	[%r337], {%r254, %r255, %r256, %r257};
	or.b32 	%r338, %r326, 2048;
	xor.b32 	%r339, %r329, %r338;
	xor.b32 	%r340, %r339, %r327;
	shl.b32 	%r341, %r340, 1;
	add.s32 	%r342, %r336, %r341;
	shl.b32 	%r343, %r332, 1;
	add.s32 	%r344, %r342, %r343;
	shl.b32 	%r345, %r5, 4;
	add.s32 	%r346, %r344, %r345;
	st.shared.v4.b32 	[%r346], {%r258, %r259, %r260, %r261};
	or.b32 	%r347, %r326, 4096;
	xor.b32 	%r348, %r329, %r347;
	xor.b32 	%r349, %r348, %r327;
	shl.b32 	%r350, %r349, 1;
	add.s32 	%r351, %r336, %r350;
	add.s32 	%r352, %r351, %r343;
	add.s32 	%r353, %r352, %r345;
	st.shared.v4.b32 	[%r353], {%r262, %r263, %r264, %r265};
	or.b32 	%r354, %r326, 6144;
	xor.b32 	%r355, %r329, %r354;
	xor.b32 	%r356, %r355, %r327;
	shl.b32 	%r357, %r356, 1;
	add.s32 	%r358, %r336, %r357;
	add.s32 	%r359, %r358, %r343;
	add.s32 	%r360, %r359, %r345;
	st.shared.v4.b32 	[%r360], {%r266, %r267, %r268, %r269};
	or.b32 	%r361, %r326, 8192;
	xor.b32 	%r362, %r329, %r361;
	xor.b32 	%r363, %r362, %r327;
	shl.b32 	%r364, %r363, 1;
	add.s32 	%r365, %r336, %r364;
	add.s32 	%r366, %r365, %r343;
	add.s32 	%r367, %r366, %r345;
	st.shared.v4.b32 	[%r367], {%r270, %r271, %r272, %r273};
	or.b32 	%r368, %r326, 10240;
	xor.b32 	%r369, %r329, %r368;
	xor.b32 	%r370, %r369, %r327;
	shl.b32 	%r371, %r370, 1;
	add.s32 	%r372, %r336, %r371;
	add.s32 	%r373, %r372, %r343;
	add.s32 	%r374, %r373, %r345;
	st.shared.v4.b32 	[%r374], {%r274, %r275, %r276, %r277};
	or.b32 	%r375, %r326, 12288;
	xor.b32 	%r376, %r329, %r375;
	xor.b32 	%r377, %r376, %r327;
	shl.b32 	%r378, %r377, 1;
	add.s32 	%r379, %r336, %r378;
	add.s32 	%r380, %r379, %r343;
	add.s32 	%r381, %r380, %r345;
	st.shared.v4.b32 	[%r381], {%r278, %r279, %r280, %r281};
	or.b32 	%r382, %r326, 14336;
	xor.b32 	%r383, %r329, %r382;
	xor.b32 	%r384, %r383, %r327;
	shl.b32 	%r385, %r384, 1;
	add.s32 	%r386, %r336, %r385;
	add.s32 	%r387, %r386, %r343;
	add.s32 	%r388, %r387, %r345;
	st.shared.v4.b32 	[%r388], {%r282, %r283, %r284, %r285};
$L__tmp1:
	.loc	1 47 20                         // gqa.py:47:20 @[ gqa.py:185:82 ]
	mul.lo.s64 	%rd80, %rd46, %rd47;
	shl.b64 	%rd81, %rd80, 1;
	add.s64 	%rd82, %rd45, %rd81;
	add.s64 	%rd29, %rd82, %rd65;
	add.s32 	%r286, %r337, 32768;
	mov.b32 	%r287, 16;
	// begin inline asm
	cp.async.cg.shared.global [ %r286 + 0 ], [ %rd29 + 0 ], 0x10, %r287;
	// end inline asm
	cp.async.commit_group;
	.loc	1 65 20                         // gqa.py:65:20 @[ gqa.py:185:82 ]
	mul.lo.s64 	%rd83, %rd44, %rd47;
	shl.b64 	%rd84, %rd83, 1;
	add.s64 	%rd85, %rd43, %rd84;
	add.s64 	%rd30, %rd85, %rd65;
	add.s32 	%r288, %r337, 45056;
	// begin inline asm
	cp.async.cg.shared.global [ %r288 + 0 ], [ %rd30 + 0 ], 0x10, %r287;
	// end inline asm
	cp.async.commit_group;
	.loc	1 47 20                         // gqa.py:47:20 @[ gqa.py:185:82 ]
	mul.wide.s32 	%rd86, %r314, 32;
	add.s64 	%rd87, %rd80, %rd86;
	shl.b64 	%rd88, %rd87, 1;
	add.s64 	%rd89, %rd45, %rd88;
	add.s64 	%rd31, %rd89, %rd65;
	bar.sync 	0;
	add.s32 	%r290, %r337, 36864;
	// begin inline asm
	cp.async.cg.shared.global [ %r290 + 0 ], [ %rd31 + 0 ], 0x10, %r287;
	// end inline asm
	cp.async.commit_group;
	.loc	1 65 20                         // gqa.py:65:20 @[ gqa.py:185:82 ]
	mul.wide.s32 	%rd90, %r315, 32;
	add.s64 	%rd91, %rd83, %rd90;
	shl.b64 	%rd92, %rd91, 1;
	add.s64 	%rd93, %rd43, %rd92;
	add.s64 	%rd32, %rd93, %rd65;
	add.s32 	%r292, %r337, 49152;
	// begin inline asm
	cp.async.cg.shared.global [ %r292 + 0 ], [ %rd32 + 0 ], 0x10, %r287;
	// end inline asm
	cp.async.commit_group;
	.loc	1 48 23                         // gqa.py:48:23 @[ gqa.py:185:82 ]
	// begin inline asm
	fence.proxy.async.shared::cta;
	// end inline asm
	.loc	1 44 33                         // gqa.py:44:33 @[ gqa.py:185:82 ]
	or.b64 	%rd94, %rd47, 64;
	mul.lo.s64 	%rd95, %rd94, %rd44;
	shl.b64 	%rd96, %rd95, 1;
	and.b32 	%r389, %r3, 7;
	mul.wide.u32 	%rd97, %r389, 16;
	add.s64 	%rd98, %rd96, %rd97;
	add.s64 	%rd99, %rd98, %rd40;
	add.s64 	%rd181, %rd35, %rd99;
	mul.wide.s32 	%rd12, %r315, 64;
	mul.lo.s64 	%rd100, %rd94, %rd46;
	shl.b64 	%rd101, %rd100, 1;
	add.s64 	%rd102, %rd101, %rd97;
	add.s64 	%rd103, %rd102, %rd40;
	add.s64 	%rd180, %rd34, %rd103;
	mul.wide.s32 	%rd14, %r314, 64;
	mov.b32 	%r1822, 0f3F800000;
	mov.b32 	%r1818, 0fFF800000;
	mov.b32 	%r1754, 0f00000000;
	mov.b32 	%r1753, 1;
	mov.b32 	%r1752, -1;
	mov.b32 	%r1751, -32;
	mov.b32 	%r1755, %r1754;
	mov.b32 	%r1756, %r1754;
	mov.b32 	%r1757, %r1754;
	mov.b32 	%r1758, %r1754;
	mov.b32 	%r1759, %r1754;
	mov.b32 	%r1760, %r1754;
	mov.b32 	%r1761, %r1754;
	mov.b32 	%r1762, %r1754;
	mov.b32 	%r1763, %r1754;
	mov.b32 	%r1764, %r1754;
	mov.b32 	%r1765, %r1754;
	mov.b32 	%r1766, %r1754;
	mov.b32 	%r1767, %r1754;
	mov.b32 	%r1768, %r1754;
	mov.b32 	%r1769, %r1754;
	mov.b32 	%r1770, %r1754;
	mov.b32 	%r1771, %r1754;
	mov.b32 	%r1772, %r1754;
	mov.b32 	%r1773, %r1754;
	mov.b32 	%r1774, %r1754;
	mov.b32 	%r1775, %r1754;
	mov.b32 	%r1776, %r1754;
	mov.b32 	%r1777, %r1754;
	mov.b32 	%r1778, %r1754;
	mov.b32 	%r1779, %r1754;
	mov.b32 	%r1780, %r1754;
	mov.b32 	%r1781, %r1754;
	mov.b32 	%r1782, %r1754;
	mov.b32 	%r1783, %r1754;
	mov.b32 	%r1784, %r1754;
	mov.b32 	%r1785, %r1754;
	mov.b32 	%r1786, %r1754;
	mov.b32 	%r1787, %r1754;
	mov.b32 	%r1788, %r1754;
	mov.b32 	%r1789, %r1754;
	mov.b32 	%r1790, %r1754;
	mov.b32 	%r1791, %r1754;
	mov.b32 	%r1792, %r1754;
	mov.b32 	%r1793, %r1754;
	mov.b32 	%r1794, %r1754;
	mov.b32 	%r1795, %r1754;
	mov.b32 	%r1796, %r1754;
	mov.b32 	%r1797, %r1754;
	mov.b32 	%r1798, %r1754;
	mov.b32 	%r1799, %r1754;
	mov.b32 	%r1800, %r1754;
	mov.b32 	%r1801, %r1754;
	mov.b32 	%r1802, %r1754;
	mov.b32 	%r1803, %r1754;
	mov.b32 	%r1804, %r1754;
	mov.b32 	%r1805, %r1754;
	mov.b32 	%r1806, %r1754;
	mov.b32 	%r1807, %r1754;
	mov.b32 	%r1808, %r1754;
	mov.b32 	%r1809, %r1754;
	mov.b32 	%r1810, %r1754;
	mov.b32 	%r1811, %r1754;
	mov.b32 	%r1812, %r1754;
	mov.b32 	%r1813, %r1754;
	mov.b32 	%r1814, %r1754;
	mov.b32 	%r1815, %r1754;
	mov.b32 	%r1816, %r1754;
	mov.b32 	%r1817, %r1754;
	mov.b32 	%r1819, %r1818;
	mov.b32 	%r1820, %r1818;
	mov.b32 	%r1821, %r1818;
	mov.b32 	%r1823, %r1822;
	mov.b32 	%r1824, %r1822;
	mov.b32 	%r1825, %r1822;
$L__BB0_1:                              // %__nv_exp2f.exit
                                        // =>This Inner Loop Header: Depth=1
	add.s32 	%r1751, %r1751, 32;
	setp.lt.u32 	%p11, %r1751, 4032;
	add.s32 	%r1094, %r1752, 1;
	setp.gt.s32 	%p12, %r1094, 2;
	selp.b32 	%r1752, 0, %r1094, %p12;
	.loc	1 47 20                         // gqa.py:47:20 @[ gqa.py:185:82 ]
	cp.async.wait_group 	2;
	bar.sync 	0;
	shl.b32 	%r1095, %r1752, 12;
	add.s32 	%r1096, %r336, %r1095;
	add.s32 	%r649, %r1096, 32768;
	.loc	1 48 23                         // gqa.py:48:23 @[ gqa.py:185:82 ]
	shfl.sync.idx.b32 	%r1097, %r4, 0, 31, -1;
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	shl.b32 	%r1098, %r1097, 11;
	and.b32 	%r1099, %r1098, 8192;
	add.s32 	%r1100, %r1099, %r336;
	bfe.u32 	%r1101, %r1100, 4, 14;
	cvt.u64.u32 	%rd126, %r1101;
	or.b64 	%rd104, %rd126, 4611686293439512576;
	bfe.u32 	%r1102, %r649, 4, 14;
	cvt.u64.u32 	%rd127, %r1102;
	or.b64 	%rd105, %rd127, 4611686293322072064;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n32k16.f32.f16.f16 {%r438,%r439,%r440,%r441,%r442,%r443,%r444,%r445,%r446,%r447,%r448,%r449,%r450,%r451,%r452,%r453}, %rd104, %rd105, 0, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r1103, %r1100, 32;
	bfe.u32 	%r1104, %r1103, 4, 14;
	cvt.u64.u32 	%rd128, %r1104;
	or.b64 	%rd106, %rd128, 4611686293439512576;
	add.s32 	%r1105, %r1096, 32800;
	bfe.u32 	%r1106, %r1105, 4, 14;
	cvt.u64.u32 	%rd129, %r1106;
	or.b64 	%rd107, %rd129, 4611686293322072064;
	mov.pred 	%p1, -1;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n32k16.f32.f16.f16 {%r438,%r439,%r440,%r441,%r442,%r443,%r444,%r445,%r446,%r447,%r448,%r449,%r450,%r451,%r452,%r453}, %rd106, %rd107, %p1, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r1107, %r1100, 64;
	bfe.u32 	%r1108, %r1107, 4, 14;
	cvt.u64.u32 	%rd130, %r1108;
	or.b64 	%rd108, %rd130, 4611686293439512576;
	add.s32 	%r1109, %r1096, 32832;
	bfe.u32 	%r1110, %r1109, 4, 14;
	cvt.u64.u32 	%rd131, %r1110;
	or.b64 	%rd109, %rd131, 4611686293322072064;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n32k16.f32.f16.f16 {%r438,%r439,%r440,%r441,%r442,%r443,%r444,%r445,%r446,%r447,%r448,%r449,%r450,%r451,%r452,%r453}, %rd108, %rd109, %p1, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r1111, %r1100, 96;
	bfe.u32 	%r1112, %r1111, 4, 14;
	cvt.u64.u32 	%rd132, %r1112;
	or.b64 	%rd110, %rd132, 4611686293439512576;
	add.s32 	%r1113, %r1096, 32864;
	bfe.u32 	%r1114, %r1113, 4, 14;
	cvt.u64.u32 	%rd133, %r1114;
	or.b64 	%rd111, %rd133, 4611686293322072064;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n32k16.f32.f16.f16 {%r438,%r439,%r440,%r441,%r442,%r443,%r444,%r445,%r446,%r447,%r448,%r449,%r450,%r451,%r452,%r453}, %rd110, %rd111, %p1, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r1115, %r1100, 16384;
	bfe.u32 	%r1116, %r1115, 4, 14;
	cvt.u64.u32 	%rd134, %r1116;
	or.b64 	%rd112, %rd134, 4611686293439512576;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n32k16.f32.f16.f16 {%r550,%r551,%r552,%r553,%r554,%r555,%r556,%r557,%r558,%r559,%r560,%r561,%r562,%r563,%r564,%r565}, %rd112, %rd105, 0, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r1117, %r1100, 16416;
	bfe.u32 	%r1118, %r1117, 4, 14;
	cvt.u64.u32 	%rd135, %r1118;
	or.b64 	%rd114, %rd135, 4611686293439512576;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n32k16.f32.f16.f16 {%r550,%r551,%r552,%r553,%r554,%r555,%r556,%r557,%r558,%r559,%r560,%r561,%r562,%r563,%r564,%r565}, %rd114, %rd107, %p1, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r1119, %r1100, 16448;
	bfe.u32 	%r1120, %r1119, 4, 14;
	cvt.u64.u32 	%rd136, %r1120;
	or.b64 	%rd116, %rd136, 4611686293439512576;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n32k16.f32.f16.f16 {%r550,%r551,%r552,%r553,%r554,%r555,%r556,%r557,%r558,%r559,%r560,%r561,%r562,%r563,%r564,%r565}, %rd116, %rd109, %p1, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r1121, %r1100, 16480;
	bfe.u32 	%r1122, %r1121, 4, 14;
	cvt.u64.u32 	%rd137, %r1122;
	or.b64 	%rd118, %rd137, 4611686293439512576;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n32k16.f32.f16.f16 {%r550,%r551,%r552,%r553,%r554,%r555,%r556,%r557,%r558,%r559,%r560,%r561,%r562,%r563,%r564,%r565}, %rd118, %rd111, %p1, 1, 1, 0, 0;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	mov.b32 	%r647, 0;
	mov.b32 	%r648, %r647;
	mov.b32 	%r650, %r647;
	mov.b32 	%r651, %r647;
	mov.b32 	%r646, %r336;
	// begin inline asm
	// wait for regs: %r438,%r439,%r440,%r441,%r442,%r443,%r444,%r445,%r446,%r447,%r448,%r449,%r450,%r451,%r452,%r453,%r550,%r551,%r552,%r553,%r554,%r555,%r556,%r557,%r558,%r559,%r560,%r561,%r562,%r563,%r564,%r565,%r646,%r647,%r648,%r649,%r650,%r651,%r1754,%r1755,%r1756,%r1757,%r1758,%r1759,%r1760,%r1761,%r1762,%r1763,%r1764,%r1765,%r1766,%r1767,%r1768,%r1769,%r1770,%r1771,%r1772,%r1773,%r1774,%r1775,%r1776,%r1777,%r1778,%r1779,%r1780,%r1781,%r1782,%r1783,%r1784,%r1785,%r1786,%r1787,%r1788,%r1789,%r1790,%r1791,%r1792,%r1793,%r1794,%r1795,%r1796,%r1797,%r1798,%r1799,%r1800,%r1801,%r1802,%r1803,%r1804,%r1805,%r1806,%r1807,%r1808,%r1809,%r1810,%r1811,%r1812,%r1813,%r1814,%r1815,%r1816,%r1817
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	.loc	2 167 27                        // standard.py:167:27 @[ gqa.py:185:82 ]
	max.f32 	%r1123, %r438, %r439;
	max.f32 	%r1124, %r440, %r441;
	max.f32 	%r1125, %r1123, %r442;
	max.f32 	%r1126, %r1125, %r443;
	max.f32 	%r1127, %r1124, %r444;
	max.f32 	%r1128, %r1127, %r445;
	max.f32 	%r1129, %r1126, %r446;
	max.f32 	%r1130, %r1129, %r447;
	max.f32 	%r1131, %r1128, %r448;
	max.f32 	%r1132, %r1131, %r449;
	max.f32 	%r1133, %r1130, %r450;
	max.f32 	%r1134, %r1133, %r451;
	max.f32 	%r1135, %r1132, %r452;
	max.f32 	%r1136, %r1135, %r453;
	max.f32 	%r1137, %r550, %r551;
	max.f32 	%r1138, %r552, %r553;
	max.f32 	%r1139, %r1137, %r554;
	max.f32 	%r1140, %r1139, %r555;
	max.f32 	%r1141, %r1138, %r556;
	max.f32 	%r1142, %r1141, %r557;
	max.f32 	%r1143, %r1140, %r558;
	max.f32 	%r1144, %r1143, %r559;
	max.f32 	%r1145, %r1142, %r560;
	max.f32 	%r1146, %r1145, %r561;
	max.f32 	%r1147, %r1144, %r562;
	max.f32 	%r1148, %r1147, %r563;
	max.f32 	%r1149, %r1146, %r564;
	max.f32 	%r1150, %r1149, %r565;
	.loc	2 188 40                        // standard.py:188:40 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1151, %r1134, 2, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ gqa.py:185:82 ]
	max.f32 	%r1152, %r1134, %r1151;
	.loc	2 188 40                        // standard.py:188:40 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1153, %r1152, 1, 31, -1;
	shfl.sync.bfly.b32 	%r1154, %r1136, 2, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ gqa.py:185:82 ]
	max.f32 	%r1155, %r1136, %r1154;
	.loc	2 188 40                        // standard.py:188:40 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1156, %r1155, 1, 31, -1;
	shfl.sync.bfly.b32 	%r1157, %r1148, 2, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ gqa.py:185:82 ]
	max.f32 	%r1158, %r1148, %r1157;
	.loc	2 188 40                        // standard.py:188:40 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1159, %r1158, 1, 31, -1;
	shfl.sync.bfly.b32 	%r1160, %r1150, 2, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ gqa.py:185:82 ]
	max.f32 	%r1161, %r1150, %r1160;
	.loc	2 188 40                        // standard.py:188:40 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1162, %r1161, 1, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ gqa.py:185:82 ]
	max.f32 	%r1163, %r1161, %r1162;
	max.f32 	%r1164, %r1158, %r1159;
	max.f32 	%r1165, %r1155, %r1156;
	max.f32 	%r1166, %r1152, %r1153;
	.loc	1 55 51                         // gqa.py:55:51 @[ gqa.py:185:82 ]
	mul.f32 	%r1167, %r11, %r1166;
	mul.f32 	%r1168, %r11, %r1165;
	mul.f32 	%r1169, %r11, %r1164;
	mul.f32 	%r1170, %r11, %r1163;
	.loc	1 55 35                         // gqa.py:55:35 @[ gqa.py:185:82 ]
	max.f32 	%r95, %r1821, %r1170;
	max.f32 	%r94, %r1820, %r1169;
	max.f32 	%r93, %r1819, %r1168;
	max.f32 	%r92, %r1818, %r1167;
	.loc	1 56 33                         // gqa.py:56:33 @[ gqa.py:185:82 ]
	neg.f32 	%r1171, %r92;
	fma.rn.f32 	%r1172, %r11, %r438, %r1171;
	fma.rn.f32 	%r1173, %r11, %r439, %r1171;
	neg.f32 	%r1174, %r93;
	fma.rn.f32 	%r1175, %r11, %r440, %r1174;
	fma.rn.f32 	%r1176, %r11, %r441, %r1174;
	fma.rn.f32 	%r1177, %r11, %r442, %r1171;
	fma.rn.f32 	%r1178, %r11, %r443, %r1171;
	fma.rn.f32 	%r1179, %r11, %r444, %r1174;
	fma.rn.f32 	%r1180, %r11, %r445, %r1174;
	fma.rn.f32 	%r1181, %r11, %r446, %r1171;
	fma.rn.f32 	%r1182, %r11, %r447, %r1171;
	fma.rn.f32 	%r1183, %r11, %r448, %r1174;
	fma.rn.f32 	%r1184, %r11, %r449, %r1174;
	fma.rn.f32 	%r1185, %r11, %r450, %r1171;
	fma.rn.f32 	%r1186, %r11, %r451, %r1171;
	fma.rn.f32 	%r1187, %r11, %r452, %r1174;
	fma.rn.f32 	%r1188, %r11, %r453, %r1174;
	neg.f32 	%r1189, %r94;
	fma.rn.f32 	%r1190, %r11, %r550, %r1189;
	fma.rn.f32 	%r1191, %r11, %r551, %r1189;
	neg.f32 	%r1192, %r95;
	fma.rn.f32 	%r1193, %r11, %r552, %r1192;
	fma.rn.f32 	%r1194, %r11, %r553, %r1192;
	fma.rn.f32 	%r1195, %r11, %r554, %r1189;
	fma.rn.f32 	%r1196, %r11, %r555, %r1189;
	fma.rn.f32 	%r1197, %r11, %r556, %r1192;
	fma.rn.f32 	%r1198, %r11, %r557, %r1192;
	fma.rn.f32 	%r1199, %r11, %r558, %r1189;
	fma.rn.f32 	%r1200, %r11, %r559, %r1189;
	fma.rn.f32 	%r1201, %r11, %r560, %r1192;
	fma.rn.f32 	%r1202, %r11, %r561, %r1192;
	fma.rn.f32 	%r1203, %r11, %r562, %r1189;
	fma.rn.f32 	%r1204, %r11, %r563, %r1189;
	fma.rn.f32 	%r1205, %r11, %r564, %r1192;
	fma.rn.f32 	%r1206, %r11, %r565, %r1192;
	.loc	1 57 25                         // gqa.py:57:25 @[ gqa.py:185:82 ]
	ex2.approx.ftz.f32 	%r1207, %r1172;
	ex2.approx.ftz.f32 	%r1208, %r1173;
	ex2.approx.ftz.f32 	%r1209, %r1175;
	ex2.approx.ftz.f32 	%r1210, %r1176;
	ex2.approx.ftz.f32 	%r1211, %r1177;
	ex2.approx.ftz.f32 	%r1212, %r1178;
	ex2.approx.ftz.f32 	%r1213, %r1179;
	ex2.approx.ftz.f32 	%r1214, %r1180;
	ex2.approx.ftz.f32 	%r1215, %r1181;
	ex2.approx.ftz.f32 	%r1216, %r1182;
	ex2.approx.ftz.f32 	%r1217, %r1183;
	ex2.approx.ftz.f32 	%r1218, %r1184;
	ex2.approx.ftz.f32 	%r1219, %r1185;
	ex2.approx.ftz.f32 	%r1220, %r1186;
	ex2.approx.ftz.f32 	%r1221, %r1187;
	ex2.approx.ftz.f32 	%r1222, %r1188;
	ex2.approx.ftz.f32 	%r1223, %r1190;
	ex2.approx.ftz.f32 	%r1224, %r1191;
	ex2.approx.ftz.f32 	%r1225, %r1193;
	ex2.approx.ftz.f32 	%r1226, %r1194;
	ex2.approx.ftz.f32 	%r1227, %r1195;
	ex2.approx.ftz.f32 	%r1228, %r1196;
	ex2.approx.ftz.f32 	%r1229, %r1197;
	ex2.approx.ftz.f32 	%r1230, %r1198;
	ex2.approx.ftz.f32 	%r1231, %r1199;
	ex2.approx.ftz.f32 	%r1232, %r1200;
	ex2.approx.ftz.f32 	%r1233, %r1201;
	ex2.approx.ftz.f32 	%r1234, %r1202;
	ex2.approx.ftz.f32 	%r1235, %r1203;
	ex2.approx.ftz.f32 	%r1236, %r1204;
	ex2.approx.ftz.f32 	%r1237, %r1205;
	ex2.approx.ftz.f32 	%r1238, %r1206;
	.loc	2 260 15                        // standard.py:260:15 @[ gqa.py:185:82 ]
	add.f32 	%r1239, %r1207, %r1208;
	add.f32 	%r1240, %r1209, %r1210;
	add.f32 	%r1241, %r1239, %r1211;
	add.f32 	%r1242, %r1241, %r1212;
	add.f32 	%r1243, %r1240, %r1213;
	add.f32 	%r1244, %r1243, %r1214;
	add.f32 	%r1245, %r1242, %r1215;
	add.f32 	%r1246, %r1245, %r1216;
	add.f32 	%r1247, %r1244, %r1217;
	add.f32 	%r1248, %r1247, %r1218;
	add.f32 	%r1249, %r1246, %r1219;
	add.f32 	%r1250, %r1249, %r1220;
	add.f32 	%r1251, %r1248, %r1221;
	add.f32 	%r1252, %r1251, %r1222;
	add.f32 	%r1253, %r1223, %r1224;
	add.f32 	%r1254, %r1225, %r1226;
	add.f32 	%r1255, %r1253, %r1227;
	add.f32 	%r1256, %r1255, %r1228;
	add.f32 	%r1257, %r1254, %r1229;
	add.f32 	%r1258, %r1257, %r1230;
	add.f32 	%r1259, %r1256, %r1231;
	add.f32 	%r1260, %r1259, %r1232;
	add.f32 	%r1261, %r1258, %r1233;
	add.f32 	%r1262, %r1261, %r1234;
	add.f32 	%r1263, %r1260, %r1235;
	add.f32 	%r1264, %r1263, %r1236;
	add.f32 	%r1265, %r1262, %r1237;
	add.f32 	%r1266, %r1265, %r1238;
	.loc	2 290 36                        // standard.py:290:36 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1267, %r1250, 2, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ gqa.py:185:82 ]
	add.f32 	%r1268, %r1250, %r1267;
	.loc	2 290 36                        // standard.py:290:36 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1269, %r1268, 1, 31, -1;
	shfl.sync.bfly.b32 	%r1270, %r1252, 2, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ gqa.py:185:82 ]
	add.f32 	%r1271, %r1252, %r1270;
	.loc	2 290 36                        // standard.py:290:36 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1272, %r1271, 1, 31, -1;
	shfl.sync.bfly.b32 	%r1273, %r1264, 2, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ gqa.py:185:82 ]
	add.f32 	%r1274, %r1264, %r1273;
	.loc	2 290 36                        // standard.py:290:36 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1275, %r1274, 1, 31, -1;
	shfl.sync.bfly.b32 	%r1276, %r1266, 2, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ gqa.py:185:82 ]
	add.f32 	%r1277, %r1266, %r1276;
	.loc	2 290 36                        // standard.py:290:36 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1278, %r1277, 1, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ gqa.py:185:82 ]
	add.f32 	%r1279, %r1277, %r1278;
	add.f32 	%r1280, %r1274, %r1275;
	add.f32 	%r1281, %r1271, %r1272;
	add.f32 	%r1282, %r1268, %r1269;
	.loc	1 60 35                         // gqa.py:60:35 @[ gqa.py:185:82 ]
	sub.f32 	%r1283, %r1821, %r95;
	sub.f32 	%r1284, %r1820, %r94;
	sub.f32 	%r1285, %r1819, %r93;
	sub.f32 	%r1286, %r1818, %r92;
	.loc	1 60 29                         // gqa.py:60:29 @[ gqa.py:185:82 ]
	ex2.approx.ftz.f32 	%r1287, %r1286;
	ex2.approx.ftz.f32 	%r1288, %r1285;
	ex2.approx.ftz.f32 	%r1289, %r1284;
	ex2.approx.ftz.f32 	%r1290, %r1283;
	.loc	1 61 28                         // gqa.py:61:28 @[ gqa.py:185:82 ]
	fma.rn.f32 	%r1822, %r1822, %r1287, %r1282;
	fma.rn.f32 	%r1823, %r1823, %r1288, %r1281;
	fma.rn.f32 	%r1824, %r1824, %r1289, %r1280;
	fma.rn.f32 	%r1825, %r1825, %r1290, %r1279;
	.loc	1 63 20                         // gqa.py:63:20 @[ gqa.py:185:82 ]
	mul.f32 	%r1754, %r1754, %r1287;
	mul.f32 	%r1755, %r1755, %r1287;
	mul.f32 	%r1756, %r1756, %r1288;
	mul.f32 	%r1757, %r1757, %r1288;
	mul.f32 	%r1758, %r1758, %r1287;
	mul.f32 	%r1759, %r1759, %r1287;
	mul.f32 	%r1760, %r1760, %r1288;
	mul.f32 	%r1761, %r1761, %r1288;
	mul.f32 	%r1762, %r1762, %r1287;
	mul.f32 	%r1763, %r1763, %r1287;
	mul.f32 	%r1764, %r1764, %r1288;
	mul.f32 	%r1765, %r1765, %r1288;
	mul.f32 	%r1766, %r1766, %r1287;
	mul.f32 	%r1767, %r1767, %r1287;
	mul.f32 	%r1768, %r1768, %r1288;
	mul.f32 	%r1769, %r1769, %r1288;
	mul.f32 	%r1770, %r1770, %r1287;
	mul.f32 	%r1771, %r1771, %r1287;
	mul.f32 	%r1772, %r1772, %r1288;
	mul.f32 	%r1773, %r1773, %r1288;
	mul.f32 	%r1774, %r1774, %r1287;
	mul.f32 	%r1775, %r1775, %r1287;
	mul.f32 	%r1776, %r1776, %r1288;
	mul.f32 	%r1777, %r1777, %r1288;
	mul.f32 	%r1778, %r1778, %r1287;
	mul.f32 	%r1779, %r1779, %r1287;
	mul.f32 	%r1780, %r1780, %r1288;
	mul.f32 	%r1781, %r1781, %r1288;
	mul.f32 	%r1782, %r1782, %r1287;
	mul.f32 	%r1783, %r1783, %r1287;
	mul.f32 	%r1784, %r1784, %r1288;
	mul.f32 	%r1785, %r1785, %r1288;
	mul.f32 	%r1786, %r1786, %r1289;
	mul.f32 	%r1787, %r1787, %r1289;
	mul.f32 	%r1788, %r1788, %r1290;
	mul.f32 	%r1789, %r1789, %r1290;
	mul.f32 	%r1790, %r1790, %r1289;
	mul.f32 	%r1791, %r1791, %r1289;
	mul.f32 	%r1792, %r1792, %r1290;
	mul.f32 	%r1793, %r1793, %r1290;
	mul.f32 	%r1794, %r1794, %r1289;
	mul.f32 	%r1795, %r1795, %r1289;
	mul.f32 	%r1796, %r1796, %r1290;
	mul.f32 	%r1797, %r1797, %r1290;
	mul.f32 	%r1798, %r1798, %r1289;
	mul.f32 	%r1799, %r1799, %r1289;
	mul.f32 	%r1800, %r1800, %r1290;
	mul.f32 	%r1801, %r1801, %r1290;
	mul.f32 	%r1802, %r1802, %r1289;
	mul.f32 	%r1803, %r1803, %r1289;
	mul.f32 	%r1804, %r1804, %r1290;
	mul.f32 	%r1805, %r1805, %r1290;
	mul.f32 	%r1806, %r1806, %r1289;
	mul.f32 	%r1807, %r1807, %r1289;
	mul.f32 	%r1808, %r1808, %r1290;
	mul.f32 	%r1809, %r1809, %r1290;
	mul.f32 	%r1810, %r1810, %r1289;
	mul.f32 	%r1811, %r1811, %r1289;
	mul.f32 	%r1812, %r1812, %r1290;
	mul.f32 	%r1813, %r1813, %r1290;
	mul.f32 	%r1814, %r1814, %r1289;
	mul.f32 	%r1815, %r1815, %r1289;
	mul.f32 	%r1816, %r1816, %r1290;
	mul.f32 	%r1817, %r1817, %r1290;
	.loc	1 65 20                         // gqa.py:65:20 @[ gqa.py:185:82 ]
	add.s32 	%r1291, %r1096, 45056;
	.loc	1 69 21                         // gqa.py:69:21 @[ gqa.py:185:82 ]
	cvt.rn.f16x2.f32 	%r882, %r1208, %r1207;
	cvt.rn.f16x2.f32 	%r883, %r1210, %r1209;
	cvt.rn.f16x2.f32 	%r884, %r1212, %r1211;
	cvt.rn.f16x2.f32 	%r885, %r1214, %r1213;
	cvt.rn.f16x2.f32 	%r950, %r1216, %r1215;
	cvt.rn.f16x2.f32 	%r951, %r1218, %r1217;
	cvt.rn.f16x2.f32 	%r952, %r1220, %r1219;
	cvt.rn.f16x2.f32 	%r953, %r1222, %r1221;
	cvt.rn.f16x2.f32 	%r1018, %r1224, %r1223;
	cvt.rn.f16x2.f32 	%r1019, %r1226, %r1225;
	cvt.rn.f16x2.f32 	%r1020, %r1228, %r1227;
	cvt.rn.f16x2.f32 	%r1021, %r1230, %r1229;
	cvt.rn.f16x2.f32 	%r1086, %r1232, %r1231;
	cvt.rn.f16x2.f32 	%r1087, %r1234, %r1233;
	cvt.rn.f16x2.f32 	%r1088, %r1236, %r1235;
	cvt.rn.f16x2.f32 	%r1089, %r1238, %r1237;
	.loc	1 70 27                         // gqa.py:70:27 @[ gqa.py:185:82 ]
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	bfe.u32 	%r1292, %r1291, 4, 14;
	cvt.u64.u32 	%rd138, %r1292;
	or.b64 	%rd120, %rd138, 4611686293322072064;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.f16.f16 {%r1754,%r1755,%r1756,%r1757,%r1758,%r1759,%r1760,%r1761,%r1762,%r1763,%r1764,%r1765,%r1766,%r1767,%r1768,%r1769,%r1770,%r1771,%r1772,%r1773,%r1774,%r1775,%r1776,%r1777,%r1778,%r1779,%r1780,%r1781,%r1782,%r1783,%r1784,%r1785}, {%r882,%r883,%r884,%r885}, %rd120, %p1, 1, 1, 1;
	// end inline asm
	add.s32 	%r1293, %r1096, 47104;
	bfe.u32 	%r1294, %r1293, 4, 14;
	cvt.u64.u32 	%rd139, %r1294;
	or.b64 	%rd121, %rd139, 4611686293322072064;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.f16.f16 {%r1754,%r1755,%r1756,%r1757,%r1758,%r1759,%r1760,%r1761,%r1762,%r1763,%r1764,%r1765,%r1766,%r1767,%r1768,%r1769,%r1770,%r1771,%r1772,%r1773,%r1774,%r1775,%r1776,%r1777,%r1778,%r1779,%r1780,%r1781,%r1782,%r1783,%r1784,%r1785}, {%r950,%r951,%r952,%r953}, %rd121, %p1, 1, 1, 1;
	// end inline asm
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.f16.f16 {%r1786,%r1787,%r1788,%r1789,%r1790,%r1791,%r1792,%r1793,%r1794,%r1795,%r1796,%r1797,%r1798,%r1799,%r1800,%r1801,%r1802,%r1803,%r1804,%r1805,%r1806,%r1807,%r1808,%r1809,%r1810,%r1811,%r1812,%r1813,%r1814,%r1815,%r1816,%r1817}, {%r1018,%r1019,%r1020,%r1021}, %rd120, %p1, 1, 1, 1;
	// end inline asm
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.f16.f16 {%r1786,%r1787,%r1788,%r1789,%r1790,%r1791,%r1792,%r1793,%r1794,%r1795,%r1796,%r1797,%r1798,%r1799,%r1800,%r1801,%r1802,%r1803,%r1804,%r1805,%r1806,%r1807,%r1808,%r1809,%r1810,%r1811,%r1812,%r1813,%r1814,%r1815,%r1816,%r1817}, {%r1086,%r1087,%r1088,%r1089}, %rd121, %p1, 1, 1, 1;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	.loc	1 44 33                         // gqa.py:44:33 @[ gqa.py:185:82 ]
	add.s32 	%r1295, %r1753, 1;
	setp.gt.s32 	%p13, %r1295, 2;
	selp.b32 	%r1753, 0, %r1295, %p13;
	.loc	1 47 20                         // gqa.py:47:20 @[ gqa.py:185:82 ]
	bar.sync 	0;
	shl.b32 	%r1296, %r1753, 12;
	add.s32 	%r1090, %r286, %r1296;
	selp.b32 	%r1091, 16, 0, %p11;
	// begin inline asm
	cp.async.cg.shared.global [ %r1090 + 0 ], [ %rd180 + 0 ], 0x10, %r1091;
	// end inline asm
	cp.async.commit_group;
	.loc	1 65 20                         // gqa.py:65:20 @[ gqa.py:185:82 ]
	add.s32 	%r1092, %r288, %r1296;
	// begin inline asm
	cp.async.cg.shared.global [ %r1092 + 0 ], [ %rd181 + 0 ], 0x10, %r1091;
	// end inline asm
	cp.async.commit_group;
	.loc	1 44 33                         // gqa.py:44:33 @[ gqa.py:185:82 ]
	add.s64 	%rd181, %rd181, %rd12;
	add.s64 	%rd180, %rd180, %rd14;
	setp.lt.u32 	%p14, %r1751, 4064;
	mov.b32 	%r1818, %r92;
	mov.b32 	%r1819, %r93;
	mov.b32 	%r1820, %r94;
	mov.b32 	%r1821, %r95;
	@%p14 bra 	$L__BB0_1;
// %bb.2:
	// begin inline asm
	// wait for regs: %r1754,%r1755,%r1756,%r1757,%r1758,%r1759,%r1760,%r1761,%r1762,%r1763,%r1764,%r1765,%r1766,%r1767,%r1768,%r1769,%r1770,%r1771,%r1772,%r1773,%r1774,%r1775,%r1776,%r1777,%r1778,%r1779,%r1780,%r1781,%r1782,%r1783,%r1784,%r1785,%r1786,%r1787,%r1788,%r1789,%r1790,%r1791,%r1792,%r1793,%r1794,%r1795,%r1796,%r1797,%r1798,%r1799,%r1800,%r1801,%r1802,%r1803,%r1804,%r1805,%r1806,%r1807,%r1808,%r1809,%r1810,%r1811,%r1812,%r1813,%r1814,%r1815,%r1816,%r1817
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	cp.async.wait_group 	0;
	bar.sync 	0;
$L__tmp2:
	.loc	1 198 24                        // gqa.py:198:24
	setp.lt.f32 	%p15, %r1822, 0f00800000;
	mul.f32 	%r1425, %r1822, 0f4B000000;
	selp.f32 	%r234, %r1425, %r1822, %p15;
	selp.f32 	%r1426, 0fC1B80000, 0f00000000, %p15;
	add.s32 	%r1427, %r234, -1060439283;
	and.b32 	%r1428, %r1427, -8388608;
	sub.s32 	%r1429, %r234, %r1428;
	cvt.rn.f32.s32 	%r1430, %r1428;
	mov.b32 	%r1431, 0f34000000;
	fma.rn.ftz.f32 	%r1432, %r1430, %r1431, %r1426;
	add.f32 	%r1433, %r1429, 0fBF800000;
	mov.b32 	%r1434, 0fBE2C7F30;
	mov.b32 	%r1435, 0f3DC6B27F;
	fma.rn.ftz.f32 	%r1436, %r1435, %r1433, %r1434;
	mov.b32 	%r1437, 0f3E2FCF2A;
	fma.rn.ftz.f32 	%r1438, %r1436, %r1433, %r1437;
	mov.b32 	%r1439, 0fBE374E43;
	fma.rn.ftz.f32 	%r1440, %r1438, %r1433, %r1439;
	mov.b32 	%r1441, 0f3E520BF4;
	fma.rn.ftz.f32 	%r1442, %r1440, %r1433, %r1441;
	mov.b32 	%r1443, 0fBE763C8B;
	fma.rn.ftz.f32 	%r1444, %r1442, %r1433, %r1443;
	mov.b32 	%r1445, 0f3E93BF99;
	fma.rn.ftz.f32 	%r1446, %r1444, %r1433, %r1445;
	mov.b32 	%r1447, 0fBEB8AA49;
	fma.rn.ftz.f32 	%r1448, %r1446, %r1433, %r1447;
	mov.b32 	%r1449, 0f3EF6384A;
	fma.rn.ftz.f32 	%r1450, %r1448, %r1433, %r1449;
	mov.b32 	%r1451, 0fBF38AA3B;
	fma.rn.ftz.f32 	%r1452, %r1450, %r1433, %r1451;
	mul.f32 	%r1453, %r1433, %r1452;
	mul.f32 	%r1454, %r1433, %r1453;
	mov.b32 	%r1455, 0f3FB8AA3B;
	fma.rn.ftz.f32 	%r1456, %r1433, %r1455, %r1454;
	add.f32 	%r1826, %r1432, %r1456;
	setp.lt.u32 	%p16, %r234, 2139095040;
	mov.b32 	%r1457, 0f7F800000;
	@%p16 bra 	$L__BB0_4;
// %bb.3:                               // %__nv_fmaf_rn.exit.i.i
	.loc	1 0 24                          // gqa.py:0:24
	fma.rn.ftz.f32 	%r1826, %r234, %r1457, %r1457;
$L__BB0_4:                              // %__nv_log2f.exit
	.loc	1 198 24                        // gqa.py:198:24
	setp.lt.f32 	%p17, %r1823, 0f00800000;
	mul.f32 	%r1458, %r1823, 0f4B000000;
	selp.f32 	%r239, %r1458, %r1823, %p17;
	selp.f32 	%r1459, 0fC1B80000, 0f00000000, %p17;
	add.s32 	%r1460, %r239, -1060439283;
	and.b32 	%r1461, %r1460, -8388608;
	sub.s32 	%r1462, %r239, %r1461;
	cvt.rn.f32.s32 	%r1463, %r1461;
	fma.rn.ftz.f32 	%r1465, %r1463, %r1431, %r1459;
	add.f32 	%r1466, %r1462, 0fBF800000;
	fma.rn.ftz.f32 	%r1469, %r1435, %r1466, %r1434;
	fma.rn.ftz.f32 	%r1471, %r1469, %r1466, %r1437;
	fma.rn.ftz.f32 	%r1473, %r1471, %r1466, %r1439;
	fma.rn.ftz.f32 	%r1475, %r1473, %r1466, %r1441;
	fma.rn.ftz.f32 	%r1477, %r1475, %r1466, %r1443;
	fma.rn.ftz.f32 	%r1479, %r1477, %r1466, %r1445;
	fma.rn.ftz.f32 	%r1481, %r1479, %r1466, %r1447;
	fma.rn.ftz.f32 	%r1483, %r1481, %r1466, %r1449;
	fma.rn.ftz.f32 	%r1485, %r1483, %r1466, %r1451;
	mul.f32 	%r1486, %r1466, %r1485;
	mul.f32 	%r1487, %r1466, %r1486;
	fma.rn.ftz.f32 	%r1489, %r1466, %r1455, %r1487;
	add.f32 	%r1827, %r1465, %r1489;
	setp.lt.u32 	%p18, %r239, 2139095040;
	@%p18 bra 	$L__BB0_6;
// %bb.5:                               // %__nv_fmaf_rn.exit.i.i232
	.loc	1 0 24                          // gqa.py:0:24
	fma.rn.ftz.f32 	%r1827, %r239, %r1457, %r1457;
$L__BB0_6:                              // %__nv_log2f.exit235
	.loc	1 198 24                        // gqa.py:198:24
	setp.lt.f32 	%p19, %r1824, 0f00800000;
	mul.f32 	%r1491, %r1824, 0f4B000000;
	selp.f32 	%r244, %r1491, %r1824, %p19;
	selp.f32 	%r1492, 0fC1B80000, 0f00000000, %p19;
	add.s32 	%r1493, %r244, -1060439283;
	and.b32 	%r1494, %r1493, -8388608;
	sub.s32 	%r1495, %r244, %r1494;
	cvt.rn.f32.s32 	%r1496, %r1494;
	mov.b32 	%r1497, 0f34000000;
	fma.rn.ftz.f32 	%r1498, %r1496, %r1497, %r1492;
	add.f32 	%r1499, %r1495, 0fBF800000;
	mov.b32 	%r1500, 0fBE2C7F30;
	mov.b32 	%r1501, 0f3DC6B27F;
	fma.rn.ftz.f32 	%r1502, %r1501, %r1499, %r1500;
	mov.b32 	%r1503, 0f3E2FCF2A;
	fma.rn.ftz.f32 	%r1504, %r1502, %r1499, %r1503;
	mov.b32 	%r1505, 0fBE374E43;
	fma.rn.ftz.f32 	%r1506, %r1504, %r1499, %r1505;
	mov.b32 	%r1507, 0f3E520BF4;
	fma.rn.ftz.f32 	%r1508, %r1506, %r1499, %r1507;
	mov.b32 	%r1509, 0fBE763C8B;
	fma.rn.ftz.f32 	%r1510, %r1508, %r1499, %r1509;
	mov.b32 	%r1511, 0f3E93BF99;
	fma.rn.ftz.f32 	%r1512, %r1510, %r1499, %r1511;
	mov.b32 	%r1513, 0fBEB8AA49;
	fma.rn.ftz.f32 	%r1514, %r1512, %r1499, %r1513;
	mov.b32 	%r1515, 0f3EF6384A;
	fma.rn.ftz.f32 	%r1516, %r1514, %r1499, %r1515;
	mov.b32 	%r1517, 0fBF38AA3B;
	fma.rn.ftz.f32 	%r1518, %r1516, %r1499, %r1517;
	mul.f32 	%r1519, %r1499, %r1518;
	mul.f32 	%r1520, %r1499, %r1519;
	mov.b32 	%r1521, 0f3FB8AA3B;
	fma.rn.ftz.f32 	%r1522, %r1499, %r1521, %r1520;
	add.f32 	%r1828, %r1498, %r1522;
	setp.lt.u32 	%p20, %r244, 2139095040;
	mov.b32 	%r1523, 0f7F800000;
	@%p20 bra 	$L__BB0_8;
// %bb.7:                               // %__nv_fmaf_rn.exit.i.i262
	.loc	1 0 24                          // gqa.py:0:24
	fma.rn.ftz.f32 	%r1828, %r244, %r1523, %r1523;
$L__BB0_8:                              // %__nv_log2f.exit265
	.loc	1 198 24                        // gqa.py:198:24
	setp.lt.f32 	%p21, %r1825, 0f00800000;
	mul.f32 	%r1524, %r1825, 0f4B000000;
	selp.f32 	%r249, %r1524, %r1825, %p21;
	selp.f32 	%r1525, 0fC1B80000, 0f00000000, %p21;
	add.s32 	%r1526, %r249, -1060439283;
	and.b32 	%r1527, %r1526, -8388608;
	sub.s32 	%r1528, %r249, %r1527;
	cvt.rn.f32.s32 	%r1529, %r1527;
	fma.rn.ftz.f32 	%r1531, %r1529, %r1497, %r1525;
	add.f32 	%r1532, %r1528, 0fBF800000;
	fma.rn.ftz.f32 	%r1535, %r1501, %r1532, %r1500;
	fma.rn.ftz.f32 	%r1537, %r1535, %r1532, %r1503;
	fma.rn.ftz.f32 	%r1539, %r1537, %r1532, %r1505;
	fma.rn.ftz.f32 	%r1541, %r1539, %r1532, %r1507;
	fma.rn.ftz.f32 	%r1543, %r1541, %r1532, %r1509;
	fma.rn.ftz.f32 	%r1545, %r1543, %r1532, %r1511;
	fma.rn.ftz.f32 	%r1547, %r1545, %r1532, %r1513;
	fma.rn.ftz.f32 	%r1549, %r1547, %r1532, %r1515;
	fma.rn.ftz.f32 	%r1551, %r1549, %r1532, %r1517;
	mul.f32 	%r1552, %r1532, %r1551;
	mul.f32 	%r1553, %r1532, %r1552;
	fma.rn.ftz.f32 	%r1555, %r1532, %r1521, %r1553;
	add.f32 	%r1829, %r1531, %r1555;
	setp.lt.u32 	%p22, %r249, 2139095040;
	@%p22 bra 	$L__BB0_10;
// %bb.9:                               // %__nv_fmaf_rn.exit.i.i292
	.loc	1 0 24                          // gqa.py:0:24
	fma.rn.ftz.f32 	%r1829, %r249, %r1523, %r1523;
$L__BB0_10:                             // %__nv_log2f.exit295
	.loc	1 198 24                        // gqa.py:198:24
	setp.eq.f32 	%p23, %r244, 0f00000000;
	selp.f32 	%r1590, 0fFF800000, %r1828, %p23;
	setp.eq.f32 	%p24, %r239, 0f00000000;
	selp.f32 	%r1591, 0fFF800000, %r1827, %p24;
	setp.eq.f32 	%p25, %r234, 0f00000000;
	selp.f32 	%r1592, 0fFF800000, %r1826, %p25;
	.loc	1 159 19                        // gqa.py:159:19
	add.s64 	%rd150, %rd20, %rd40;
	.loc	1 164 8                         // gqa.py:164:8
	cvt.s64.s32 	%rd151, %r253;
	.loc	1 167 46                        // gqa.py:167:46
	and.b32 	%r1593, %r3, 255;
	.loc	1 167 33                        // gqa.py:167:33
	or.b32 	%r1594, %r2, %r1593;
	.loc	1 198 24                        // gqa.py:198:24
	setp.eq.f32 	%p26, %r249, 0f00000000;
	selp.f32 	%r1595, 0fFF800000, %r1829, %p26;
	.loc	1 198 11                        // gqa.py:198:11
	add.f32 	%r1596, %r92, %r1592;
	add.f32 	%r1597, %r93, %r1591;
	add.f32 	%r1598, %r94, %r1590;
	add.f32 	%r1599, %r95, %r1595;
	.loc	1 199 16                        // gqa.py:199:16
	div.full.f32 	%r1600, %r1754, %r1822;
	div.full.f32 	%r1601, %r1755, %r1822;
	div.full.f32 	%r1602, %r1756, %r1823;
	div.full.f32 	%r1603, %r1757, %r1823;
	div.full.f32 	%r1604, %r1758, %r1822;
	div.full.f32 	%r1605, %r1759, %r1822;
	div.full.f32 	%r1606, %r1760, %r1823;
	div.full.f32 	%r1607, %r1761, %r1823;
	div.full.f32 	%r1608, %r1762, %r1822;
	div.full.f32 	%r1609, %r1763, %r1822;
	div.full.f32 	%r1610, %r1764, %r1823;
	div.full.f32 	%r1611, %r1765, %r1823;
	div.full.f32 	%r1612, %r1766, %r1822;
	div.full.f32 	%r1613, %r1767, %r1822;
	div.full.f32 	%r1614, %r1768, %r1823;
	div.full.f32 	%r1615, %r1769, %r1823;
	div.full.f32 	%r1616, %r1770, %r1822;
	div.full.f32 	%r1617, %r1771, %r1822;
	div.full.f32 	%r1618, %r1772, %r1823;
	div.full.f32 	%r1619, %r1773, %r1823;
	div.full.f32 	%r1620, %r1774, %r1822;
	div.full.f32 	%r1621, %r1775, %r1822;
	div.full.f32 	%r1622, %r1776, %r1823;
	div.full.f32 	%r1623, %r1777, %r1823;
	div.full.f32 	%r1624, %r1778, %r1822;
	div.full.f32 	%r1625, %r1779, %r1822;
	div.full.f32 	%r1626, %r1780, %r1823;
	div.full.f32 	%r1627, %r1781, %r1823;
	div.full.f32 	%r1628, %r1782, %r1822;
	div.full.f32 	%r1629, %r1783, %r1822;
	div.full.f32 	%r1630, %r1784, %r1823;
	div.full.f32 	%r1631, %r1785, %r1823;
	div.full.f32 	%r1632, %r1786, %r1824;
	div.full.f32 	%r1633, %r1787, %r1824;
	div.full.f32 	%r1634, %r1788, %r1825;
	div.full.f32 	%r1635, %r1789, %r1825;
	div.full.f32 	%r1636, %r1790, %r1824;
	div.full.f32 	%r1637, %r1791, %r1824;
	div.full.f32 	%r1638, %r1792, %r1825;
	div.full.f32 	%r1639, %r1793, %r1825;
	div.full.f32 	%r1640, %r1794, %r1824;
	div.full.f32 	%r1641, %r1795, %r1824;
	div.full.f32 	%r1642, %r1796, %r1825;
	div.full.f32 	%r1643, %r1797, %r1825;
	div.full.f32 	%r1644, %r1798, %r1824;
	div.full.f32 	%r1645, %r1799, %r1824;
	div.full.f32 	%r1646, %r1800, %r1825;
	div.full.f32 	%r1647, %r1801, %r1825;
	div.full.f32 	%r1648, %r1802, %r1824;
	div.full.f32 	%r1649, %r1803, %r1824;
	div.full.f32 	%r1650, %r1804, %r1825;
	div.full.f32 	%r1651, %r1805, %r1825;
	div.full.f32 	%r1652, %r1806, %r1824;
	div.full.f32 	%r1653, %r1807, %r1824;
	div.full.f32 	%r1654, %r1808, %r1825;
	div.full.f32 	%r1655, %r1809, %r1825;
	div.full.f32 	%r1656, %r1810, %r1824;
	div.full.f32 	%r1657, %r1811, %r1824;
	div.full.f32 	%r1658, %r1812, %r1825;
	div.full.f32 	%r1659, %r1813, %r1825;
	div.full.f32 	%r1660, %r1814, %r1824;
	div.full.f32 	%r1661, %r1815, %r1824;
	div.full.f32 	%r1662, %r1816, %r1825;
	div.full.f32 	%r1663, %r1817, %r1825;
	.loc	1 200 26                        // gqa.py:200:26
	shl.b32 	%r1664, %r1, 5;
	.loc	1 200 17                        // gqa.py:200:17
	mul.wide.u32 	%rd152, %r1664, 4;
	add.s64 	%rd153, %rd19, %rd152;
	.loc	1 200 34                        // gqa.py:200:34
	mul.wide.s32 	%rd154, %r1594, 4;
	add.s64 	%rd140, %rd153, %rd154;
	.loc	1 201 21                        // gqa.py:201:21
	shl.b32 	%r1665, %r3, 1;
	and.b32 	%r1666, %r1665, 192;
	add.s32 	%r1668, %r336, %r1666;
	and.b32 	%r1669, %r3, 28;
	add.s32 	%r1670, %r1668, %r1669;
	shl.b32 	%r1671, %r5, 1;
	add.s32 	%r1672, %r1670, %r1671;
	st.shared.b32 	[%r1672], %r1596;
	st.shared.b32 	[%r1672+32], %r1597;
	st.shared.b32 	[%r1672+512], %r1598;
	st.shared.b32 	[%r1672+544], %r1599;
	bar.sync 	0;
	shl.b32 	%r1673, %r1593, 2;
	add.s32 	%r1674, %r336, %r1673;
	ld.shared.b32 	%r1557, [%r1674];
	// begin inline asm
	st.global.b32 [ %rd140 + 0 ], { %r1557 };
	// end inline asm
	.loc	1 202 33                        // gqa.py:202:33
	cvt.rn.f16x2.f32 	%r1675, %r1601, %r1600;
	cvt.rn.f16x2.f32 	%r1676, %r1603, %r1602;
	cvt.rn.f16x2.f32 	%r1677, %r1605, %r1604;
	cvt.rn.f16x2.f32 	%r1678, %r1607, %r1606;
	cvt.rn.f16x2.f32 	%r1679, %r1609, %r1608;
	cvt.rn.f16x2.f32 	%r1680, %r1611, %r1610;
	cvt.rn.f16x2.f32 	%r1681, %r1613, %r1612;
	cvt.rn.f16x2.f32 	%r1682, %r1615, %r1614;
	cvt.rn.f16x2.f32 	%r1683, %r1617, %r1616;
	cvt.rn.f16x2.f32 	%r1684, %r1619, %r1618;
	cvt.rn.f16x2.f32 	%r1685, %r1621, %r1620;
	cvt.rn.f16x2.f32 	%r1686, %r1623, %r1622;
	cvt.rn.f16x2.f32 	%r1687, %r1625, %r1624;
	cvt.rn.f16x2.f32 	%r1688, %r1627, %r1626;
	cvt.rn.f16x2.f32 	%r1689, %r1629, %r1628;
	cvt.rn.f16x2.f32 	%r1690, %r1631, %r1630;
	cvt.rn.f16x2.f32 	%r1691, %r1633, %r1632;
	cvt.rn.f16x2.f32 	%r1692, %r1635, %r1634;
	cvt.rn.f16x2.f32 	%r1693, %r1637, %r1636;
	cvt.rn.f16x2.f32 	%r1694, %r1639, %r1638;
	cvt.rn.f16x2.f32 	%r1695, %r1641, %r1640;
	cvt.rn.f16x2.f32 	%r1696, %r1643, %r1642;
	cvt.rn.f16x2.f32 	%r1697, %r1645, %r1644;
	cvt.rn.f16x2.f32 	%r1698, %r1647, %r1646;
	cvt.rn.f16x2.f32 	%r1699, %r1649, %r1648;
	cvt.rn.f16x2.f32 	%r1700, %r1651, %r1650;
	cvt.rn.f16x2.f32 	%r1701, %r1653, %r1652;
	cvt.rn.f16x2.f32 	%r1702, %r1655, %r1654;
	cvt.rn.f16x2.f32 	%r1703, %r1657, %r1656;
	cvt.rn.f16x2.f32 	%r1704, %r1659, %r1658;
	cvt.rn.f16x2.f32 	%r1705, %r1661, %r1660;
	cvt.rn.f16x2.f32 	%r1706, %r1663, %r1662;
	.loc	1 202 26                        // gqa.py:202:26
	mul.lo.s64 	%rd155, %rd2, %rd151;
	mul.lo.s64 	%rd156, %rd3, %rd151;
	mul.lo.s64 	%rd157, %rd4, %rd151;
	mul.lo.s64 	%rd158, %rd5, %rd151;
	mul.lo.s64 	%rd159, %rd6, %rd151;
	mul.lo.s64 	%rd160, %rd7, %rd151;
	mul.lo.s64 	%rd161, %rd8, %rd151;
	mul.lo.s64 	%rd162, %rd9, %rd151;
	shl.b64 	%rd163, %rd155, 1;
	add.s64 	%rd164, %rd150, %rd163;
	shl.b64 	%rd165, %rd10, 1;
	add.s64 	%rd141, %rd164, %rd165;
	shl.b64 	%rd166, %rd156, 1;
	add.s64 	%rd167, %rd150, %rd166;
	add.s64 	%rd142, %rd167, %rd165;
	shl.b64 	%rd168, %rd157, 1;
	add.s64 	%rd169, %rd150, %rd168;
	add.s64 	%rd143, %rd169, %rd165;
	shl.b64 	%rd170, %rd158, 1;
	add.s64 	%rd171, %rd150, %rd170;
	add.s64 	%rd144, %rd171, %rd165;
	shl.b64 	%rd172, %rd159, 1;
	add.s64 	%rd173, %rd150, %rd172;
	add.s64 	%rd145, %rd173, %rd165;
	shl.b64 	%rd174, %rd160, 1;
	add.s64 	%rd175, %rd150, %rd174;
	add.s64 	%rd146, %rd175, %rd165;
	shl.b64 	%rd176, %rd161, 1;
	add.s64 	%rd177, %rd150, %rd176;
	add.s64 	%rd147, %rd177, %rd165;
	shl.b64 	%rd178, %rd162, 1;
	add.s64 	%rd179, %rd150, %rd178;
	add.s64 	%rd148, %rd179, %rd165;
	bar.sync 	0;
	and.b32 	%r1707, %r1665, 6;
	shl.b32 	%r1708, %r3, 4;
	and.b32 	%r1709, %r1708, 448;
	or.b32 	%r1710, %r1709, %r1707;
	shl.b32 	%r1711, %r3, 5;
	and.b32 	%r1712, %r1711, 3072;
	or.b32 	%r1713, %r1710, %r1712;
	shl.b32 	%r1714, %r5, 5;
	or.b32 	%r1715, %r1713, %r1714;
	and.b32 	%r1716, %r7, 1016;
	or.b32 	%r1717, %r1716, %r8;
	shr.u32 	%r1718, %r1715, 2;
	and.b32 	%r1719, %r1718, 2040;
	add.s32 	%r1720, %r336, %r1719;
	shl.b32 	%r1721, %r1715, 1;
	add.s32 	%r1722, %r1720, %r1721;
	st.shared.b32 	[%r1722], %r1675;
	or.b32 	%r1723, %r1715, 512;
	shr.u32 	%r1724, %r1723, 2;
	and.b32 	%r1725, %r1724, 2040;
	add.s32 	%r1726, %r336, %r1725;
	add.s32 	%r1727, %r1726, %r1721;
	st.shared.b32 	[%r1727+1024], %r1676;
	st.shared.b32 	[%r1722+16], %r1677;
	and.b32 	%r1728, %r1724, 2032;
	add.s32 	%r1729, %r336, %r1728;
	add.s32 	%r1730, %r1729, %r1721;
	st.shared.b32 	[%r1730+1040], %r1678;
	st.shared.b32 	[%r1722+32], %r1679;
	st.shared.b32 	[%r1730+1056], %r1680;
	st.shared.b32 	[%r1722+48], %r1681;
	st.shared.b32 	[%r1730+1072], %r1682;
	st.shared.b32 	[%r1722+64], %r1683;
	st.shared.b32 	[%r1730+1088], %r1684;
	st.shared.b32 	[%r1722+80], %r1685;
	st.shared.b32 	[%r1730+1104], %r1686;
	st.shared.b32 	[%r1722+96], %r1687;
	st.shared.b32 	[%r1730+1120], %r1688;
	st.shared.b32 	[%r1722+112], %r1689;
	st.shared.b32 	[%r1730+1136], %r1690;
	bar.sync 	0;
	shr.u32 	%r1731, %r1717, 2;
	and.b32 	%r1732, %r1731, 496;
	add.s32 	%r1733, %r336, %r1732;
	shl.b32 	%r1734, %r1717, 1;
	add.s32 	%r1735, %r1733, %r1734;
	ld.shared.v4.b32 	{%r1558, %r1559, %r1560, %r1561}, [%r1735];
	or.b32 	%r1736, %r1717, 2048;
	shr.u32 	%r1737, %r1736, 2;
	and.b32 	%r1738, %r1737, 1008;
	add.s32 	%r1739, %r336, %r1738;
	add.s32 	%r1740, %r1739, %r1734;
	ld.shared.v4.b32 	{%r1562, %r1563, %r1564, %r1565}, [%r1740+4096];
	or.b32 	%r1741, %r1717, 4096;
	shr.u32 	%r1742, %r1741, 2;
	and.b32 	%r1743, %r1742, 1520;
	add.s32 	%r1744, %r336, %r1743;
	add.s32 	%r1745, %r1744, %r1734;
	ld.shared.v4.b32 	{%r1566, %r1567, %r1568, %r1569}, [%r1745+8192];
	or.b32 	%r1746, %r1717, 6144;
	shr.u32 	%r1747, %r1746, 2;
	and.b32 	%r1748, %r1747, 2032;
	add.s32 	%r1749, %r336, %r1748;
	add.s32 	%r1750, %r1749, %r1734;
	ld.shared.v4.b32 	{%r1570, %r1571, %r1572, %r1573}, [%r1750+12288];
	bar.sync 	0;
	st.shared.b32 	[%r1722], %r1691;
	st.shared.b32 	[%r1727+1024], %r1692;
	st.shared.b32 	[%r1722+16], %r1693;
	st.shared.b32 	[%r1730+1040], %r1694;
	st.shared.b32 	[%r1722+32], %r1695;
	st.shared.b32 	[%r1730+1056], %r1696;
	st.shared.b32 	[%r1722+48], %r1697;
	st.shared.b32 	[%r1730+1072], %r1698;
	st.shared.b32 	[%r1722+64], %r1699;
	st.shared.b32 	[%r1730+1088], %r1700;
	st.shared.b32 	[%r1722+80], %r1701;
	st.shared.b32 	[%r1730+1104], %r1702;
	st.shared.b32 	[%r1722+96], %r1703;
	st.shared.b32 	[%r1730+1120], %r1704;
	st.shared.b32 	[%r1722+112], %r1705;
	st.shared.b32 	[%r1730+1136], %r1706;
	bar.sync 	0;
	ld.shared.v4.b32 	{%r1574, %r1575, %r1576, %r1577}, [%r1735];
	ld.shared.v4.b32 	{%r1578, %r1579, %r1580, %r1581}, [%r1740+4096];
	ld.shared.v4.b32 	{%r1582, %r1583, %r1584, %r1585}, [%r1745+8192];
	ld.shared.v4.b32 	{%r1586, %r1587, %r1588, %r1589}, [%r1750+12288];
	// begin inline asm
	st.global.v4.b32 [ %rd141 + 0 ], { %r1558, %r1559, %r1560, %r1561 };
	// end inline asm
	// begin inline asm
	st.global.v4.b32 [ %rd142 + 0 ], { %r1562, %r1563, %r1564, %r1565 };
	// end inline asm
	// begin inline asm
	st.global.v4.b32 [ %rd143 + 0 ], { %r1566, %r1567, %r1568, %r1569 };
	// end inline asm
	// begin inline asm
	st.global.v4.b32 [ %rd144 + 0 ], { %r1570, %r1571, %r1572, %r1573 };
	// end inline asm
	// begin inline asm
	st.global.v4.b32 [ %rd145 + 0 ], { %r1574, %r1575, %r1576, %r1577 };
	// end inline asm
	// begin inline asm
	st.global.v4.b32 [ %rd146 + 0 ], { %r1578, %r1579, %r1580, %r1581 };
	// end inline asm
	// begin inline asm
	st.global.v4.b32 [ %rd147 + 0 ], { %r1582, %r1583, %r1584, %r1585 };
	// end inline asm
	// begin inline asm
	st.global.v4.b32 [ %rd148 + 0 ], { %r1586, %r1587, %r1588, %r1589 };
	// end inline asm
	.loc	1 202 4                         // gqa.py:202:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/ubuntu/PTX_dataset/triton_ptx/gqa.py"
	.file	2 "/home/joy/miniconda3/envs/ptx/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 123                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x74 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 103                                 // DW_AT_name
.b8 113
.b8 97
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 117
.b8 98
.b8 117
.b8 110
.b8 116
.b8 117
.b8 47
.b8 80
.b8 84
.b8 88
.b8 95
.b8 100
.b8 97
.b8 116
.b8 97
.b8 115
.b8 101
.b8 116
.b8 47
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 116
.b8 120
.b8 0
.b8 2                                   // Abbrev [2] 0x44:0xc DW_TAG_subprogram
.b8 95                                  // DW_AT_name
.b8 97
.b8 116
.b8 116
.b8 110
.b8 95
.b8 102
.b8 119
.b8 100
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x50:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 68                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x65:0x18 DW_TAG_inlined_subroutine
.b32 68                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 185                                 // DW_AT_call_line
.b8 82                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
