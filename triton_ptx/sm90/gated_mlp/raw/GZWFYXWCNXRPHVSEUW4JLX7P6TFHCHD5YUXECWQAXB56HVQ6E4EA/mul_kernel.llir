; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-p7:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define ptx_kernel void @mul_kernel(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, i32 %3, ptr addrspace(1) readnone captures(none) %4) local_unnamed_addr #0 !dbg !5 {
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !8
  %7 = shl i32 %6, 10, !dbg !9
  %8 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !10
  %9 = shl nuw nsw i32 %8, 3, !dbg !10
  %10 = and i32 %9, 1016, !dbg !10
  %11 = or disjoint i32 %10, %7, !dbg !11
  %12 = icmp slt i32 %11, %3, !dbg !12
  %13 = sext i32 %11 to i64, !dbg !13
  %14 = getelementptr half, ptr addrspace(1) %0, i64 %13, !dbg !13
  %15 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %14, i1 %12) #2, !dbg !14
  %16 = extractvalue { i32, i32, i32, i32 } %15, 0, !dbg !14
  %17 = bitcast i32 %16 to <2 x half>, !dbg !14
  %18 = extractvalue { i32, i32, i32, i32 } %15, 1, !dbg !14
  %19 = bitcast i32 %18 to <2 x half>, !dbg !14
  %20 = extractvalue { i32, i32, i32, i32 } %15, 2, !dbg !14
  %21 = bitcast i32 %20 to <2 x half>, !dbg !14
  %22 = extractvalue { i32, i32, i32, i32 } %15, 3, !dbg !14
  %23 = bitcast i32 %22 to <2 x half>, !dbg !14
  %24 = getelementptr half, ptr addrspace(1) %1, i64 %13, !dbg !15
  %25 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %24, i1 %12) #2, !dbg !16
  %26 = extractvalue { i32, i32, i32, i32 } %25, 0, !dbg !16
  %27 = bitcast i32 %26 to <2 x half>, !dbg !16
  %28 = extractvalue { i32, i32, i32, i32 } %25, 1, !dbg !16
  %29 = bitcast i32 %28 to <2 x half>, !dbg !16
  %30 = extractvalue { i32, i32, i32, i32 } %25, 2, !dbg !16
  %31 = bitcast i32 %30 to <2 x half>, !dbg !16
  %32 = extractvalue { i32, i32, i32, i32 } %25, 3, !dbg !16
  %33 = bitcast i32 %32 to <2 x half>, !dbg !16
  %34 = fmul <2 x half> %17, %27, !dbg !17
  %35 = fmul <2 x half> %19, %29, !dbg !17
  %36 = fmul <2 x half> %21, %31, !dbg !17
  %37 = fmul <2 x half> %23, %33, !dbg !17
  %38 = getelementptr half, ptr addrspace(1) %2, i64 %13, !dbg !18
  %39 = bitcast <2 x half> %34 to i32, !dbg !19
  %40 = bitcast <2 x half> %35 to i32, !dbg !19
  %41 = bitcast <2 x half> %36 to i32, !dbg !19
  %42 = bitcast <2 x half> %37 to i32, !dbg !19
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %39, i32 %40, i32 %41, i32 %42, ptr addrspace(1) %38, i1 %12) #2, !dbg !19
  ret void, !dbg !20
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 2147483647) i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 1024) i32 @llvm.nvvm.read.ptx.sreg.tid.x() #1

attributes #0 = { "nvvm.reqntid"="128" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3}
!llvm.ident = !{!4}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "gated_mlp.py", directory: "/home/ubuntu/PTX_dataset/triton_ptx")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!4 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!5 = distinct !DISubprogram(name: "mul_kernel", linkageName: "mul_kernel", scope: !1, file: !1, line: 168, type: !6, scopeLine: 168, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!6 = !DISubroutineType(cc: DW_CC_normal, types: !7)
!7 = !{}
!8 = !DILocation(line: 177, column: 24, scope: !5)
!9 = !DILocation(line: 182, column: 24, scope: !5)
!10 = !DILocation(line: 183, column: 41, scope: !5)
!11 = !DILocation(line: 183, column: 28, scope: !5)
!12 = !DILocation(line: 185, column: 21, scope: !5)
!13 = !DILocation(line: 188, column: 24, scope: !5)
!14 = !DILocation(line: 188, column: 16, scope: !5)
!15 = !DILocation(line: 189, column: 24, scope: !5)
!16 = !DILocation(line: 189, column: 16, scope: !5)
!17 = !DILocation(line: 190, column: 17, scope: !5)
!18 = !DILocation(line: 192, column: 26, scope: !5)
!19 = !DILocation(line: 192, column: 35, scope: !5)
!20 = !DILocation(line: 192, column: 4, scope: !5)
