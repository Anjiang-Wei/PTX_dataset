//
// Generated by LLVM NVPTX Back-End
//

.version 8.7
.target sm_90a
.address_size 64

	// .globl	matmul_kernel           // -- Begin function matmul_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @matmul_kernel
.visible .entry matmul_kernel(
	.param .u64 .ptr .global .align 1 matmul_kernel_param_0,
	.param .u64 .ptr .global .align 1 matmul_kernel_param_1,
	.param .u64 .ptr .global .align 1 matmul_kernel_param_2,
	.param .u32 matmul_kernel_param_3,
	.param .u32 matmul_kernel_param_4,
	.param .u32 matmul_kernel_param_5,
	.param .u32 matmul_kernel_param_6,
	.param .u32 matmul_kernel_param_7,
	.param .u64 .ptr .global .align 1 matmul_kernel_param_8
)
.reqntid 128
{
	.reg .pred 	%p<73>;
	.reg .b32 	%r<2223>;
	.reg .b64 	%rd<139>;
	.loc	1 68 0                          // gated_mlp.py:68:0
$L__func_begin0:
	.loc	1 68 0                          // gated_mlp.py:68:0

// %bb.0:
	ld.param.b32 	%r430, [matmul_kernel_param_7];
	ld.param.b32 	%r429, [matmul_kernel_param_4];
	ld.param.b32 	%r428, [matmul_kernel_param_3];
	ld.param.b64 	%rd27, [matmul_kernel_param_2];
	ld.param.b64 	%rd26, [matmul_kernel_param_1];
	ld.param.b64 	%rd25, [matmul_kernel_param_0];
$L__tmp0:
	.loc	1 91 24                         // gated_mlp.py:91:24
	mov.u32 	%r492, %ctaid.x;
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22 @[ gated_mlp.py:93:27 ]
	add.s32 	%r493, %r428, 255;
	.loc	2 40 28                         // standard.py:40:28 @[ gated_mlp.py:93:27 ]
	shr.s32 	%r494, %r493, 31;
	shr.u32 	%r495, %r494, 24;
	add.s32 	%r496, %r493, %r495;
	shr.s32 	%r497, %r496, 8;
$L__tmp2:
	.loc	1 94 38                         // gated_mlp.py:94:38
	shl.b32 	%r499, %r497, 3;
	.loc	1 95 22                         // gated_mlp.py:95:22
	div.s32 	%r500, %r492, %r499;
	ld.param.b32 	%r501, [matmul_kernel_param_6];
	.loc	1 96 29                         // gated_mlp.py:96:29
	shl.b32 	%r1, %r500, 3;
	.loc	1 97 35                         // gated_mlp.py:97:35
	sub.s32 	%r502, 1, %r1;
	.loc	1 97 48                         // gated_mlp.py:97:48
	min.s32 	%r2, %r502, 8;
	.loc	1 98 34                         // gated_mlp.py:98:34
	mul.lo.s32 	%r503, %r500, %r499;
	sub.s32 	%r3, %r492, %r503;
	.loc	1 99 40                         // gated_mlp.py:99:40
	div.s32 	%r4, %r3, %r2;
	.loc	1 109 23                        // gated_mlp.py:109:23
	shl.b32 	%r504, %r4, 8;
	.loc	1 109 51                        // gated_mlp.py:109:51
	mov.u32 	%r5, %tid.x;
	shl.b32 	%r505, %r5, 3;
	and.b32 	%r6, %r505, 24;
	and.b32 	%r506, %r505, 32;
	and.b32 	%r507, %r505, 56;
	and.b32 	%r7, %r5, 16;
	and.b32 	%r8, %r505, 248;
	.loc	1 109 38                        // gated_mlp.py:109:38
	or.b32 	%r9, %r504, %r8;
	.loc	1 109 68                        // gated_mlp.py:109:68
	rem.s32 	%r508, %r9, %r428;
	.loc	1 111 22                        // gated_mlp.py:111:22
	mul.wide.u32 	%rd58, %r6, 2;
	add.s64 	%rd28, %rd25, %rd58;
	.loc	1 112 29                        // gated_mlp.py:112:29
	shr.u32 	%r10, %r5, 5;
	bfe.s32 	%r509, %r5, 5, 1;
	and.b32 	%r510, %r5, 32;
	bfe.s32 	%r511, %r5, 6, 1;
	and.b32 	%r512, %r5, 64;
	bfe.u32 	%r11, %r5, 5, 2;
	or.b32 	%r12, %r11, 4;
	or.b32 	%r13, %r11, 8;
	or.b32 	%r14, %r11, 12;
	or.b32 	%r15, %r11, 16;
	or.b32 	%r16, %r11, 20;
	or.b32 	%r17, %r11, 24;
	or.b32 	%r18, %r10, 28;
	.loc	1 112 40                        // gated_mlp.py:112:40
	shl.b32 	%r513, %r501, 2;
	.loc	1 112 52                        // gated_mlp.py:112:52
	mad.lo.s32 	%r514, %r501, %r11, %r508;
	add.s32 	%r515, %r514, %r513;
	add.s32 	%r516, %r515, %r513;
	add.s32 	%r517, %r516, %r513;
	add.s32 	%r518, %r517, %r513;
	add.s32 	%r519, %r518, %r513;
	add.s32 	%r520, %r519, %r513;
	mad.lo.s32 	%r521, %r501, %r18, %r508;
	.loc	1 112 22                        // gated_mlp.py:112:22
	mul.wide.s32 	%rd59, %r514, 2;
	add.s64 	%rd30, %rd26, %rd59;
	mul.wide.s32 	%rd60, %r515, 2;
	add.s64 	%rd31, %rd26, %rd60;
	mul.wide.s32 	%rd61, %r516, 2;
	add.s64 	%rd32, %rd26, %rd61;
	mul.wide.s32 	%rd62, %r517, 2;
	add.s64 	%rd33, %rd26, %rd62;
	mul.wide.s32 	%rd63, %r518, 2;
	add.s64 	%rd34, %rd26, %rd63;
	mul.wide.s32 	%rd64, %r519, 2;
	add.s64 	%rd35, %rd26, %rd64;
	mul.wide.s32 	%rd65, %r520, 2;
	add.s64 	%rd36, %rd26, %rd65;
	mul.wide.s32 	%rd66, %r521, 2;
	add.s64 	%rd37, %rd26, %rd66;
$L__tmp3:
	.loc	2 40 22                         // standard.py:40:22 @[ gated_mlp.py:120:33 ]
	add.s32 	%r522, %r429, 31;
$L__tmp4:
	.loc	1 129 33                        // gated_mlp.py:129:33
	shl.b32 	%r526, %r501, 5;
	.loc	1 120 22                        // gated_mlp.py:120:22
	setp.lt.s32 	%p1, %r522, 32;
	setp.gt.s32 	%p2, %r522, 31;
	.loc	1 123 51                        // gated_mlp.py:123:51
	setp.lt.s32 	%p3, %r6, %r429;
	.loc	1 123 20                        // gated_mlp.py:123:20
	and.b32 	%r527, %r5, 24;
	mul.lo.s32 	%r528, %r527, 9;
	xor.b32 	%r529, %r528, %r507;
	shl.b32 	%r20, %r510, 3;
	shl.b32 	%r21, %r512, 3;
	or.b32 	%r530, %r20, %r529;
	or.b32 	%r22, %r530, %r21;
	shl.b32 	%r531, %r22, 1;
	mov.b32 	%r532, global_smem;
	add.s32 	%r533, %r532, 65536;
	add.s32 	%r431, %r533, %r531;
	or.b32 	%r534, %r507, 1024;
	xor.b32 	%r535, %r528, %r534;
	or.b32 	%r536, %r20, %r535;
	or.b32 	%r23, %r536, %r21;
	shl.b32 	%r537, %r23, 1;
	add.s32 	%r433, %r533, %r537;
	selp.b32 	%r538, 16, 0, %p2;
	selp.b32 	%r434, %r538, 0, %p3;
	// begin inline asm
	cp.async.cg.shared.global [ %r431 + 0 ], [ %rd28 + 0 ], 0x10, %r434;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r433 + 0 ], [ %rd28 + 0 ], 0x10, %r434;
	// end inline asm
	cp.async.commit_group;
	.loc	1 124 51                        // gated_mlp.py:124:51
	setp.lt.s32 	%p4, %r11, %r429;
	setp.lt.s32 	%p5, %r12, %r429;
	setp.lt.s32 	%p6, %r13, %r429;
	setp.lt.s32 	%p7, %r14, %r429;
	setp.lt.s32 	%p8, %r15, %r429;
	setp.lt.s32 	%p9, %r16, %r429;
	setp.lt.s32 	%p10, %r17, %r429;
	setp.lt.s32 	%p11, %r18, %r429;
	.loc	1 124 20                        // gated_mlp.py:124:20
	shl.b32 	%r24, %r5, 8;
	and.b32 	%r25, %r24, 2048;
	or.b32 	%r539, %r507, %r25;
	shl.b32 	%r540, %r7, 8;
	or.b32 	%r541, %r539, %r540;
	and.b32 	%r542, %r509, 72;
	and.b32 	%r543, %r511, 144;
	or.b32 	%r544, %r543, %r542;
	xor.b32 	%r26, %r544, %r541;
	shl.b32 	%r545, %r26, 1;
	add.s32 	%r435, %r532, %r545;
	or.b32 	%r546, %r6, 288;
	xor.b32 	%r547, %r546, %r506;
	or.b32 	%r548, %r25, %r547;
	or.b32 	%r549, %r548, %r540;
	xor.b32 	%r27, %r544, %r549;
	shl.b32 	%r550, %r27, 1;
	add.s32 	%r437, %r532, %r550;
	or.b32 	%r551, %r541, 512;
	xor.b32 	%r28, %r544, %r551;
	shl.b32 	%r552, %r28, 1;
	add.s32 	%r439, %r532, %r552;
	or.b32 	%r553, %r6, 800;
	xor.b32 	%r554, %r553, %r506;
	or.b32 	%r555, %r25, %r554;
	or.b32 	%r556, %r555, %r540;
	xor.b32 	%r29, %r544, %r556;
	shl.b32 	%r557, %r29, 1;
	add.s32 	%r441, %r532, %r557;
	or.b32 	%r558, %r540, %r25;
	or.b32 	%r559, %r558, %r534;
	xor.b32 	%r30, %r544, %r559;
	shl.b32 	%r560, %r30, 1;
	add.s32 	%r443, %r532, %r560;
	or.b32 	%r561, %r6, 1312;
	xor.b32 	%r562, %r561, %r506;
	or.b32 	%r563, %r25, %r562;
	or.b32 	%r564, %r563, %r540;
	xor.b32 	%r31, %r544, %r564;
	shl.b32 	%r565, %r31, 1;
	add.s32 	%r445, %r532, %r565;
	or.b32 	%r566, %r541, 1536;
	xor.b32 	%r32, %r544, %r566;
	shl.b32 	%r567, %r32, 1;
	add.s32 	%r447, %r532, %r567;
	or.b32 	%r568, %r6, 1824;
	xor.b32 	%r569, %r568, %r506;
	or.b32 	%r570, %r25, %r569;
	or.b32 	%r571, %r570, %r540;
	xor.b32 	%r33, %r544, %r571;
	shl.b32 	%r572, %r33, 1;
	add.s32 	%r449, %r532, %r572;
	selp.b32 	%r436, %r538, 0, %p4;
	// begin inline asm
	cp.async.cg.shared.global [ %r435 + 0 ], [ %rd30 + 0 ], 0x10, %r436;
	// end inline asm
	selp.b32 	%r438, %r538, 0, %p5;
	// begin inline asm
	cp.async.cg.shared.global [ %r437 + 0 ], [ %rd31 + 0 ], 0x10, %r438;
	// end inline asm
	selp.b32 	%r440, %r538, 0, %p6;
	// begin inline asm
	cp.async.cg.shared.global [ %r439 + 0 ], [ %rd32 + 0 ], 0x10, %r440;
	// end inline asm
	selp.b32 	%r442, %r538, 0, %p7;
	// begin inline asm
	cp.async.cg.shared.global [ %r441 + 0 ], [ %rd33 + 0 ], 0x10, %r442;
	// end inline asm
	selp.b32 	%r444, %r538, 0, %p8;
	// begin inline asm
	cp.async.cg.shared.global [ %r443 + 0 ], [ %rd34 + 0 ], 0x10, %r444;
	// end inline asm
	selp.b32 	%r446, %r538, 0, %p9;
	// begin inline asm
	cp.async.cg.shared.global [ %r445 + 0 ], [ %rd35 + 0 ], 0x10, %r446;
	// end inline asm
	selp.b32 	%r448, %r538, 0, %p10;
	// begin inline asm
	cp.async.cg.shared.global [ %r447 + 0 ], [ %rd36 + 0 ], 0x10, %r448;
	// end inline asm
	selp.b32 	%r450, %r538, 0, %p11;
	// begin inline asm
	cp.async.cg.shared.global [ %r449 + 0 ], [ %rd37 + 0 ], 0x10, %r450;
	// end inline asm
	cp.async.commit_group;
	.loc	1 120 22                        // gated_mlp.py:120:22
	setp.gt.s32 	%p12, %r522, 63;
	.loc	1 128 18                        // gated_mlp.py:128:18
	add.s64 	%rd38, %rd28, 64;
	.loc	1 129 18                        // gated_mlp.py:129:18
	mul.wide.s32 	%rd67, %r526, 2;
	add.s64 	%rd40, %rd30, %rd67;
	add.s64 	%rd41, %rd31, %rd67;
	add.s64 	%rd42, %rd32, %rd67;
	add.s64 	%rd43, %rd33, %rd67;
	add.s64 	%rd44, %rd34, %rd67;
	add.s64 	%rd45, %rd35, %rd67;
	add.s64 	%rd46, %rd36, %rd67;
	add.s64 	%rd47, %rd37, %rd67;
	.loc	1 123 55                        // gated_mlp.py:123:55
	add.s32 	%r573, %r429, -32;
	.loc	1 123 51                        // gated_mlp.py:123:51
	setp.lt.s32 	%p13, %r6, %r573;
	.loc	1 123 20                        // gated_mlp.py:123:20
	bar.sync 	0;
	add.s32 	%r574, %r532, 69632;
	add.s32 	%r451, %r574, %r531;
	add.s32 	%r453, %r574, %r537;
	selp.b32 	%r575, 16, 0, %p13;
	selp.b32 	%r454, %r575, 0, %p12;
	// begin inline asm
	cp.async.cg.shared.global [ %r451 + 0 ], [ %rd38 + 0 ], 0x10, %r454;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r453 + 0 ], [ %rd38 + 0 ], 0x10, %r454;
	// end inline asm
	cp.async.commit_group;
	.loc	1 124 51                        // gated_mlp.py:124:51
	setp.lt.s32 	%p14, %r11, %r573;
	setp.lt.s32 	%p15, %r12, %r573;
	setp.lt.s32 	%p16, %r13, %r573;
	setp.lt.s32 	%p17, %r14, %r573;
	setp.lt.s32 	%p18, %r15, %r573;
	setp.lt.s32 	%p19, %r16, %r573;
	setp.lt.s32 	%p20, %r17, %r573;
	setp.lt.s32 	%p21, %r18, %r573;
	.loc	1 124 20                        // gated_mlp.py:124:20
	add.s32 	%r576, %r532, 16384;
	add.s32 	%r455, %r576, %r545;
	add.s32 	%r457, %r576, %r550;
	add.s32 	%r459, %r576, %r552;
	add.s32 	%r461, %r576, %r557;
	add.s32 	%r463, %r576, %r560;
	add.s32 	%r465, %r576, %r565;
	add.s32 	%r467, %r576, %r567;
	add.s32 	%r469, %r576, %r572;
	selp.b32 	%r577, 16, 0, %p14;
	selp.b32 	%r456, %r577, 0, %p12;
	// begin inline asm
	cp.async.cg.shared.global [ %r455 + 0 ], [ %rd40 + 0 ], 0x10, %r456;
	// end inline asm
	selp.b32 	%r578, 16, 0, %p15;
	selp.b32 	%r458, %r578, 0, %p12;
	// begin inline asm
	cp.async.cg.shared.global [ %r457 + 0 ], [ %rd41 + 0 ], 0x10, %r458;
	// end inline asm
	selp.b32 	%r579, 16, 0, %p16;
	selp.b32 	%r460, %r579, 0, %p12;
	// begin inline asm
	cp.async.cg.shared.global [ %r459 + 0 ], [ %rd42 + 0 ], 0x10, %r460;
	// end inline asm
	selp.b32 	%r580, 16, 0, %p17;
	selp.b32 	%r462, %r580, 0, %p12;
	// begin inline asm
	cp.async.cg.shared.global [ %r461 + 0 ], [ %rd43 + 0 ], 0x10, %r462;
	// end inline asm
	selp.b32 	%r581, 16, 0, %p18;
	selp.b32 	%r464, %r581, 0, %p12;
	// begin inline asm
	cp.async.cg.shared.global [ %r463 + 0 ], [ %rd44 + 0 ], 0x10, %r464;
	// end inline asm
	selp.b32 	%r582, 16, 0, %p19;
	selp.b32 	%r466, %r582, 0, %p12;
	// begin inline asm
	cp.async.cg.shared.global [ %r465 + 0 ], [ %rd45 + 0 ], 0x10, %r466;
	// end inline asm
	selp.b32 	%r583, 16, 0, %p20;
	selp.b32 	%r468, %r583, 0, %p12;
	// begin inline asm
	cp.async.cg.shared.global [ %r467 + 0 ], [ %rd46 + 0 ], 0x10, %r468;
	// end inline asm
	selp.b32 	%r584, 16, 0, %p21;
	selp.b32 	%r470, %r584, 0, %p12;
	// begin inline asm
	cp.async.cg.shared.global [ %r469 + 0 ], [ %rd47 + 0 ], 0x10, %r470;
	// end inline asm
	cp.async.commit_group;
	.loc	1 120 22                        // gated_mlp.py:120:22
	setp.gt.s32 	%p22, %r522, 95;
	.loc	1 128 18                        // gated_mlp.py:128:18
	add.s64 	%rd48, %rd28, 128;
	.loc	1 129 18                        // gated_mlp.py:129:18
	add.s64 	%rd50, %rd40, %rd67;
	add.s64 	%rd51, %rd41, %rd67;
	add.s64 	%rd52, %rd42, %rd67;
	add.s64 	%rd53, %rd43, %rd67;
	add.s64 	%rd54, %rd44, %rd67;
	add.s64 	%rd55, %rd45, %rd67;
	add.s64 	%rd56, %rd46, %rd67;
	add.s64 	%rd57, %rd47, %rd67;
	.loc	1 123 55                        // gated_mlp.py:123:55
	add.s32 	%r585, %r429, -64;
	.loc	1 123 51                        // gated_mlp.py:123:51
	setp.lt.s32 	%p23, %r6, %r585;
	.loc	1 123 20                        // gated_mlp.py:123:20
	bar.sync 	0;
	add.s32 	%r586, %r532, 73728;
	add.s32 	%r471, %r586, %r531;
	add.s32 	%r473, %r586, %r537;
	selp.b32 	%r587, 16, 0, %p23;
	selp.b32 	%r474, %r587, 0, %p22;
	// begin inline asm
	cp.async.cg.shared.global [ %r471 + 0 ], [ %rd48 + 0 ], 0x10, %r474;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r473 + 0 ], [ %rd48 + 0 ], 0x10, %r474;
	// end inline asm
	cp.async.commit_group;
	.loc	1 124 51                        // gated_mlp.py:124:51
	setp.lt.s32 	%p24, %r11, %r585;
	setp.lt.s32 	%p25, %r12, %r585;
	setp.lt.s32 	%p26, %r13, %r585;
	setp.lt.s32 	%p27, %r14, %r585;
	setp.lt.s32 	%p28, %r15, %r585;
	setp.lt.s32 	%p29, %r16, %r585;
	setp.lt.s32 	%p30, %r17, %r585;
	setp.lt.s32 	%p31, %r18, %r585;
	.loc	1 124 20                        // gated_mlp.py:124:20
	add.s32 	%r588, %r532, 32768;
	add.s32 	%r475, %r588, %r545;
	add.s32 	%r477, %r588, %r550;
	add.s32 	%r479, %r588, %r552;
	add.s32 	%r481, %r588, %r557;
	add.s32 	%r483, %r588, %r560;
	add.s32 	%r485, %r588, %r565;
	add.s32 	%r487, %r588, %r567;
	add.s32 	%r489, %r588, %r572;
	selp.b32 	%r589, 16, 0, %p24;
	selp.b32 	%r476, %r589, 0, %p22;
	// begin inline asm
	cp.async.cg.shared.global [ %r475 + 0 ], [ %rd50 + 0 ], 0x10, %r476;
	// end inline asm
	selp.b32 	%r590, 16, 0, %p25;
	selp.b32 	%r478, %r590, 0, %p22;
	// begin inline asm
	cp.async.cg.shared.global [ %r477 + 0 ], [ %rd51 + 0 ], 0x10, %r478;
	// end inline asm
	selp.b32 	%r591, 16, 0, %p26;
	selp.b32 	%r480, %r591, 0, %p22;
	// begin inline asm
	cp.async.cg.shared.global [ %r479 + 0 ], [ %rd52 + 0 ], 0x10, %r480;
	// end inline asm
	selp.b32 	%r592, 16, 0, %p27;
	selp.b32 	%r482, %r592, 0, %p22;
	// begin inline asm
	cp.async.cg.shared.global [ %r481 + 0 ], [ %rd53 + 0 ], 0x10, %r482;
	// end inline asm
	selp.b32 	%r593, 16, 0, %p28;
	selp.b32 	%r484, %r593, 0, %p22;
	// begin inline asm
	cp.async.cg.shared.global [ %r483 + 0 ], [ %rd54 + 0 ], 0x10, %r484;
	// end inline asm
	selp.b32 	%r594, 16, 0, %p29;
	selp.b32 	%r486, %r594, 0, %p22;
	// begin inline asm
	cp.async.cg.shared.global [ %r485 + 0 ], [ %rd55 + 0 ], 0x10, %r486;
	// end inline asm
	selp.b32 	%r595, 16, 0, %p30;
	selp.b32 	%r488, %r595, 0, %p22;
	// begin inline asm
	cp.async.cg.shared.global [ %r487 + 0 ], [ %rd56 + 0 ], 0x10, %r488;
	// end inline asm
	selp.b32 	%r596, 16, 0, %p31;
	selp.b32 	%r490, %r596, 0, %p22;
	// begin inline asm
	cp.async.cg.shared.global [ %r489 + 0 ], [ %rd57 + 0 ], 0x10, %r490;
	// end inline asm
	cp.async.commit_group;
	mov.b32 	%r1966, 0f00000000;
	mov.b32 	%r1967, %r1966;
	mov.b32 	%r1968, %r1966;
	mov.b32 	%r1969, %r1966;
	mov.b32 	%r1970, %r1966;
	mov.b32 	%r1971, %r1966;
	mov.b32 	%r1972, %r1966;
	mov.b32 	%r1973, %r1966;
	mov.b32 	%r1974, %r1966;
	mov.b32 	%r1975, %r1966;
	mov.b32 	%r1976, %r1966;
	mov.b32 	%r1977, %r1966;
	mov.b32 	%r1978, %r1966;
	mov.b32 	%r1979, %r1966;
	mov.b32 	%r1980, %r1966;
	mov.b32 	%r1981, %r1966;
	mov.b32 	%r1982, %r1966;
	mov.b32 	%r1983, %r1966;
	mov.b32 	%r1984, %r1966;
	mov.b32 	%r1985, %r1966;
	mov.b32 	%r1986, %r1966;
	mov.b32 	%r1987, %r1966;
	mov.b32 	%r1988, %r1966;
	mov.b32 	%r1989, %r1966;
	mov.b32 	%r1990, %r1966;
	mov.b32 	%r1991, %r1966;
	mov.b32 	%r1992, %r1966;
	mov.b32 	%r1993, %r1966;
	mov.b32 	%r1994, %r1966;
	mov.b32 	%r1995, %r1966;
	mov.b32 	%r1996, %r1966;
	mov.b32 	%r1997, %r1966;
	mov.b32 	%r1998, %r1966;
	mov.b32 	%r1999, %r1966;
	mov.b32 	%r2000, %r1966;
	mov.b32 	%r2001, %r1966;
	mov.b32 	%r2002, %r1966;
	mov.b32 	%r2003, %r1966;
	mov.b32 	%r2004, %r1966;
	mov.b32 	%r2005, %r1966;
	mov.b32 	%r2006, %r1966;
	mov.b32 	%r2007, %r1966;
	mov.b32 	%r2008, %r1966;
	mov.b32 	%r2009, %r1966;
	mov.b32 	%r2010, %r1966;
	mov.b32 	%r2011, %r1966;
	mov.b32 	%r2012, %r1966;
	mov.b32 	%r2013, %r1966;
	mov.b32 	%r2014, %r1966;
	mov.b32 	%r2015, %r1966;
	mov.b32 	%r2016, %r1966;
	mov.b32 	%r2017, %r1966;
	mov.b32 	%r2018, %r1966;
	mov.b32 	%r2019, %r1966;
	mov.b32 	%r2020, %r1966;
	mov.b32 	%r2021, %r1966;
	mov.b32 	%r2022, %r1966;
	mov.b32 	%r2023, %r1966;
	mov.b32 	%r2024, %r1966;
	mov.b32 	%r2025, %r1966;
	mov.b32 	%r2026, %r1966;
	mov.b32 	%r2027, %r1966;
	mov.b32 	%r2028, %r1966;
	mov.b32 	%r2029, %r1966;
	mov.b32 	%r2030, %r1966;
	mov.b32 	%r2031, %r1966;
	mov.b32 	%r2032, %r1966;
	mov.b32 	%r2033, %r1966;
	mov.b32 	%r2034, %r1966;
	mov.b32 	%r2035, %r1966;
	mov.b32 	%r2036, %r1966;
	mov.b32 	%r2037, %r1966;
	mov.b32 	%r2038, %r1966;
	mov.b32 	%r2039, %r1966;
	mov.b32 	%r2040, %r1966;
	mov.b32 	%r2041, %r1966;
	mov.b32 	%r2042, %r1966;
	mov.b32 	%r2043, %r1966;
	mov.b32 	%r2044, %r1966;
	mov.b32 	%r2045, %r1966;
	mov.b32 	%r2046, %r1966;
	mov.b32 	%r2047, %r1966;
	mov.b32 	%r2048, %r1966;
	mov.b32 	%r2049, %r1966;
	mov.b32 	%r2050, %r1966;
	mov.b32 	%r2051, %r1966;
	mov.b32 	%r2052, %r1966;
	mov.b32 	%r2053, %r1966;
	mov.b32 	%r2054, %r1966;
	mov.b32 	%r2055, %r1966;
	mov.b32 	%r2056, %r1966;
	mov.b32 	%r2057, %r1966;
	mov.b32 	%r2058, %r1966;
	mov.b32 	%r2059, %r1966;
	mov.b32 	%r2060, %r1966;
	mov.b32 	%r2061, %r1966;
	mov.b32 	%r2062, %r1966;
	mov.b32 	%r2063, %r1966;
	mov.b32 	%r2064, %r1966;
	mov.b32 	%r2065, %r1966;
	mov.b32 	%r2066, %r1966;
	mov.b32 	%r2067, %r1966;
	mov.b32 	%r2068, %r1966;
	mov.b32 	%r2069, %r1966;
	mov.b32 	%r2070, %r1966;
	mov.b32 	%r2071, %r1966;
	mov.b32 	%r2072, %r1966;
	mov.b32 	%r2073, %r1966;
	mov.b32 	%r2074, %r1966;
	mov.b32 	%r2075, %r1966;
	mov.b32 	%r2076, %r1966;
	mov.b32 	%r2077, %r1966;
	mov.b32 	%r2078, %r1966;
	mov.b32 	%r2079, %r1966;
	mov.b32 	%r2080, %r1966;
	mov.b32 	%r2081, %r1966;
	mov.b32 	%r2082, %r1966;
	mov.b32 	%r2083, %r1966;
	mov.b32 	%r2084, %r1966;
	mov.b32 	%r2085, %r1966;
	mov.b32 	%r2086, %r1966;
	mov.b32 	%r2087, %r1966;
	mov.b32 	%r2088, %r1966;
	mov.b32 	%r2089, %r1966;
	mov.b32 	%r2090, %r1966;
	mov.b32 	%r2091, %r1966;
	mov.b32 	%r2092, %r1966;
	mov.b32 	%r2093, %r1966;
	.loc	1 120 22                        // gated_mlp.py:120:22
	@%p1 bra 	$L__BB0_3;
// %bb.1:                               // %.lr.ph
	.loc	1 0 22                          // gated_mlp.py:0:22
	cvt.s64.s32 	%rd1, %r514;
	cvt.s64.s32 	%rd2, %r515;
	cvt.s64.s32 	%rd3, %r516;
	cvt.s64.s32 	%rd4, %r517;
	cvt.s64.s32 	%rd5, %r518;
	cvt.s64.s32 	%rd6, %r519;
	cvt.s64.s32 	%rd7, %r520;
	cvt.s64.s32 	%rd8, %r521;
	shr.s32 	%r523, %r522, 31;
	shr.u32 	%r524, %r523, 27;
	add.s32 	%r525, %r522, %r524;
	shr.s32 	%r19, %r525, 5;
	cvt.s64.s32 	%rd9, %r526;
	add.s32 	%r34, %r19, -3;
	add.s32 	%r1963, %r429, -96;
	.loc	1 120 22                        // gated_mlp.py:120:22
	shl.b64 	%rd10, %rd8, 1;
	mad.lo.s64 	%rd138, %rd9, 6, %rd26;
	shl.b64 	%rd12, %rd9, 1;
	shl.b64 	%rd13, %rd7, 1;
	shl.b64 	%rd14, %rd6, 1;
	shl.b64 	%rd15, %rd5, 1;
	shl.b64 	%rd16, %rd4, 1;
	shl.b64 	%rd17, %rd3, 1;
	shl.b64 	%rd18, %rd2, 1;
	shl.b64 	%rd19, %rd1, 1;
	and.b32 	%r601, %r5, 3;
	mul.wide.u32 	%rd68, %r601, 16;
	add.s64 	%rd69, %rd68, %rd25;
	add.s64 	%rd137, %rd69, 192;
	mov.b32 	%r1377, 0;
	mov.b32 	%r1966, 0f00000000;
	mov.b32 	%r1965, 2;
	mov.b32 	%r1964, -1;
	mov.b32 	%r1967, %r1966;
	mov.b32 	%r1968, %r1966;
	mov.b32 	%r1969, %r1966;
	mov.b32 	%r1970, %r1966;
	mov.b32 	%r1971, %r1966;
	mov.b32 	%r1972, %r1966;
	mov.b32 	%r1973, %r1966;
	mov.b32 	%r1974, %r1966;
	mov.b32 	%r1975, %r1966;
	mov.b32 	%r1976, %r1966;
	mov.b32 	%r1977, %r1966;
	mov.b32 	%r1978, %r1966;
	mov.b32 	%r1979, %r1966;
	mov.b32 	%r1980, %r1966;
	mov.b32 	%r1981, %r1966;
	mov.b32 	%r1982, %r1966;
	mov.b32 	%r1983, %r1966;
	mov.b32 	%r1984, %r1966;
	mov.b32 	%r1985, %r1966;
	mov.b32 	%r1986, %r1966;
	mov.b32 	%r1987, %r1966;
	mov.b32 	%r1988, %r1966;
	mov.b32 	%r1989, %r1966;
	mov.b32 	%r1990, %r1966;
	mov.b32 	%r1991, %r1966;
	mov.b32 	%r1992, %r1966;
	mov.b32 	%r1993, %r1966;
	mov.b32 	%r1994, %r1966;
	mov.b32 	%r1995, %r1966;
	mov.b32 	%r1996, %r1966;
	mov.b32 	%r1997, %r1966;
	mov.b32 	%r1998, %r1966;
	mov.b32 	%r1999, %r1966;
	mov.b32 	%r2000, %r1966;
	mov.b32 	%r2001, %r1966;
	mov.b32 	%r2002, %r1966;
	mov.b32 	%r2003, %r1966;
	mov.b32 	%r2004, %r1966;
	mov.b32 	%r2005, %r1966;
	mov.b32 	%r2006, %r1966;
	mov.b32 	%r2007, %r1966;
	mov.b32 	%r2008, %r1966;
	mov.b32 	%r2009, %r1966;
	mov.b32 	%r2010, %r1966;
	mov.b32 	%r2011, %r1966;
	mov.b32 	%r2012, %r1966;
	mov.b32 	%r2013, %r1966;
	mov.b32 	%r2014, %r1966;
	mov.b32 	%r2015, %r1966;
	mov.b32 	%r2016, %r1966;
	mov.b32 	%r2017, %r1966;
	mov.b32 	%r2018, %r1966;
	mov.b32 	%r2019, %r1966;
	mov.b32 	%r2020, %r1966;
	mov.b32 	%r2021, %r1966;
	mov.b32 	%r2022, %r1966;
	mov.b32 	%r2023, %r1966;
	mov.b32 	%r2024, %r1966;
	mov.b32 	%r2025, %r1966;
	mov.b32 	%r2026, %r1966;
	mov.b32 	%r2027, %r1966;
	mov.b32 	%r2028, %r1966;
	mov.b32 	%r2029, %r1966;
	mov.b32 	%r2030, %r1966;
	mov.b32 	%r2031, %r1966;
	mov.b32 	%r2032, %r1966;
	mov.b32 	%r2033, %r1966;
	mov.b32 	%r2034, %r1966;
	mov.b32 	%r2035, %r1966;
	mov.b32 	%r2036, %r1966;
	mov.b32 	%r2037, %r1966;
	mov.b32 	%r2038, %r1966;
	mov.b32 	%r2039, %r1966;
	mov.b32 	%r2040, %r1966;
	mov.b32 	%r2041, %r1966;
	mov.b32 	%r2042, %r1966;
	mov.b32 	%r2043, %r1966;
	mov.b32 	%r2044, %r1966;
	mov.b32 	%r2045, %r1966;
	mov.b32 	%r2046, %r1966;
	mov.b32 	%r2047, %r1966;
	mov.b32 	%r2048, %r1966;
	mov.b32 	%r2049, %r1966;
	mov.b32 	%r2050, %r1966;
	mov.b32 	%r2051, %r1966;
	mov.b32 	%r2052, %r1966;
	mov.b32 	%r2053, %r1966;
	mov.b32 	%r2054, %r1966;
	mov.b32 	%r2055, %r1966;
	mov.b32 	%r2056, %r1966;
	mov.b32 	%r2057, %r1966;
	mov.b32 	%r2058, %r1966;
	mov.b32 	%r2059, %r1966;
	mov.b32 	%r2060, %r1966;
	mov.b32 	%r2061, %r1966;
	mov.b32 	%r2062, %r1966;
	mov.b32 	%r2063, %r1966;
	mov.b32 	%r2064, %r1966;
	mov.b32 	%r2065, %r1966;
	mov.b32 	%r2066, %r1966;
	mov.b32 	%r2067, %r1966;
	mov.b32 	%r2068, %r1966;
	mov.b32 	%r2069, %r1966;
	mov.b32 	%r2070, %r1966;
	mov.b32 	%r2071, %r1966;
	mov.b32 	%r2072, %r1966;
	mov.b32 	%r2073, %r1966;
	mov.b32 	%r2074, %r1966;
	mov.b32 	%r2075, %r1966;
	mov.b32 	%r2076, %r1966;
	mov.b32 	%r2077, %r1966;
	mov.b32 	%r2078, %r1966;
	mov.b32 	%r2079, %r1966;
	mov.b32 	%r2080, %r1966;
	mov.b32 	%r2081, %r1966;
	mov.b32 	%r2082, %r1966;
	mov.b32 	%r2083, %r1966;
	mov.b32 	%r2084, %r1966;
	mov.b32 	%r2085, %r1966;
	mov.b32 	%r2086, %r1966;
	mov.b32 	%r2087, %r1966;
	mov.b32 	%r2088, %r1966;
	mov.b32 	%r2089, %r1966;
	mov.b32 	%r2090, %r1966;
	mov.b32 	%r2091, %r1966;
	mov.b32 	%r2092, %r1966;
	mov.b32 	%r2093, %r1966;
	mov.b32 	%r2094, %r1377;
$L__BB0_2:                              // =>This Inner Loop Header: Depth=1
	setp.lt.s32 	%p34, %r2094, %r34;
	add.s32 	%r1402, %r1964, 1;
	setp.gt.s32 	%p35, %r1402, 3;
	selp.b32 	%r1964, 0, %r1402, %p35;
	.loc	1 123 20                        // gated_mlp.py:123:20
	cp.async.wait_group 	4;
	bar.sync 	0;
	shl.b32 	%r1403, %r1964, 12;
	add.s32 	%r1242, %r533, %r1403;
	.loc	1 124 20                        // gated_mlp.py:124:20
	shl.b32 	%r1406, %r1964, 14;
	add.s32 	%r1245, %r532, %r1406;
	.loc	1 126 35                        // gated_mlp.py:126:35
	shfl.sync.idx.b32 	%r1407, %r10, 0, 31, -1;
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	bfe.u32 	%r1408, %r1242, 4, 14;
	cvt.u64.u32 	%rd84, %r1408;
	or.b64 	%rd70, %rd84, -9223371899399045120;
	bfe.u32 	%r1409, %r1245, 4, 14;
	cvt.u64.u32 	%rd85, %r1409;
	or.b64 	%rd71, %rd85, 4611686293322072064;
	mov.pred 	%p32, -1;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n256k16.f32.f16.f16 {%r1966,%r1967,%r1968,%r1969,%r1970,%r1971,%r1972,%r1973,%r1974,%r1975,%r1976,%r1977,%r1978,%r1979,%r1980,%r1981,%r1982,%r1983,%r1984,%r1985,%r1986,%r1987,%r1988,%r1989,%r1990,%r1991,%r1992,%r1993,%r1994,%r1995,%r1996,%r1997,%r1998,%r1999,%r2000,%r2001,%r2002,%r2003,%r2004,%r2005,%r2006,%r2007,%r2008,%r2009,%r2010,%r2011,%r2012,%r2013,%r2014,%r2015,%r2016,%r2017,%r2018,%r2019,%r2020,%r2021,%r2022,%r2023,%r2024,%r2025,%r2026,%r2027,%r2028,%r2029,%r2030,%r2031,%r2032,%r2033,%r2034,%r2035,%r2036,%r2037,%r2038,%r2039,%r2040,%r2041,%r2042,%r2043,%r2044,%r2045,%r2046,%r2047,%r2048,%r2049,%r2050,%r2051,%r2052,%r2053,%r2054,%r2055,%r2056,%r2057,%r2058,%r2059,%r2060,%r2061,%r2062,%r2063,%r2064,%r2065,%r2066,%r2067,%r2068,%r2069,%r2070,%r2071,%r2072,%r2073,%r2074,%r2075,%r2076,%r2077,%r2078,%r2079,%r2080,%r2081,%r2082,%r2083,%r2084,%r2085,%r2086,%r2087,%r2088,%r2089,%r2090,%r2091,%r2092,%r2093}, %rd70, %rd71, %p32, 1, 1, 0, 1;
	// end inline asm
	add.s32 	%r1410, %r1242, 32;
	bfe.u32 	%r1411, %r1410, 4, 14;
	cvt.u64.u32 	%rd86, %r1411;
	or.b64 	%rd72, %rd86, -9223371899399045120;
	add.s32 	%r1412, %r1245, 2048;
	bfe.u32 	%r1413, %r1412, 4, 14;
	cvt.u64.u32 	%rd87, %r1413;
	or.b64 	%rd73, %rd87, 4611686293322072064;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n256k16.f32.f16.f16 {%r1966,%r1967,%r1968,%r1969,%r1970,%r1971,%r1972,%r1973,%r1974,%r1975,%r1976,%r1977,%r1978,%r1979,%r1980,%r1981,%r1982,%r1983,%r1984,%r1985,%r1986,%r1987,%r1988,%r1989,%r1990,%r1991,%r1992,%r1993,%r1994,%r1995,%r1996,%r1997,%r1998,%r1999,%r2000,%r2001,%r2002,%r2003,%r2004,%r2005,%r2006,%r2007,%r2008,%r2009,%r2010,%r2011,%r2012,%r2013,%r2014,%r2015,%r2016,%r2017,%r2018,%r2019,%r2020,%r2021,%r2022,%r2023,%r2024,%r2025,%r2026,%r2027,%r2028,%r2029,%r2030,%r2031,%r2032,%r2033,%r2034,%r2035,%r2036,%r2037,%r2038,%r2039,%r2040,%r2041,%r2042,%r2043,%r2044,%r2045,%r2046,%r2047,%r2048,%r2049,%r2050,%r2051,%r2052,%r2053,%r2054,%r2055,%r2056,%r2057,%r2058,%r2059,%r2060,%r2061,%r2062,%r2063,%r2064,%r2065,%r2066,%r2067,%r2068,%r2069,%r2070,%r2071,%r2072,%r2073,%r2074,%r2075,%r2076,%r2077,%r2078,%r2079,%r2080,%r2081,%r2082,%r2083,%r2084,%r2085,%r2086,%r2087,%r2088,%r2089,%r2090,%r2091,%r2092,%r2093}, %rd72, %rd73, %p32, 1, 1, 0, 1;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	mov.b32 	%r1243, %r1377;
	mov.b32 	%r1244, %r1377;
	mov.b32 	%r1246, %r1377;
	mov.b32 	%r1247, %r1377;
	// begin inline asm
	// wait for regs: %r1966,%r1967,%r1968,%r1969,%r1970,%r1971,%r1972,%r1973,%r1974,%r1975,%r1976,%r1977,%r1978,%r1979,%r1980,%r1981,%r1982,%r1983,%r1984,%r1985,%r1986,%r1987,%r1988,%r1989,%r1990,%r1991,%r1992,%r1993,%r1994,%r1995,%r1996,%r1997,%r1998,%r1999,%r2000,%r2001,%r2002,%r2003,%r2004,%r2005,%r2006,%r2007,%r2008,%r2009,%r2010,%r2011,%r2012,%r2013,%r2014,%r2015,%r2016,%r2017,%r2018,%r2019,%r2020,%r2021,%r2022,%r2023,%r2024,%r2025,%r2026,%r2027,%r2028,%r2029,%r2030,%r2031,%r2032,%r2033,%r2034,%r2035,%r2036,%r2037,%r2038,%r2039,%r2040,%r2041,%r2042,%r2043,%r2044,%r2045,%r2046,%r2047,%r2048,%r2049,%r2050,%r2051,%r2052,%r2053,%r2054,%r2055,%r2056,%r2057,%r2058,%r2059,%r2060,%r2061,%r2062,%r2063,%r2064,%r2065,%r2066,%r2067,%r2068,%r2069,%r2070,%r2071,%r2072,%r2073,%r2074,%r2075,%r2076,%r2077,%r2078,%r2079,%r2080,%r2081,%r2082,%r2083,%r2084,%r2085,%r2086,%r2087,%r2088,%r2089,%r2090,%r2091,%r2092,%r2093,%r1242,%r1243,%r1244,%r1245,%r1246,%r1247
	wgmma.wait_group.sync.aligned 1;
	// end inline asm
	.loc	1 129 18                        // gated_mlp.py:129:18
	add.s64 	%rd76, %rd138, %rd19;
	add.s64 	%rd77, %rd138, %rd18;
	add.s64 	%rd78, %rd138, %rd17;
	add.s64 	%rd79, %rd138, %rd16;
	add.s64 	%rd80, %rd138, %rd15;
	add.s64 	%rd81, %rd138, %rd14;
	add.s64 	%rd82, %rd138, %rd13;
	.loc	1 120 22                        // gated_mlp.py:120:22
	add.s64 	%rd83, %rd138, %rd10;
	add.s32 	%r1414, %r1965, 1;
	setp.gt.s32 	%p36, %r1414, 3;
	selp.b32 	%r1965, 0, %r1414, %p36;
	.loc	1 123 51                        // gated_mlp.py:123:51
	setp.lt.s32 	%p37, %r6, %r1963;
	.loc	1 123 20                        // gated_mlp.py:123:20
	shl.b32 	%r1415, %r1965, 12;
	add.s32 	%r1416, %r533, %r1415;
	bar.sync 	0;
	add.s32 	%r1382, %r1416, %r531;
	add.s32 	%r1384, %r1416, %r537;
	selp.b32 	%r1419, 16, 0, %p37;
	selp.b32 	%r1385, %r1419, 0, %p34;
	// begin inline asm
	cp.async.cg.shared.global [ %r1382 + 0 ], [ %rd137 + 0 ], 0x10, %r1385;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r1384 + 0 ], [ %rd137 + 0 ], 0x10, %r1385;
	// end inline asm
	cp.async.commit_group;
	.loc	1 124 51                        // gated_mlp.py:124:51
	setp.lt.s32 	%p38, %r11, %r1963;
	setp.lt.s32 	%p39, %r12, %r1963;
	setp.lt.s32 	%p40, %r13, %r1963;
	setp.lt.s32 	%p41, %r14, %r1963;
	setp.lt.s32 	%p42, %r15, %r1963;
	setp.lt.s32 	%p43, %r16, %r1963;
	setp.lt.s32 	%p44, %r17, %r1963;
	setp.lt.s32 	%p45, %r18, %r1963;
	.loc	1 124 20                        // gated_mlp.py:124:20
	shl.b32 	%r1420, %r1965, 14;
	add.s32 	%r1421, %r532, %r1420;
	add.s32 	%r1386, %r1421, %r545;
	add.s32 	%r1388, %r1421, %r550;
	add.s32 	%r1390, %r1421, %r552;
	add.s32 	%r1392, %r1421, %r557;
	add.s32 	%r1394, %r1421, %r560;
	add.s32 	%r1396, %r1421, %r565;
	add.s32 	%r1398, %r1421, %r567;
	add.s32 	%r1400, %r1421, %r572;
	selp.b32 	%r1430, 16, 0, %p38;
	selp.b32 	%r1387, %r1430, 0, %p34;
	// begin inline asm
	cp.async.cg.shared.global [ %r1386 + 0 ], [ %rd76 + 0 ], 0x10, %r1387;
	// end inline asm
	selp.b32 	%r1431, 16, 0, %p39;
	selp.b32 	%r1389, %r1431, 0, %p34;
	// begin inline asm
	cp.async.cg.shared.global [ %r1388 + 0 ], [ %rd77 + 0 ], 0x10, %r1389;
	// end inline asm
	selp.b32 	%r1432, 16, 0, %p40;
	selp.b32 	%r1391, %r1432, 0, %p34;
	// begin inline asm
	cp.async.cg.shared.global [ %r1390 + 0 ], [ %rd78 + 0 ], 0x10, %r1391;
	// end inline asm
	selp.b32 	%r1433, 16, 0, %p41;
	selp.b32 	%r1393, %r1433, 0, %p34;
	// begin inline asm
	cp.async.cg.shared.global [ %r1392 + 0 ], [ %rd79 + 0 ], 0x10, %r1393;
	// end inline asm
	selp.b32 	%r1434, 16, 0, %p42;
	selp.b32 	%r1395, %r1434, 0, %p34;
	// begin inline asm
	cp.async.cg.shared.global [ %r1394 + 0 ], [ %rd80 + 0 ], 0x10, %r1395;
	// end inline asm
	selp.b32 	%r1435, 16, 0, %p43;
	selp.b32 	%r1397, %r1435, 0, %p34;
	// begin inline asm
	cp.async.cg.shared.global [ %r1396 + 0 ], [ %rd81 + 0 ], 0x10, %r1397;
	// end inline asm
	selp.b32 	%r1436, 16, 0, %p44;
	selp.b32 	%r1399, %r1436, 0, %p34;
	// begin inline asm
	cp.async.cg.shared.global [ %r1398 + 0 ], [ %rd82 + 0 ], 0x10, %r1399;
	// end inline asm
	selp.b32 	%r1437, 16, 0, %p45;
	selp.b32 	%r1401, %r1437, 0, %p34;
	// begin inline asm
	cp.async.cg.shared.global [ %r1400 + 0 ], [ %rd83 + 0 ], 0x10, %r1401;
	// end inline asm
	cp.async.commit_group;
	.loc	1 120 22                        // gated_mlp.py:120:22
	add.s32 	%r2094, %r2094, 1;
	add.s64 	%rd138, %rd138, %rd12;
	add.s64 	%rd137, %rd137, 64;
	add.s32 	%r1963, %r1963, -32;
	setp.ne.s32 	%p46, %r19, %r2094;
	@%p46 bra 	$L__BB0_2;
$L__BB0_3:                              // %._crit_edge
	.loc	1 98 54                         // gated_mlp.py:98:54
	mul.lo.s32 	%r1838, %r4, %r2;
	sub.s32 	%r1839, %r3, %r1838;
	.loc	1 98 27                         // gated_mlp.py:98:27
	add.s32 	%r1840, %r1839, %r1;
	.loc	1 120 22                        // gated_mlp.py:120:22
	// begin inline asm
	// wait for regs: %r1966,%r1967,%r1968,%r1969,%r1970,%r1971,%r1972,%r1973,%r1974,%r1975,%r1976,%r1977,%r1978,%r1979,%r1980,%r1981,%r1982,%r1983,%r1984,%r1985,%r1986,%r1987,%r1988,%r1989,%r1990,%r1991,%r1992,%r1993,%r1994,%r1995,%r1996,%r1997,%r1998,%r1999,%r2000,%r2001,%r2002,%r2003,%r2004,%r2005,%r2006,%r2007,%r2008,%r2009,%r2010,%r2011,%r2012,%r2013,%r2014,%r2015,%r2016,%r2017,%r2018,%r2019,%r2020,%r2021,%r2022,%r2023,%r2024,%r2025,%r2026,%r2027,%r2028,%r2029,%r2030,%r2031,%r2032,%r2033,%r2034,%r2035,%r2036,%r2037,%r2038,%r2039,%r2040,%r2041,%r2042,%r2043,%r2044,%r2045,%r2046,%r2047,%r2048,%r2049,%r2050,%r2051,%r2052,%r2053,%r2054,%r2055,%r2056,%r2057,%r2058,%r2059,%r2060,%r2061,%r2062,%r2063,%r2064,%r2065,%r2066,%r2067,%r2068,%r2069,%r2070,%r2071,%r2072,%r2073,%r2074,%r2075,%r2076,%r2077,%r2078,%r2079,%r2080,%r2081,%r2082,%r2083,%r2084,%r2085,%r2086,%r2087,%r2088,%r2089,%r2090,%r2091,%r2092,%r2093
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	cp.async.wait_group 	0;
	bar.sync 	0;
	.loc	1 134 23                        // gated_mlp.py:134:23
	cvt.rn.f16x2.f32 	%r1695, %r1967, %r1966;
	cvt.rn.f16x2.f32 	%r1696, %r1969, %r1968;
	cvt.rn.f16x2.f32 	%r1697, %r1971, %r1970;
	cvt.rn.f16x2.f32 	%r1698, %r1973, %r1972;
	cvt.rn.f16x2.f32 	%r1700, %r1975, %r1974;
	cvt.rn.f16x2.f32 	%r1701, %r1977, %r1976;
	cvt.rn.f16x2.f32 	%r1702, %r1979, %r1978;
	cvt.rn.f16x2.f32 	%r1703, %r1981, %r1980;
	cvt.rn.f16x2.f32 	%r1705, %r1983, %r1982;
	cvt.rn.f16x2.f32 	%r1706, %r1985, %r1984;
	cvt.rn.f16x2.f32 	%r1707, %r1987, %r1986;
	cvt.rn.f16x2.f32 	%r1708, %r1989, %r1988;
	cvt.rn.f16x2.f32 	%r1710, %r1991, %r1990;
	cvt.rn.f16x2.f32 	%r1711, %r1993, %r1992;
	cvt.rn.f16x2.f32 	%r1712, %r1995, %r1994;
	cvt.rn.f16x2.f32 	%r1713, %r1997, %r1996;
	cvt.rn.f16x2.f32 	%r1715, %r1999, %r1998;
	cvt.rn.f16x2.f32 	%r1716, %r2001, %r2000;
	cvt.rn.f16x2.f32 	%r1717, %r2003, %r2002;
	cvt.rn.f16x2.f32 	%r1718, %r2005, %r2004;
	cvt.rn.f16x2.f32 	%r1720, %r2007, %r2006;
	cvt.rn.f16x2.f32 	%r1721, %r2009, %r2008;
	cvt.rn.f16x2.f32 	%r1722, %r2011, %r2010;
	cvt.rn.f16x2.f32 	%r1723, %r2013, %r2012;
	cvt.rn.f16x2.f32 	%r1725, %r2015, %r2014;
	cvt.rn.f16x2.f32 	%r1726, %r2017, %r2016;
	cvt.rn.f16x2.f32 	%r1727, %r2019, %r2018;
	cvt.rn.f16x2.f32 	%r1728, %r2021, %r2020;
	cvt.rn.f16x2.f32 	%r1730, %r2023, %r2022;
	cvt.rn.f16x2.f32 	%r1731, %r2025, %r2024;
	cvt.rn.f16x2.f32 	%r1732, %r2027, %r2026;
	cvt.rn.f16x2.f32 	%r1733, %r2029, %r2028;
	cvt.rn.f16x2.f32 	%r1735, %r2031, %r2030;
	cvt.rn.f16x2.f32 	%r1736, %r2033, %r2032;
	cvt.rn.f16x2.f32 	%r1737, %r2035, %r2034;
	cvt.rn.f16x2.f32 	%r1738, %r2037, %r2036;
	cvt.rn.f16x2.f32 	%r1740, %r2039, %r2038;
	cvt.rn.f16x2.f32 	%r1741, %r2041, %r2040;
	cvt.rn.f16x2.f32 	%r1742, %r2043, %r2042;
	cvt.rn.f16x2.f32 	%r1743, %r2045, %r2044;
	cvt.rn.f16x2.f32 	%r1745, %r2047, %r2046;
	cvt.rn.f16x2.f32 	%r1746, %r2049, %r2048;
	cvt.rn.f16x2.f32 	%r1747, %r2051, %r2050;
	cvt.rn.f16x2.f32 	%r1748, %r2053, %r2052;
	cvt.rn.f16x2.f32 	%r1750, %r2055, %r2054;
	cvt.rn.f16x2.f32 	%r1751, %r2057, %r2056;
	cvt.rn.f16x2.f32 	%r1752, %r2059, %r2058;
	cvt.rn.f16x2.f32 	%r1753, %r2061, %r2060;
	cvt.rn.f16x2.f32 	%r1755, %r2063, %r2062;
	cvt.rn.f16x2.f32 	%r1756, %r2065, %r2064;
	cvt.rn.f16x2.f32 	%r1757, %r2067, %r2066;
	cvt.rn.f16x2.f32 	%r1758, %r2069, %r2068;
	cvt.rn.f16x2.f32 	%r1760, %r2071, %r2070;
	cvt.rn.f16x2.f32 	%r1761, %r2073, %r2072;
	cvt.rn.f16x2.f32 	%r1762, %r2075, %r2074;
	cvt.rn.f16x2.f32 	%r1763, %r2077, %r2076;
	cvt.rn.f16x2.f32 	%r1765, %r2079, %r2078;
	cvt.rn.f16x2.f32 	%r1766, %r2081, %r2080;
	cvt.rn.f16x2.f32 	%r1767, %r2083, %r2082;
	cvt.rn.f16x2.f32 	%r1768, %r2085, %r2084;
	cvt.rn.f16x2.f32 	%r1770, %r2087, %r2086;
	cvt.rn.f16x2.f32 	%r1771, %r2089, %r2088;
	cvt.rn.f16x2.f32 	%r1772, %r2091, %r2090;
	cvt.rn.f16x2.f32 	%r1773, %r2093, %r2092;
	.loc	1 138 22                        // gated_mlp.py:138:22
	shl.b32 	%r1841, %r1840, 6;
	.loc	1 138 37                        // gated_mlp.py:138:37
	or.b32 	%r1842, %r1841, %r11;
	or.b32 	%r1843, %r1841, %r12;
	or.b32 	%r1844, %r1841, %r13;
	or.b32 	%r1845, %r1841, %r14;
	or.b32 	%r1846, %r1841, %r15;
	or.b32 	%r1847, %r1841, %r16;
	or.b32 	%r1848, %r1841, %r17;
	or.b32 	%r1849, %r1841, %r18;
	or.b32 	%r1850, %r10, %r1841;
	or.b32 	%r1851, %r1850, 60;
	.loc	1 140 33                        // gated_mlp.py:140:33
	mul.lo.s32 	%r1852, %r1842, %r430;
	mul.lo.s32 	%r1853, %r1843, %r430;
	mul.lo.s32 	%r1854, %r1844, %r430;
	mul.lo.s32 	%r1855, %r1845, %r430;
	mul.lo.s32 	%r1856, %r1846, %r430;
	mul.lo.s32 	%r1857, %r1847, %r430;
	mul.lo.s32 	%r1858, %r1848, %r430;
	mul.lo.s32 	%r1859, %r1849, %r430;
	shl.b32 	%r1860, %r430, 5;
	add.s32 	%r1861, %r1852, %r1860;
	shl.b32 	%r1862, %r430, 2;
	add.s32 	%r1863, %r1861, %r1862;
	add.s32 	%r1864, %r1863, %r1862;
	add.s32 	%r1865, %r1864, %r1862;
	add.s32 	%r1866, %r1865, %r1862;
	add.s32 	%r1867, %r1866, %r1862;
	add.s32 	%r1868, %r1867, %r1862;
	mul.lo.s32 	%r1869, %r1851, %r430;
	.loc	1 140 21                        // gated_mlp.py:140:21
	mul.wide.s32 	%rd104, %r1852, 2;
	add.s64 	%rd105, %rd27, %rd104;
	mul.wide.s32 	%rd106, %r1853, 2;
	add.s64 	%rd107, %rd27, %rd106;
	mul.wide.s32 	%rd108, %r1854, 2;
	add.s64 	%rd109, %rd27, %rd108;
	mul.wide.s32 	%rd110, %r1855, 2;
	add.s64 	%rd111, %rd27, %rd110;
	mul.wide.s32 	%rd112, %r1856, 2;
	add.s64 	%rd113, %rd27, %rd112;
	mul.wide.s32 	%rd114, %r1857, 2;
	add.s64 	%rd115, %rd27, %rd114;
	mul.wide.s32 	%rd116, %r1858, 2;
	add.s64 	%rd117, %rd27, %rd116;
	mul.wide.s32 	%rd118, %r1859, 2;
	add.s64 	%rd119, %rd27, %rd118;
	mul.wide.s32 	%rd120, %r1861, 2;
	add.s64 	%rd121, %rd27, %rd120;
	mul.wide.s32 	%rd122, %r1863, 2;
	add.s64 	%rd123, %rd27, %rd122;
	mul.wide.s32 	%rd124, %r1864, 2;
	add.s64 	%rd125, %rd27, %rd124;
	mul.wide.s32 	%rd126, %r1865, 2;
	add.s64 	%rd127, %rd27, %rd126;
	mul.wide.s32 	%rd128, %r1866, 2;
	add.s64 	%rd129, %rd27, %rd128;
	mul.wide.s32 	%rd130, %r1867, 2;
	add.s64 	%rd131, %rd27, %rd130;
	mul.wide.s32 	%rd132, %r1868, 2;
	add.s64 	%rd133, %rd27, %rd132;
	mul.wide.s32 	%rd134, %r1869, 2;
	add.s64 	%rd135, %rd27, %rd134;
	.loc	1 140 52                        // gated_mlp.py:140:52
	mul.wide.s32 	%rd136, %r9, 2;
	add.s64 	%rd88, %rd105, %rd136;
	add.s64 	%rd89, %rd107, %rd136;
	add.s64 	%rd90, %rd109, %rd136;
	add.s64 	%rd91, %rd111, %rd136;
	add.s64 	%rd92, %rd113, %rd136;
	add.s64 	%rd93, %rd115, %rd136;
	add.s64 	%rd94, %rd117, %rd136;
	add.s64 	%rd95, %rd119, %rd136;
	add.s64 	%rd96, %rd121, %rd136;
	add.s64 	%rd97, %rd123, %rd136;
	add.s64 	%rd98, %rd125, %rd136;
	add.s64 	%rd99, %rd127, %rd136;
	add.s64 	%rd100, %rd129, %rd136;
	add.s64 	%rd101, %rd131, %rd136;
	add.s64 	%rd102, %rd133, %rd136;
	add.s64 	%rd103, %rd135, %rd136;
	.loc	1 141 33                        // gated_mlp.py:141:33
	setp.lt.s32 	%p63, %r1842, 1;
	setp.lt.s32 	%p64, %r1843, 1;
	setp.lt.s32 	%p65, %r1844, 1;
	setp.lt.s32 	%p66, %r1845, 1;
	setp.lt.s32 	%p67, %r1846, 1;
	setp.lt.s32 	%p68, %r1847, 1;
	setp.lt.s32 	%p69, %r1848, 1;
	setp.lt.s32 	%p70, %r1849, 1;
	setp.lt.s32 	%p71, %r1841, 0;
	.loc	1 141 58                        // gated_mlp.py:141:58
	setp.lt.s32 	%p72, %r9, %r428;
	.loc	1 141 39                        // gated_mlp.py:141:39
	and.pred 	%p47, %p72, %p63;
	and.pred 	%p48, %p72, %p64;
	and.pred 	%p49, %p72, %p65;
	and.pred 	%p50, %p72, %p66;
	and.pred 	%p51, %p72, %p67;
	and.pred 	%p52, %p72, %p68;
	and.pred 	%p53, %p72, %p69;
	and.pred 	%p54, %p72, %p70;
	and.pred 	%p55, %p72, %p71;
	.loc	1 142 21                        // gated_mlp.py:142:21
	and.b32 	%r1870, %r24, 1792;
	shr.u32 	%r1871, %r7, 1;
	or.b32 	%r1872, %r1870, %r1871;
	shl.b32 	%r1873, %r5, 7;
	and.b32 	%r1874, %r1873, 12288;
	or.b32 	%r1875, %r1872, %r1874;
	or.b32 	%r1876, %r1875, %r25;
	or.b32 	%r1877, %r21, %r20;
	or.b32 	%r1878, %r1877, %r8;
	shr.u32 	%r1879, %r1876, 4;
	and.b32 	%r1880, %r1879, 1022;
	add.s32 	%r1882, %r532, %r1880;
	shl.b32 	%r1883, %r1876, 1;
	add.s32 	%r1694, %r1882, %r1883;
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r1694], {%r1695, %r1696, %r1697, %r1698};
	// end inline asm
	add.s32 	%r1699, %r1694, 32;
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r1699], {%r1700, %r1701, %r1702, %r1703};
	// end inline asm
	add.s32 	%r1704, %r1694, 64;
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r1704], {%r1705, %r1706, %r1707, %r1708};
	// end inline asm
	add.s32 	%r1709, %r1694, 96;
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r1709], {%r1710, %r1711, %r1712, %r1713};
	// end inline asm
	add.s32 	%r1714, %r1694, 128;
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r1714], {%r1715, %r1716, %r1717, %r1718};
	// end inline asm
	add.s32 	%r1719, %r1694, 160;
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r1719], {%r1720, %r1721, %r1722, %r1723};
	// end inline asm
	add.s32 	%r1724, %r1694, 192;
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r1724], {%r1725, %r1726, %r1727, %r1728};
	// end inline asm
	add.s32 	%r1729, %r1694, 224;
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r1729], {%r1730, %r1731, %r1732, %r1733};
	// end inline asm
	add.s32 	%r1734, %r1694, 256;
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r1734], {%r1735, %r1736, %r1737, %r1738};
	// end inline asm
	add.s32 	%r1739, %r1694, 288;
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r1739], {%r1740, %r1741, %r1742, %r1743};
	// end inline asm
	add.s32 	%r1744, %r1694, 320;
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r1744], {%r1745, %r1746, %r1747, %r1748};
	// end inline asm
	add.s32 	%r1749, %r1694, 352;
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r1749], {%r1750, %r1751, %r1752, %r1753};
	// end inline asm
	add.s32 	%r1754, %r1694, 384;
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r1754], {%r1755, %r1756, %r1757, %r1758};
	// end inline asm
	add.s32 	%r1759, %r1694, 416;
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r1759], {%r1760, %r1761, %r1762, %r1763};
	// end inline asm
	add.s32 	%r1764, %r1694, 448;
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r1764], {%r1765, %r1766, %r1767, %r1768};
	// end inline asm
	add.s32 	%r1769, %r1694, 480;
	// begin inline asm
	stmatrix.sync.aligned.m8n8.x4.shared.b16 [%r1769], {%r1770, %r1771, %r1772, %r1773};
	// end inline asm
	bar.sync 	0;
	shr.u32 	%r1884, %r1877, 4;
	add.s32 	%r1885, %r532, %r1884;
	shl.b32 	%r1886, %r1878, 1;
	add.s32 	%r1887, %r1885, %r1886;
	ld.shared.v4.b32 	{%r1774, %r1775, %r1776, %r1777}, [%r1887];
	or.b32 	%r1888, %r1877, 1024;
	shr.u32 	%r1889, %r1888, 4;
	and.b32 	%r1890, %r1889, 112;
	add.s32 	%r1891, %r532, %r1890;
	add.s32 	%r1892, %r1891, %r1886;
	ld.shared.v4.b32 	{%r1778, %r1779, %r1780, %r1781}, [%r1892+2048];
	or.b32 	%r1893, %r1877, 2048;
	shr.u32 	%r1894, %r1893, 4;
	and.b32 	%r1895, %r1894, 176;
	add.s32 	%r1896, %r532, %r1895;
	add.s32 	%r1897, %r1896, %r1886;
	ld.shared.v4.b32 	{%r1782, %r1783, %r1784, %r1785}, [%r1897+4096];
	or.b32 	%r1898, %r1877, 3072;
	shr.u32 	%r1899, %r1898, 4;
	and.b32 	%r1900, %r1899, 240;
	add.s32 	%r1901, %r532, %r1900;
	add.s32 	%r1902, %r1901, %r1886;
	ld.shared.v4.b32 	{%r1786, %r1787, %r1788, %r1789}, [%r1902+6144];
	or.b32 	%r1903, %r1877, 4096;
	shr.u32 	%r1904, %r1903, 4;
	and.b32 	%r1905, %r1904, 304;
	add.s32 	%r1906, %r532, %r1905;
	add.s32 	%r1907, %r1906, %r1886;
	ld.shared.v4.b32 	{%r1790, %r1791, %r1792, %r1793}, [%r1907+8192];
	or.b32 	%r1908, %r1877, 5120;
	shr.u32 	%r1909, %r1908, 4;
	and.b32 	%r1910, %r1909, 368;
	add.s32 	%r1911, %r532, %r1910;
	add.s32 	%r1912, %r1911, %r1886;
	ld.shared.v4.b32 	{%r1794, %r1795, %r1796, %r1797}, [%r1912+10240];
	or.b32 	%r1913, %r1877, 6144;
	shr.u32 	%r1914, %r1913, 4;
	and.b32 	%r1915, %r1914, 432;
	add.s32 	%r1916, %r532, %r1915;
	add.s32 	%r1917, %r1916, %r1886;
	ld.shared.v4.b32 	{%r1798, %r1799, %r1800, %r1801}, [%r1917+12288];
	or.b32 	%r1918, %r1877, 7168;
	shr.u32 	%r1919, %r1918, 4;
	and.b32 	%r1920, %r1919, 496;
	add.s32 	%r1921, %r532, %r1920;
	add.s32 	%r1922, %r1921, %r1886;
	ld.shared.v4.b32 	{%r1802, %r1803, %r1804, %r1805}, [%r1922+14336];
	or.b32 	%r1923, %r1877, 8192;
	shr.u32 	%r1924, %r1923, 4;
	and.b32 	%r1925, %r1924, 560;
	add.s32 	%r1926, %r532, %r1925;
	add.s32 	%r1927, %r1926, %r1886;
	ld.shared.v4.b32 	{%r1806, %r1807, %r1808, %r1809}, [%r1927+16384];
	or.b32 	%r1928, %r1877, 9216;
	shr.u32 	%r1929, %r1928, 4;
	and.b32 	%r1930, %r1929, 624;
	add.s32 	%r1931, %r532, %r1930;
	add.s32 	%r1932, %r1931, %r1886;
	ld.shared.v4.b32 	{%r1810, %r1811, %r1812, %r1813}, [%r1932+18432];
	or.b32 	%r1933, %r1877, 10240;
	shr.u32 	%r1934, %r1933, 4;
	and.b32 	%r1935, %r1934, 688;
	add.s32 	%r1936, %r532, %r1935;
	add.s32 	%r1937, %r1936, %r1886;
	ld.shared.v4.b32 	{%r1814, %r1815, %r1816, %r1817}, [%r1937+20480];
	or.b32 	%r1938, %r1877, 11264;
	shr.u32 	%r1939, %r1938, 4;
	and.b32 	%r1940, %r1939, 752;
	add.s32 	%r1941, %r532, %r1940;
	add.s32 	%r1942, %r1941, %r1886;
	ld.shared.v4.b32 	{%r1818, %r1819, %r1820, %r1821}, [%r1942+22528];
	or.b32 	%r1943, %r1877, 12288;
	shr.u32 	%r1944, %r1943, 4;
	and.b32 	%r1945, %r1944, 816;
	add.s32 	%r1946, %r532, %r1945;
	add.s32 	%r1947, %r1946, %r1886;
	ld.shared.v4.b32 	{%r1822, %r1823, %r1824, %r1825}, [%r1947+24576];
	or.b32 	%r1948, %r1877, 13312;
	shr.u32 	%r1949, %r1948, 4;
	and.b32 	%r1950, %r1949, 880;
	add.s32 	%r1951, %r532, %r1950;
	add.s32 	%r1952, %r1951, %r1886;
	ld.shared.v4.b32 	{%r1826, %r1827, %r1828, %r1829}, [%r1952+26624];
	or.b32 	%r1953, %r1877, 14336;
	shr.u32 	%r1954, %r1953, 4;
	and.b32 	%r1955, %r1954, 944;
	add.s32 	%r1956, %r532, %r1955;
	add.s32 	%r1957, %r1956, %r1886;
	ld.shared.v4.b32 	{%r1830, %r1831, %r1832, %r1833}, [%r1957+28672];
	or.b32 	%r1958, %r1877, 15360;
	shr.u32 	%r1959, %r1958, 4;
	and.b32 	%r1960, %r1959, 1008;
	add.s32 	%r1961, %r532, %r1960;
	add.s32 	%r1962, %r1961, %r1886;
	ld.shared.v4.b32 	{%r1834, %r1835, %r1836, %r1837}, [%r1962+30720];
	// begin inline asm
	@%p47 st.global.v4.b32 [ %rd88 + 0 ], { %r1774, %r1775, %r1776, %r1777 };
	// end inline asm
	// begin inline asm
	@%p48 st.global.v4.b32 [ %rd89 + 0 ], { %r1778, %r1779, %r1780, %r1781 };
	// end inline asm
	// begin inline asm
	@%p49 st.global.v4.b32 [ %rd90 + 0 ], { %r1782, %r1783, %r1784, %r1785 };
	// end inline asm
	// begin inline asm
	@%p50 st.global.v4.b32 [ %rd91 + 0 ], { %r1786, %r1787, %r1788, %r1789 };
	// end inline asm
	// begin inline asm
	@%p51 st.global.v4.b32 [ %rd92 + 0 ], { %r1790, %r1791, %r1792, %r1793 };
	// end inline asm
	// begin inline asm
	@%p52 st.global.v4.b32 [ %rd93 + 0 ], { %r1794, %r1795, %r1796, %r1797 };
	// end inline asm
	// begin inline asm
	@%p53 st.global.v4.b32 [ %rd94 + 0 ], { %r1798, %r1799, %r1800, %r1801 };
	// end inline asm
	// begin inline asm
	@%p54 st.global.v4.b32 [ %rd95 + 0 ], { %r1802, %r1803, %r1804, %r1805 };
	// end inline asm
	// begin inline asm
	@%p55 st.global.v4.b32 [ %rd96 + 0 ], { %r1806, %r1807, %r1808, %r1809 };
	// end inline asm
	// begin inline asm
	@%p55 st.global.v4.b32 [ %rd97 + 0 ], { %r1810, %r1811, %r1812, %r1813 };
	// end inline asm
	// begin inline asm
	@%p55 st.global.v4.b32 [ %rd98 + 0 ], { %r1814, %r1815, %r1816, %r1817 };
	// end inline asm
	// begin inline asm
	@%p55 st.global.v4.b32 [ %rd99 + 0 ], { %r1818, %r1819, %r1820, %r1821 };
	// end inline asm
	// begin inline asm
	@%p55 st.global.v4.b32 [ %rd100 + 0 ], { %r1822, %r1823, %r1824, %r1825 };
	// end inline asm
	// begin inline asm
	@%p55 st.global.v4.b32 [ %rd101 + 0 ], { %r1826, %r1827, %r1828, %r1829 };
	// end inline asm
	// begin inline asm
	@%p55 st.global.v4.b32 [ %rd102 + 0 ], { %r1830, %r1831, %r1832, %r1833 };
	// end inline asm
	// begin inline asm
	@%p55 st.global.v4.b32 [ %rd103 + 0 ], { %r1834, %r1835, %r1836, %r1837 };
	// end inline asm
	.loc	1 142 4                         // gated_mlp.py:142:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/ubuntu/PTX_dataset/triton_ptx/gated_mlp.py"
	.file	2 "/home/joy/miniconda3/envs/ptx/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 157                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x96 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 103                                 // DW_AT_name
.b8 97
.b8 116
.b8 101
.b8 100
.b8 95
.b8 109
.b8 108
.b8 112
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 117
.b8 98
.b8 117
.b8 110
.b8 116
.b8 117
.b8 47
.b8 80
.b8 84
.b8 88
.b8 95
.b8 100
.b8 97
.b8 116
.b8 97
.b8 115
.b8 101
.b8 116
.b8 47
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 116
.b8 120
.b8 0
.b8 2                                   // Abbrev [2] 0x4a:0x10 DW_TAG_subprogram
.b8 109                                 // DW_AT_name
.b8 97
.b8 116
.b8 109
.b8 117
.b8 108
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x5a:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 74                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x6f:0x18 DW_TAG_inlined_subroutine
.b32 74                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 93                                  // DW_AT_call_line
.b8 27                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x87:0x18 DW_TAG_inlined_subroutine
.b32 74                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 120                                 // DW_AT_call_line
.b8 33                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
