//
// Generated by LLVM NVPTX Back-End
//

.version 8.7
.target sm_90a
.address_size 64

	// .globl	mul_kernel              // -- Begin function mul_kernel
                                        // @mul_kernel
.visible .entry mul_kernel(
	.param .u64 .ptr .global .align 1 mul_kernel_param_0,
	.param .u64 .ptr .global .align 1 mul_kernel_param_1,
	.param .u64 .ptr .global .align 1 mul_kernel_param_2,
	.param .u32 mul_kernel_param_3,
	.param .u64 .ptr .global .align 1 mul_kernel_param_4
)
.reqntid 128
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<20>;
	.reg .b64 	%rd<8>;
	.loc	1 168 0                         // gated_mlp.py:168:0
$L__func_begin0:
	.loc	1 168 0                         // gated_mlp.py:168:0

// %bb.0:
	ld.param.b64 	%rd4, [mul_kernel_param_0];
	ld.param.b64 	%rd5, [mul_kernel_param_1];
$L__tmp0:
	.loc	1 177 24                        // gated_mlp.py:177:24
	mov.u32 	%r13, %ctaid.x;
	.loc	1 182 24                        // gated_mlp.py:182:24
	shl.b32 	%r14, %r13, 10;
	ld.param.b64 	%rd6, [mul_kernel_param_2];
	ld.param.b32 	%r15, [mul_kernel_param_3];
	.loc	1 183 41                        // gated_mlp.py:183:41
	mov.u32 	%r16, %tid.x;
	shl.b32 	%r17, %r16, 3;
	and.b32 	%r18, %r17, 1016;
	.loc	1 183 28                        // gated_mlp.py:183:28
	or.b32 	%r19, %r18, %r14;
	.loc	1 185 21                        // gated_mlp.py:185:21
	setp.lt.s32 	%p1, %r19, %r15;
	.loc	1 188 24                        // gated_mlp.py:188:24
	mul.wide.s32 	%rd7, %r19, 2;
	add.s64 	%rd1, %rd4, %rd7;
	.loc	1 188 16                        // gated_mlp.py:188:16
	// begin inline asm
	mov.u32 %r1, 0x0;
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	@%p1 ld.global.v4.b32 { %r1, %r2, %r3, %r4 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 189 24                        // gated_mlp.py:189:24
	add.s64 	%rd2, %rd5, %rd7;
	.loc	1 189 16                        // gated_mlp.py:189:16
	// begin inline asm
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	@%p1 ld.global.v4.b32 { %r5, %r6, %r7, %r8 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 190 17                        // gated_mlp.py:190:17
	mul.f16x2 	%r9, %r1, %r5;
	mul.f16x2 	%r10, %r2, %r6;
	mul.f16x2 	%r11, %r3, %r7;
	mul.f16x2 	%r12, %r4, %r8;
	.loc	1 192 26                        // gated_mlp.py:192:26
	add.s64 	%rd3, %rd6, %rd7;
	.loc	1 192 35                        // gated_mlp.py:192:35
	// begin inline asm
	@%p1 st.global.v4.b32 [ %rd3 + 0 ], { %r9, %r10, %r11, %r12 };
	// end inline asm
	.loc	1 192 4                         // gated_mlp.py:192:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/ubuntu/PTX_dataset/triton_ptx/gated_mlp.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 70                                 // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x3f DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 103                                 // DW_AT_name
.b8 97
.b8 116
.b8 101
.b8 100
.b8 95
.b8 109
.b8 108
.b8 112
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 117
.b8 98
.b8 117
.b8 110
.b8 116
.b8 117
.b8 47
.b8 80
.b8 84
.b8 88
.b8 95
.b8 100
.b8 97
.b8 116
.b8 97
.b8 115
.b8 101
.b8 116
.b8 47
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 116
.b8 120
.b8 0
	}
	.section	.debug_macinfo	{	}
