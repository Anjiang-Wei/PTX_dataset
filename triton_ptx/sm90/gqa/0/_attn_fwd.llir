; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-p7:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16
@.str = private unnamed_addr constant [11 x i8] c"__CUDA_FTZ\00", align 1

define ptx_kernel void @_attn_fwd(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, float %3, ptr addrspace(1) %4, ptr addrspace(1) %5, i32 %6, i32 %7, i32 %8, i32 %9, i32 %10, i32 %11, i32 %12, i32 %13, i32 %14, i32 %15, i32 %16, i32 %17, i32 %18, ptr addrspace(1) readnone captures(none) %19) local_unnamed_addr #0 !dbg !5 {
  %21 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !8
  %22 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !dbg !9
  %.frozen = freeze i32 %18, !dbg !10
  %23 = sdiv i32 %22, %.frozen, !dbg !10
  %24 = mul i32 %23, %.frozen, !dbg !11
  %.decomposed = sub i32 %22, %24, !dbg !11
  %25 = sext i32 %23 to i64, !dbg !12
  %26 = sext i32 %6 to i64, !dbg !13
  %27 = mul nsw i64 %25, %26, !dbg !13
  %28 = zext nneg i32 %.decomposed to i64, !dbg !14
  %29 = sext i32 %7 to i64, !dbg !15
  %30 = mul nsw i64 %28, %29, !dbg !15
  %31 = add nsw i64 %30, %27, !dbg !16
  %32 = getelementptr half, ptr addrspace(1) %0, i64 %31, !dbg !17
  %33 = shl i32 %21, 7, !dbg !18
  %34 = sext i32 %8 to i64, !dbg !19
  %35 = sext i32 %33 to i64, !dbg !19
  %36 = getelementptr half, ptr addrspace(1) %2, i64 %31, !dbg !20
  %37 = sext i32 %14 to i64, !dbg !21
  %38 = getelementptr half, ptr addrspace(1) %1, i64 %31, !dbg !22
  %39 = sext i32 %11 to i64, !dbg !23
  %40 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !24
  %41 = lshr i32 %40, 5, !dbg !24
  %42 = and i32 %40, 32, !dbg !24
  %43 = icmp eq i32 %42, 0, !dbg !24
  %44 = and i32 %40, 128, !dbg !24
  %45 = lshr i32 %40, 3, !dbg !24
  %46 = and i32 %45, 31, !dbg !24
  %47 = or disjoint i32 %46, 32, !dbg !24
  %48 = or disjoint i32 %46, 64, !dbg !24
  %49 = or i32 %45, 96, !dbg !24
  %50 = fmul float %3, 0x3FF7154760000000, !dbg !25
  %51 = zext nneg i32 %46 to i64, !dbg !26
  %52 = zext nneg i32 %47 to i64, !dbg !26
  %53 = zext nneg i32 %48 to i64, !dbg !26
  %54 = zext nneg i32 %49 to i64, !dbg !26
  %55 = or disjoint i64 %51, %35, !dbg !26
  %56 = or disjoint i64 %52, %35, !dbg !26
  %57 = or disjoint i64 %53, %35, !dbg !26
  %58 = or disjoint i64 %54, %35, !dbg !26
  %59 = mul nsw i64 %55, %34, !dbg !26
  %60 = mul nsw i64 %56, %34, !dbg !26
  %61 = mul nsw i64 %57, %34, !dbg !26
  %62 = mul nsw i64 %58, %34, !dbg !26
  %63 = shl nuw nsw i32 %40, 3, !dbg !26
  %64 = and i32 %63, 56, !dbg !26
  %65 = zext nneg i32 %64 to i64, !dbg !26
  %66 = getelementptr half, ptr addrspace(1) %32, i64 %59, !dbg !26
  %67 = getelementptr half, ptr addrspace(1) %66, i64 %65, !dbg !26
  %68 = getelementptr half, ptr addrspace(1) %32, i64 %60, !dbg !26
  %69 = getelementptr half, ptr addrspace(1) %68, i64 %65, !dbg !26
  %70 = getelementptr half, ptr addrspace(1) %32, i64 %61, !dbg !26
  %71 = getelementptr half, ptr addrspace(1) %70, i64 %65, !dbg !26
  %72 = getelementptr half, ptr addrspace(1) %32, i64 %62, !dbg !26
  %73 = getelementptr half, ptr addrspace(1) %72, i64 %65, !dbg !26
  %74 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l"(ptr addrspace(1) %67) #2, !dbg !26
  %75 = extractvalue { i32, i32, i32, i32 } %74, 0, !dbg !26
  %76 = bitcast i32 %75 to <2 x half>, !dbg !26
  %77 = extractvalue { i32, i32, i32, i32 } %74, 1, !dbg !26
  %78 = bitcast i32 %77 to <2 x half>, !dbg !26
  %79 = extractvalue { i32, i32, i32, i32 } %74, 2, !dbg !26
  %80 = bitcast i32 %79 to <2 x half>, !dbg !26
  %81 = shufflevector <2 x half> %80, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %82 = extractvalue { i32, i32, i32, i32 } %74, 3, !dbg !26
  %83 = bitcast i32 %82 to <2 x half>, !dbg !26
  %84 = shufflevector <2 x half> %83, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %85 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l"(ptr addrspace(1) %69) #2, !dbg !26
  %86 = extractvalue { i32, i32, i32, i32 } %85, 0, !dbg !26
  %87 = bitcast i32 %86 to <2 x half>, !dbg !26
  %88 = extractvalue { i32, i32, i32, i32 } %85, 1, !dbg !26
  %89 = bitcast i32 %88 to <2 x half>, !dbg !26
  %90 = extractvalue { i32, i32, i32, i32 } %85, 2, !dbg !26
  %91 = bitcast i32 %90 to <2 x half>, !dbg !26
  %92 = shufflevector <2 x half> %91, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %93 = extractvalue { i32, i32, i32, i32 } %85, 3, !dbg !26
  %94 = bitcast i32 %93 to <2 x half>, !dbg !26
  %95 = shufflevector <2 x half> %94, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %96 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l"(ptr addrspace(1) %71) #2, !dbg !26
  %97 = extractvalue { i32, i32, i32, i32 } %96, 0, !dbg !26
  %98 = bitcast i32 %97 to <2 x half>, !dbg !26
  %99 = extractvalue { i32, i32, i32, i32 } %96, 1, !dbg !26
  %100 = bitcast i32 %99 to <2 x half>, !dbg !26
  %101 = extractvalue { i32, i32, i32, i32 } %96, 2, !dbg !26
  %102 = bitcast i32 %101 to <2 x half>, !dbg !26
  %103 = shufflevector <2 x half> %102, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %104 = extractvalue { i32, i32, i32, i32 } %96, 3, !dbg !26
  %105 = bitcast i32 %104 to <2 x half>, !dbg !26
  %106 = shufflevector <2 x half> %105, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %107 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l"(ptr addrspace(1) %73) #2, !dbg !26
  %108 = extractvalue { i32, i32, i32, i32 } %107, 0, !dbg !26
  %109 = bitcast i32 %108 to <2 x half>, !dbg !26
  %110 = extractvalue { i32, i32, i32, i32 } %107, 1, !dbg !26
  %111 = bitcast i32 %110 to <2 x half>, !dbg !26
  %112 = extractvalue { i32, i32, i32, i32 } %107, 2, !dbg !26
  %113 = bitcast i32 %112 to <2 x half>, !dbg !26
  %114 = shufflevector <2 x half> %113, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %115 = extractvalue { i32, i32, i32, i32 } %107, 3, !dbg !26
  %116 = bitcast i32 %115 to <2 x half>, !dbg !26
  %117 = shufflevector <2 x half> %116, <2 x half> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %118 = select i1 %43, i32 0, i32 288, !dbg !26
  %119 = and i32 %40, 24, !dbg !26
  %120 = mul nuw nsw i32 %119, 9, !dbg !26
  %121 = xor i32 %120, %64, !dbg !26
  %122 = xor i32 %121, %118, !dbg !26
  %123 = and i32 %63, 512, !dbg !26
  %124 = shl nuw nsw i32 %44, 3, !dbg !26
  %125 = or disjoint i32 %123, %122, !dbg !26
  %126 = or disjoint i32 %125, %124, !dbg !26
  %127 = getelementptr inbounds nuw half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 65536), i32 %126, !dbg !26
  %128 = shufflevector <2 x half> %76, <2 x half> %78, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %129 = shufflevector <8 x half> %128, <8 x half> %81, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !26
  %130 = shufflevector <8 x half> %129, <8 x half> %84, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !26
  store <8 x half> %130, ptr addrspace(3) %127, align 16, !dbg !26
  %131 = or disjoint i32 %64, 2048, !dbg !26
  %132 = xor i32 %120, %131, !dbg !26
  %133 = xor i32 %132, %118, !dbg !26
  %134 = or disjoint i32 %133, %123, !dbg !26
  %135 = or disjoint i32 %134, %124, !dbg !26
  %136 = getelementptr inbounds nuw half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 65536), i32 %135, !dbg !26
  %137 = shufflevector <2 x half> %87, <2 x half> %89, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %138 = shufflevector <8 x half> %137, <8 x half> %92, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !26
  %139 = shufflevector <8 x half> %138, <8 x half> %95, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !26
  store <8 x half> %139, ptr addrspace(3) %136, align 16, !dbg !26
  %140 = or disjoint i32 %64, 4096, !dbg !26
  %141 = xor i32 %120, %140, !dbg !26
  %142 = xor i32 %141, %118, !dbg !26
  %143 = getelementptr inbounds nuw half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 65536), i32 %142, !dbg !26
  %144 = getelementptr inbounds nuw half, ptr addrspace(3) %143, i32 %123, !dbg !26
  %145 = getelementptr inbounds nuw half, ptr addrspace(3) %144, i32 %124, !dbg !26
  %146 = shufflevector <2 x half> %98, <2 x half> %100, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %147 = shufflevector <8 x half> %146, <8 x half> %103, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !26
  %148 = shufflevector <8 x half> %147, <8 x half> %106, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !26
  store <8 x half> %148, ptr addrspace(3) %145, align 16, !dbg !26
  %149 = or disjoint i32 %64, 6144, !dbg !26
  %150 = xor i32 %120, %149, !dbg !26
  %151 = xor i32 %150, %118, !dbg !26
  %152 = getelementptr inbounds nuw half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 65536), i32 %151, !dbg !26
  %153 = getelementptr inbounds nuw half, ptr addrspace(3) %152, i32 %123, !dbg !26
  %154 = getelementptr inbounds nuw half, ptr addrspace(3) %153, i32 %124, !dbg !26
  %155 = shufflevector <2 x half> %109, <2 x half> %111, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !26
  %156 = shufflevector <8 x half> %155, <8 x half> %114, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !26
  %157 = shufflevector <8 x half> %156, <8 x half> %117, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !26
  store <8 x half> %157, ptr addrspace(3) %154, align 16, !dbg !26
  %158 = mul nsw i64 %39, %51, !dbg !27
  %159 = mul nsw i64 %39, %52, !dbg !27
  %160 = getelementptr half, ptr addrspace(1) %38, i64 %158, !dbg !27
  %161 = getelementptr half, ptr addrspace(1) %160, i64 %65, !dbg !27
  %162 = getelementptr half, ptr addrspace(1) %38, i64 %159, !dbg !27
  %163 = getelementptr half, ptr addrspace(1) %162, i64 %65, !dbg !27
  %164 = getelementptr inbounds nuw half, ptr addrspace(3) @global_smem, i32 %126, !dbg !27
  %165 = getelementptr inbounds nuw half, ptr addrspace(3) @global_smem, i32 %135, !dbg !27
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %164, ptr addrspace(1) %161, i32 16) #2, !dbg !27
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %165, ptr addrspace(1) %163, i32 16) #2, !dbg !27
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !27
  %166 = mul nsw i64 %37, %51, !dbg !30
  %167 = mul nsw i64 %37, %52, !dbg !30
  %168 = getelementptr half, ptr addrspace(1) %36, i64 %166, !dbg !30
  %169 = getelementptr half, ptr addrspace(1) %168, i64 %65, !dbg !30
  %170 = getelementptr half, ptr addrspace(1) %36, i64 %167, !dbg !30
  %171 = getelementptr half, ptr addrspace(1) %170, i64 %65, !dbg !30
  %172 = getelementptr inbounds nuw half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %126, !dbg !30
  %173 = getelementptr inbounds nuw half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %135, !dbg !30
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %172, ptr addrspace(1) %169, i32 16) #2, !dbg !30
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %173, ptr addrspace(1) %171, i32 16) #2, !dbg !30
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !30
  %174 = or disjoint i64 %51, 64, !dbg !27
  %175 = or disjoint i64 %52, 64, !dbg !27
  %176 = mul nsw i64 %174, %39, !dbg !27
  %177 = mul nsw i64 %175, %39, !dbg !27
  %178 = getelementptr half, ptr addrspace(1) %38, i64 %176, !dbg !27
  %179 = getelementptr half, ptr addrspace(1) %178, i64 %65, !dbg !27
  %180 = getelementptr half, ptr addrspace(1) %38, i64 %177, !dbg !27
  %181 = getelementptr half, ptr addrspace(1) %180, i64 %65, !dbg !27
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !27
  %182 = getelementptr inbounds nuw half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %126, !dbg !27
  %183 = getelementptr inbounds nuw half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %135, !dbg !27
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %182, ptr addrspace(1) %179, i32 16) #2, !dbg !27
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %183, ptr addrspace(1) %181, i32 16) #2, !dbg !27
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !27
  %184 = mul nsw i64 %174, %37, !dbg !30
  %185 = mul nsw i64 %175, %37, !dbg !30
  %186 = getelementptr half, ptr addrspace(1) %36, i64 %184, !dbg !30
  %187 = getelementptr half, ptr addrspace(1) %186, i64 %65, !dbg !30
  %188 = getelementptr half, ptr addrspace(1) %36, i64 %185, !dbg !30
  %189 = getelementptr half, ptr addrspace(1) %188, i64 %65, !dbg !30
  %190 = getelementptr inbounds nuw half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 40960), i32 %126, !dbg !30
  %191 = getelementptr inbounds nuw half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 40960), i32 %135, !dbg !30
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %190, ptr addrspace(1) %187, i32 16) #2, !dbg !30
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %191, ptr addrspace(1) %189, i32 16) #2, !dbg !30
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !30
  %192 = or disjoint i64 %51, 128, !dbg !27
  %193 = or disjoint i64 %52, 128, !dbg !27
  %194 = mul nsw i64 %192, %39, !dbg !27
  %195 = mul nsw i64 %193, %39, !dbg !27
  %196 = getelementptr half, ptr addrspace(1) %38, i64 %194, !dbg !27
  %197 = getelementptr half, ptr addrspace(1) %196, i64 %65, !dbg !27
  %198 = getelementptr half, ptr addrspace(1) %38, i64 %195, !dbg !27
  %199 = getelementptr half, ptr addrspace(1) %198, i64 %65, !dbg !27
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !27
  %200 = getelementptr inbounds nuw half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %126, !dbg !27
  %201 = getelementptr inbounds nuw half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %135, !dbg !27
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %200, ptr addrspace(1) %197, i32 16) #2, !dbg !27
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %201, ptr addrspace(1) %199, i32 16) #2, !dbg !27
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !27
  %202 = mul nsw i64 %192, %37, !dbg !30
  %203 = mul nsw i64 %193, %37, !dbg !30
  %204 = getelementptr half, ptr addrspace(1) %36, i64 %202, !dbg !30
  %205 = getelementptr half, ptr addrspace(1) %204, i64 %65, !dbg !30
  %206 = getelementptr half, ptr addrspace(1) %36, i64 %203, !dbg !30
  %207 = getelementptr half, ptr addrspace(1) %206, i64 %65, !dbg !30
  %208 = getelementptr inbounds nuw half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %126, !dbg !30
  %209 = getelementptr inbounds nuw half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %135, !dbg !30
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %208, ptr addrspace(1) %205, i32 16) #2, !dbg !30
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %209, ptr addrspace(1) %207, i32 16) #2, !dbg !30
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !30
  tail call void asm sideeffect "fence.proxy.async.shared::cta;", ""() #2, !dbg !31
  %invariant.gep = getelementptr half, ptr addrspace(1) %38, i64 %65, !dbg !32
  %invariant.gep216 = getelementptr half, ptr addrspace(1) %36, i64 %65, !dbg !32
  br label %210, !dbg !32

210:                                              ; preds = %20, %__nv_exp2f.exit149
  %211 = phi i32 [ -1, %20 ], [ %254, %__nv_exp2f.exit149 ]
  %212 = phi i32 [ 2, %20 ], [ %1085, %__nv_exp2f.exit149 ]
  %213 = phi i64 [ 128, %20 ], [ %1082, %__nv_exp2f.exit149 ]
  %214 = phi float [ 0xFFF0000000000000, %20 ], [ %545, %__nv_exp2f.exit149 ]
  %215 = phi float [ 0xFFF0000000000000, %20 ], [ %546, %__nv_exp2f.exit149 ]
  %216 = phi float [ 0.000000e+00, %20 ], [ %1050, %__nv_exp2f.exit149 ]
  %217 = phi float [ 0.000000e+00, %20 ], [ %1051, %__nv_exp2f.exit149 ]
  %218 = phi float [ 0.000000e+00, %20 ], [ %1052, %__nv_exp2f.exit149 ]
  %219 = phi float [ 0.000000e+00, %20 ], [ %1053, %__nv_exp2f.exit149 ]
  %220 = phi float [ 0.000000e+00, %20 ], [ %1054, %__nv_exp2f.exit149 ]
  %221 = phi float [ 0.000000e+00, %20 ], [ %1055, %__nv_exp2f.exit149 ]
  %222 = phi float [ 0.000000e+00, %20 ], [ %1056, %__nv_exp2f.exit149 ]
  %223 = phi float [ 0.000000e+00, %20 ], [ %1057, %__nv_exp2f.exit149 ]
  %224 = phi float [ 0.000000e+00, %20 ], [ %1058, %__nv_exp2f.exit149 ]
  %225 = phi float [ 0.000000e+00, %20 ], [ %1059, %__nv_exp2f.exit149 ]
  %226 = phi float [ 0.000000e+00, %20 ], [ %1060, %__nv_exp2f.exit149 ]
  %227 = phi float [ 0.000000e+00, %20 ], [ %1061, %__nv_exp2f.exit149 ]
  %228 = phi float [ 0.000000e+00, %20 ], [ %1062, %__nv_exp2f.exit149 ]
  %229 = phi float [ 0.000000e+00, %20 ], [ %1063, %__nv_exp2f.exit149 ]
  %230 = phi float [ 0.000000e+00, %20 ], [ %1064, %__nv_exp2f.exit149 ]
  %231 = phi float [ 0.000000e+00, %20 ], [ %1065, %__nv_exp2f.exit149 ]
  %232 = phi float [ 0.000000e+00, %20 ], [ %1066, %__nv_exp2f.exit149 ]
  %233 = phi float [ 0.000000e+00, %20 ], [ %1067, %__nv_exp2f.exit149 ]
  %234 = phi float [ 0.000000e+00, %20 ], [ %1068, %__nv_exp2f.exit149 ]
  %235 = phi float [ 0.000000e+00, %20 ], [ %1069, %__nv_exp2f.exit149 ]
  %236 = phi float [ 0.000000e+00, %20 ], [ %1070, %__nv_exp2f.exit149 ]
  %237 = phi float [ 0.000000e+00, %20 ], [ %1071, %__nv_exp2f.exit149 ]
  %238 = phi float [ 0.000000e+00, %20 ], [ %1072, %__nv_exp2f.exit149 ]
  %239 = phi float [ 0.000000e+00, %20 ], [ %1073, %__nv_exp2f.exit149 ]
  %240 = phi float [ 0.000000e+00, %20 ], [ %1074, %__nv_exp2f.exit149 ]
  %241 = phi float [ 0.000000e+00, %20 ], [ %1075, %__nv_exp2f.exit149 ]
  %242 = phi float [ 0.000000e+00, %20 ], [ %1076, %__nv_exp2f.exit149 ]
  %243 = phi float [ 0.000000e+00, %20 ], [ %1077, %__nv_exp2f.exit149 ]
  %244 = phi float [ 0.000000e+00, %20 ], [ %1078, %__nv_exp2f.exit149 ]
  %245 = phi float [ 0.000000e+00, %20 ], [ %1079, %__nv_exp2f.exit149 ]
  %246 = phi float [ 0.000000e+00, %20 ], [ %1080, %__nv_exp2f.exit149 ]
  %247 = phi float [ 0.000000e+00, %20 ], [ %1081, %__nv_exp2f.exit149 ]
  %248 = phi float [ 1.000000e+00, %20 ], [ %831, %__nv_exp2f.exit149 ]
  %249 = phi float [ 1.000000e+00, %20 ], [ %832, %__nv_exp2f.exit149 ]
  %250 = phi i32 [ 0, %20 ], [ %1100, %__nv_exp2f.exit149 ]
  %251 = icmp samesign ult i32 %250, 3904, !dbg !32
  %252 = add i32 %211, 1, !dbg !32
  %253 = icmp sgt i32 %252, 3, !dbg !32
  %254 = select i1 %253, i32 0, i32 %252, !dbg !32
  tail call void @llvm.nvvm.cp.async.wait.group(i32 4), !dbg !27
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !27
  %255 = shl i32 %254, 12, !dbg !27
  %256 = getelementptr half, ptr addrspace(3) @global_smem, i32 %255, !dbg !27
  %257 = tail call i32 @llvm.nvvm.shfl.sync.idx.i32(i32 -1, i32 %41, i32 0, i32 31), !dbg !31
  tail call void asm sideeffect "wgmma.fence.sync.aligned;", ""() #2, !dbg !31
  %258 = shl i32 %257, 11, !dbg !31
  %259 = and i32 %258, 8192, !dbg !31
  %260 = add i32 %259, ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 65536) to i32), !dbg !31
  %261 = lshr exact i32 %260, 4, !dbg !31
  %262 = and i32 %261, 16383, !dbg !31
  %263 = zext nneg i32 %262 to i64, !dbg !31
  %264 = or disjoint i64 %263, 4611686293372403712, !dbg !31
  %265 = ptrtoint ptr addrspace(3) %256 to i32, !dbg !31
  %266 = lshr exact i32 %265, 4, !dbg !31
  %267 = and i32 %266, 16383, !dbg !31
  %268 = zext nneg i32 %267 to i64, !dbg !31
  %269 = or disjoint i64 %268, 4611686293338849280, !dbg !31
  %270 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.f16.f16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $32, $33, 0, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,l,l"(i64 %264, i64 %269) #2, !dbg !31
  %271 = add i32 %259, add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 65536) to i32), i32 32), !dbg !31
  %272 = lshr exact i32 %271, 4, !dbg !31
  %273 = and i32 %272, 16383, !dbg !31
  %274 = zext nneg i32 %273 to i64, !dbg !31
  %275 = or disjoint i64 %274, 4611686293372403712, !dbg !31
  %276 = add i32 %265, 32, !dbg !31
  %277 = lshr exact i32 %276, 4, !dbg !31
  %278 = and i32 %277, 16383, !dbg !31
  %279 = zext nneg i32 %278 to i64, !dbg !31
  %280 = or disjoint i64 %279, 4611686293338849280, !dbg !31
  %281 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 0, !dbg !31
  %282 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 1, !dbg !31
  %283 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 2, !dbg !31
  %284 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 3, !dbg !31
  %285 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 4, !dbg !31
  %286 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 5, !dbg !31
  %287 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 6, !dbg !31
  %288 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 7, !dbg !31
  %289 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 8, !dbg !31
  %290 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 9, !dbg !31
  %291 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 10, !dbg !31
  %292 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 11, !dbg !31
  %293 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 12, !dbg !31
  %294 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 13, !dbg !31
  %295 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 14, !dbg !31
  %296 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 15, !dbg !31
  %297 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 16, !dbg !31
  %298 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 17, !dbg !31
  %299 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 18, !dbg !31
  %300 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 19, !dbg !31
  %301 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 20, !dbg !31
  %302 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 21, !dbg !31
  %303 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 22, !dbg !31
  %304 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 23, !dbg !31
  %305 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 24, !dbg !31
  %306 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 25, !dbg !31
  %307 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 26, !dbg !31
  %308 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 27, !dbg !31
  %309 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 28, !dbg !31
  %310 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 29, !dbg !31
  %311 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 30, !dbg !31
  %312 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %270, 31, !dbg !31
  %313 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.f16.f16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %281, float %282, float %283, float %284, float %285, float %286, float %287, float %288, float %289, float %290, float %291, float %292, float %293, float %294, float %295, float %296, float %297, float %298, float %299, float %300, float %301, float %302, float %303, float %304, float %305, float %306, float %307, float %308, float %309, float %310, float %311, float %312, i64 %275, i64 %280, i1 true) #2, !dbg !31
  %314 = add i32 %259, add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 65536) to i32), i32 64), !dbg !31
  %315 = lshr exact i32 %314, 4, !dbg !31
  %316 = and i32 %315, 16383, !dbg !31
  %317 = zext nneg i32 %316 to i64, !dbg !31
  %318 = or disjoint i64 %317, 4611686293372403712, !dbg !31
  %319 = add i32 %265, 64, !dbg !31
  %320 = lshr exact i32 %319, 4, !dbg !31
  %321 = and i32 %320, 16383, !dbg !31
  %322 = zext nneg i32 %321 to i64, !dbg !31
  %323 = or disjoint i64 %322, 4611686293338849280, !dbg !31
  %324 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %313, 0, !dbg !31
  %325 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %313, 1, !dbg !31
  %326 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %313, 2, !dbg !31
  %327 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %313, 3, !dbg !31
  %328 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %313, 4, !dbg !31
  %329 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %313, 5, !dbg !31
  %330 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %313, 6, !dbg !31
  %331 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %313, 7, !dbg !31
  %332 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %313, 8, !dbg !31
  %333 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %313, 9, !dbg !31
  %334 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %313, 10, !dbg !31
  %335 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %313, 11, !dbg !31
  %336 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %313, 12, !dbg !31
  %337 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %313, 13, !dbg !31
  %338 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %313, 14, !dbg !31
  %339 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %313, 15, !dbg !31
  %340 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %313, 16, !dbg !31
  %341 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %313, 17, !dbg !31
  %342 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %313, 18, !dbg !31
  %343 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %313, 19, !dbg !31
  %344 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %313, 20, !dbg !31
  %345 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %313, 21, !dbg !31
  %346 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %313, 22, !dbg !31
  %347 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %313, 23, !dbg !31
  %348 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %313, 24, !dbg !31
  %349 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %313, 25, !dbg !31
  %350 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %313, 26, !dbg !31
  %351 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %313, 27, !dbg !31
  %352 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %313, 28, !dbg !31
  %353 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %313, 29, !dbg !31
  %354 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %313, 30, !dbg !31
  %355 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %313, 31, !dbg !31
  %356 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.f16.f16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %324, float %325, float %326, float %327, float %328, float %329, float %330, float %331, float %332, float %333, float %334, float %335, float %336, float %337, float %338, float %339, float %340, float %341, float %342, float %343, float %344, float %345, float %346, float %347, float %348, float %349, float %350, float %351, float %352, float %353, float %354, float %355, i64 %318, i64 %323, i1 true) #2, !dbg !31
  %357 = add i32 %259, add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 65536) to i32), i32 96), !dbg !31
  %358 = lshr exact i32 %357, 4, !dbg !31
  %359 = and i32 %358, 16383, !dbg !31
  %360 = zext nneg i32 %359 to i64, !dbg !31
  %361 = or disjoint i64 %360, 4611686293372403712, !dbg !31
  %362 = add i32 %265, 96, !dbg !31
  %363 = lshr exact i32 %362, 4, !dbg !31
  %364 = and i32 %363, 16383, !dbg !31
  %365 = zext nneg i32 %364 to i64, !dbg !31
  %366 = or disjoint i64 %365, 4611686293338849280, !dbg !31
  %367 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %356, 0, !dbg !31
  %368 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %356, 1, !dbg !31
  %369 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %356, 2, !dbg !31
  %370 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %356, 3, !dbg !31
  %371 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %356, 4, !dbg !31
  %372 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %356, 5, !dbg !31
  %373 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %356, 6, !dbg !31
  %374 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %356, 7, !dbg !31
  %375 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %356, 8, !dbg !31
  %376 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %356, 9, !dbg !31
  %377 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %356, 10, !dbg !31
  %378 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %356, 11, !dbg !31
  %379 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %356, 12, !dbg !31
  %380 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %356, 13, !dbg !31
  %381 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %356, 14, !dbg !31
  %382 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %356, 15, !dbg !31
  %383 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %356, 16, !dbg !31
  %384 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %356, 17, !dbg !31
  %385 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %356, 18, !dbg !31
  %386 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %356, 19, !dbg !31
  %387 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %356, 20, !dbg !31
  %388 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %356, 21, !dbg !31
  %389 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %356, 22, !dbg !31
  %390 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %356, 23, !dbg !31
  %391 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %356, 24, !dbg !31
  %392 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %356, 25, !dbg !31
  %393 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %356, 26, !dbg !31
  %394 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %356, 27, !dbg !31
  %395 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %356, 28, !dbg !31
  %396 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %356, 29, !dbg !31
  %397 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %356, 30, !dbg !31
  %398 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %356, 31, !dbg !31
  %399 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.f16.f16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %367, float %368, float %369, float %370, float %371, float %372, float %373, float %374, float %375, float %376, float %377, float %378, float %379, float %380, float %381, float %382, float %383, float %384, float %385, float %386, float %387, float %388, float %389, float %390, float %391, float %392, float %393, float %394, float %395, float %396, float %397, float %398, i64 %361, i64 %366, i1 true) #2, !dbg !31
  %400 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %399, 0, !dbg !31
  %401 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %399, 1, !dbg !31
  %402 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %399, 2, !dbg !31
  %403 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %399, 3, !dbg !31
  %404 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %399, 4, !dbg !31
  %405 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %399, 5, !dbg !31
  %406 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %399, 6, !dbg !31
  %407 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %399, 7, !dbg !31
  %408 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %399, 8, !dbg !31
  %409 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %399, 9, !dbg !31
  %410 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %399, 10, !dbg !31
  %411 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %399, 11, !dbg !31
  %412 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %399, 12, !dbg !31
  %413 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %399, 13, !dbg !31
  %414 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %399, 14, !dbg !31
  %415 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %399, 15, !dbg !31
  %416 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %399, 16, !dbg !31
  %417 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %399, 17, !dbg !31
  %418 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %399, 18, !dbg !31
  %419 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %399, 19, !dbg !31
  %420 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %399, 20, !dbg !31
  %421 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %399, 21, !dbg !31
  %422 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %399, 22, !dbg !31
  %423 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %399, 23, !dbg !31
  %424 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %399, 24, !dbg !31
  %425 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %399, 25, !dbg !31
  %426 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %399, 26, !dbg !31
  %427 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %399, 27, !dbg !31
  %428 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %399, 28, !dbg !31
  %429 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %399, 29, !dbg !31
  %430 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %399, 30, !dbg !31
  %431 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %399, 31, !dbg !31
  tail call void asm sideeffect "wgmma.commit_group.sync.aligned;", ""() #2, !dbg !31
  %432 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "// wait for regs: $0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37,$38,$39,$40,$41,$42,$43,$44,$45,$46,$47,$48,$49,$50,$51,$52,$53,$54,$55,$56,$57,$58,$59,$60,$61,$62,$63,$64,$65,$66,$67,$68,$69\0A\09wgmma.wait_group.sync.aligned 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69"(float %400, float %401, float %402, float %403, float %404, float %405, float %406, float %407, float %408, float %409, float %410, float %411, float %412, float %413, float %414, float %415, float %416, float %417, float %418, float %419, float %420, float %421, float %422, float %423, float %424, float %425, float %426, float %427, float %428, float %429, float %430, float %431, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 65536), i32 0, i32 0, ptr addrspace(3) %256, i32 0, i32 0, float %216, float %217, float %218, float %219, float %220, float %221, float %222, float %223, float %224, float %225, float %226, float %227, float %228, float %229, float %230, float %231, float %232, float %233, float %234, float %235, float %236, float %237, float %238, float %239, float %240, float %241, float %242, float %243, float %244, float %245, float %246, float %247) #2, !dbg !31
  %433 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 0, !dbg !31
  %434 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 1, !dbg !31
  %435 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 2, !dbg !31
  %436 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 3, !dbg !31
  %437 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 4, !dbg !31
  %438 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 5, !dbg !31
  %439 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 6, !dbg !31
  %440 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 7, !dbg !31
  %441 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 8, !dbg !31
  %442 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 9, !dbg !31
  %443 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 10, !dbg !31
  %444 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 11, !dbg !31
  %445 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 12, !dbg !31
  %446 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 13, !dbg !31
  %447 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 14, !dbg !31
  %448 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 15, !dbg !31
  %449 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 16, !dbg !31
  %450 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 17, !dbg !31
  %451 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 18, !dbg !31
  %452 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 19, !dbg !31
  %453 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 20, !dbg !31
  %454 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 21, !dbg !31
  %455 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 22, !dbg !31
  %456 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 23, !dbg !31
  %457 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 24, !dbg !31
  %458 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 25, !dbg !31
  %459 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 26, !dbg !31
  %460 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 27, !dbg !31
  %461 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 28, !dbg !31
  %462 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 29, !dbg !31
  %463 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 30, !dbg !31
  %464 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 31, !dbg !31
  %465 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 38, !dbg !31
  %466 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 39, !dbg !31
  %467 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 40, !dbg !31
  %468 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 41, !dbg !31
  %469 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 42, !dbg !31
  %470 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 43, !dbg !31
  %471 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 44, !dbg !31
  %472 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 45, !dbg !31
  %473 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 46, !dbg !31
  %474 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 47, !dbg !31
  %475 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 48, !dbg !31
  %476 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 49, !dbg !31
  %477 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 50, !dbg !31
  %478 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 51, !dbg !31
  %479 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 52, !dbg !31
  %480 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 53, !dbg !31
  %481 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 54, !dbg !31
  %482 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 55, !dbg !31
  %483 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 56, !dbg !31
  %484 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 57, !dbg !31
  %485 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 58, !dbg !31
  %486 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 59, !dbg !31
  %487 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 60, !dbg !31
  %488 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 61, !dbg !31
  %489 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 62, !dbg !31
  %490 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 63, !dbg !31
  %491 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 64, !dbg !31
  %492 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 65, !dbg !31
  %493 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 66, !dbg !31
  %494 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 67, !dbg !31
  %495 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 68, !dbg !31
  %496 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %432, 69, !dbg !31
  %497 = tail call float @llvm.maxnum.f32(float %433, float %434), !dbg !33
  %498 = tail call float @llvm.maxnum.f32(float %435, float %436), !dbg !33
  %499 = tail call float @llvm.maxnum.f32(float %497, float %437), !dbg !33
  %500 = tail call float @llvm.maxnum.f32(float %499, float %438), !dbg !33
  %501 = tail call float @llvm.maxnum.f32(float %498, float %439), !dbg !33
  %502 = tail call float @llvm.maxnum.f32(float %501, float %440), !dbg !33
  %503 = tail call float @llvm.maxnum.f32(float %500, float %441), !dbg !33
  %504 = tail call float @llvm.maxnum.f32(float %503, float %442), !dbg !33
  %505 = tail call float @llvm.maxnum.f32(float %502, float %443), !dbg !33
  %506 = tail call float @llvm.maxnum.f32(float %505, float %444), !dbg !33
  %507 = tail call float @llvm.maxnum.f32(float %504, float %445), !dbg !33
  %508 = tail call float @llvm.maxnum.f32(float %507, float %446), !dbg !33
  %509 = tail call float @llvm.maxnum.f32(float %506, float %447), !dbg !33
  %510 = tail call float @llvm.maxnum.f32(float %509, float %448), !dbg !33
  %511 = tail call float @llvm.maxnum.f32(float %508, float %449), !dbg !33
  %512 = tail call float @llvm.maxnum.f32(float %511, float %450), !dbg !33
  %513 = tail call float @llvm.maxnum.f32(float %510, float %451), !dbg !33
  %514 = tail call float @llvm.maxnum.f32(float %513, float %452), !dbg !33
  %515 = tail call float @llvm.maxnum.f32(float %512, float %453), !dbg !33
  %516 = tail call float @llvm.maxnum.f32(float %515, float %454), !dbg !33
  %517 = tail call float @llvm.maxnum.f32(float %514, float %455), !dbg !33
  %518 = tail call float @llvm.maxnum.f32(float %517, float %456), !dbg !33
  %519 = tail call float @llvm.maxnum.f32(float %516, float %457), !dbg !33
  %520 = tail call float @llvm.maxnum.f32(float %519, float %458), !dbg !33
  %521 = tail call float @llvm.maxnum.f32(float %518, float %459), !dbg !33
  %522 = tail call float @llvm.maxnum.f32(float %521, float %460), !dbg !33
  %523 = tail call float @llvm.maxnum.f32(float %520, float %461), !dbg !33
  %524 = tail call float @llvm.maxnum.f32(float %523, float %462), !dbg !33
  %525 = tail call float @llvm.maxnum.f32(float %522, float %463), !dbg !33
  %526 = tail call float @llvm.maxnum.f32(float %525, float %464), !dbg !33
  %527 = bitcast float %524 to i32, !dbg !36
  %528 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %527, i32 2, i32 31), !dbg !36
  %529 = bitcast i32 %528 to float, !dbg !36
  %530 = tail call float @llvm.maxnum.f32(float %524, float %529), !dbg !33
  %531 = bitcast float %530 to i32, !dbg !36
  %532 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %531, i32 1, i32 31), !dbg !36
  %533 = bitcast i32 %532 to float, !dbg !36
  %534 = tail call float @llvm.maxnum.f32(float %530, float %533), !dbg !33
  %535 = bitcast float %526 to i32, !dbg !36
  %536 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %535, i32 2, i32 31), !dbg !36
  %537 = bitcast i32 %536 to float, !dbg !36
  %538 = tail call float @llvm.maxnum.f32(float %526, float %537), !dbg !33
  %539 = bitcast float %538 to i32, !dbg !36
  %540 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %539, i32 1, i32 31), !dbg !36
  %541 = bitcast i32 %540 to float, !dbg !36
  %542 = tail call float @llvm.maxnum.f32(float %538, float %541), !dbg !33
  %543 = fmul float %50, %534, !dbg !37
  %544 = fmul float %50, %542, !dbg !37
  %545 = tail call float @llvm.maxnum.f32(float %214, float %543), !dbg !38
  %546 = tail call float @llvm.maxnum.f32(float %215, float %544), !dbg !38
  %547 = fmul float %50, %433, !dbg !39
  %548 = fmul float %50, %434, !dbg !39
  %549 = fmul float %50, %435, !dbg !39
  %550 = fmul float %50, %436, !dbg !39
  %551 = fmul float %50, %437, !dbg !39
  %552 = fmul float %50, %438, !dbg !39
  %553 = fmul float %50, %439, !dbg !39
  %554 = fmul float %50, %440, !dbg !39
  %555 = fmul float %50, %441, !dbg !39
  %556 = fmul float %50, %442, !dbg !39
  %557 = fmul float %50, %443, !dbg !39
  %558 = fmul float %50, %444, !dbg !39
  %559 = fmul float %50, %445, !dbg !39
  %560 = fmul float %50, %446, !dbg !39
  %561 = fmul float %50, %447, !dbg !39
  %562 = fmul float %50, %448, !dbg !39
  %563 = fmul float %50, %449, !dbg !39
  %564 = fmul float %50, %450, !dbg !39
  %565 = fmul float %50, %451, !dbg !39
  %566 = fmul float %50, %452, !dbg !39
  %567 = fmul float %50, %453, !dbg !39
  %568 = fmul float %50, %454, !dbg !39
  %569 = fmul float %50, %455, !dbg !39
  %570 = fmul float %50, %456, !dbg !39
  %571 = fmul float %50, %457, !dbg !39
  %572 = fmul float %50, %458, !dbg !39
  %573 = fmul float %50, %459, !dbg !39
  %574 = fmul float %50, %460, !dbg !39
  %575 = fmul float %50, %461, !dbg !39
  %576 = fmul float %50, %462, !dbg !39
  %577 = fmul float %50, %463, !dbg !39
  %578 = fmul float %50, %464, !dbg !39
  %579 = fsub float %547, %545, !dbg !40
  %580 = fsub float %548, %545, !dbg !40
  %581 = fsub float %549, %546, !dbg !40
  %582 = fsub float %550, %546, !dbg !40
  %583 = fsub float %551, %545, !dbg !40
  %584 = fsub float %552, %545, !dbg !40
  %585 = fsub float %553, %546, !dbg !40
  %586 = fsub float %554, %546, !dbg !40
  %587 = fsub float %555, %545, !dbg !40
  %588 = fsub float %556, %545, !dbg !40
  %589 = fsub float %557, %546, !dbg !40
  %590 = fsub float %558, %546, !dbg !40
  %591 = fsub float %559, %545, !dbg !40
  %592 = fsub float %560, %545, !dbg !40
  %593 = fsub float %561, %546, !dbg !40
  %594 = fsub float %562, %546, !dbg !40
  %595 = fsub float %563, %545, !dbg !40
  %596 = fsub float %564, %545, !dbg !40
  %597 = fsub float %565, %546, !dbg !40
  %598 = fsub float %566, %546, !dbg !40
  %599 = fsub float %567, %545, !dbg !40
  %600 = fsub float %568, %545, !dbg !40
  %601 = fsub float %569, %546, !dbg !40
  %602 = fsub float %570, %546, !dbg !40
  %603 = fsub float %571, %545, !dbg !40
  %604 = fsub float %572, %545, !dbg !40
  %605 = fsub float %573, %546, !dbg !40
  %606 = fsub float %574, %546, !dbg !40
  %607 = fsub float %575, %545, !dbg !40
  %608 = fsub float %576, %545, !dbg !40
  %609 = fsub float %577, %546, !dbg !40
  %610 = fsub float %578, %546, !dbg !40
  %611 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !41
  %.not.i = icmp eq i32 %611, 0, !dbg !41
  br i1 %.not.i, label %614, label %612, !dbg !41

612:                                              ; preds = %210
  %613 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %579) #2, !dbg !41
  br label %__nv_exp2f.exit, !dbg !41

614:                                              ; preds = %210
  %615 = tail call float @llvm.nvvm.ex2.approx.f(float %579) #2, !dbg !41
  br label %__nv_exp2f.exit, !dbg !41

__nv_exp2f.exit:                                  ; preds = %612, %614
  %.0.i = phi float [ %613, %612 ], [ %615, %614 ], !dbg !41
  %616 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !41
  %.not.i51 = icmp eq i32 %616, 0, !dbg !41
  br i1 %.not.i51, label %619, label %617, !dbg !41

617:                                              ; preds = %__nv_exp2f.exit
  %618 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %580) #2, !dbg !41
  br label %__nv_exp2f.exit53, !dbg !41

619:                                              ; preds = %__nv_exp2f.exit
  %620 = tail call float @llvm.nvvm.ex2.approx.f(float %580) #2, !dbg !41
  br label %__nv_exp2f.exit53, !dbg !41

__nv_exp2f.exit53:                                ; preds = %617, %619
  %.0.i52 = phi float [ %618, %617 ], [ %620, %619 ], !dbg !41
  %621 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !41
  %.not.i54 = icmp eq i32 %621, 0, !dbg !41
  br i1 %.not.i54, label %624, label %622, !dbg !41

622:                                              ; preds = %__nv_exp2f.exit53
  %623 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %581) #2, !dbg !41
  br label %__nv_exp2f.exit56, !dbg !41

624:                                              ; preds = %__nv_exp2f.exit53
  %625 = tail call float @llvm.nvvm.ex2.approx.f(float %581) #2, !dbg !41
  br label %__nv_exp2f.exit56, !dbg !41

__nv_exp2f.exit56:                                ; preds = %622, %624
  %.0.i55 = phi float [ %623, %622 ], [ %625, %624 ], !dbg !41
  %626 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !41
  %.not.i57 = icmp eq i32 %626, 0, !dbg !41
  br i1 %.not.i57, label %629, label %627, !dbg !41

627:                                              ; preds = %__nv_exp2f.exit56
  %628 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %582) #2, !dbg !41
  br label %__nv_exp2f.exit59, !dbg !41

629:                                              ; preds = %__nv_exp2f.exit56
  %630 = tail call float @llvm.nvvm.ex2.approx.f(float %582) #2, !dbg !41
  br label %__nv_exp2f.exit59, !dbg !41

__nv_exp2f.exit59:                                ; preds = %627, %629
  %.0.i58 = phi float [ %628, %627 ], [ %630, %629 ], !dbg !41
  %631 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !41
  %.not.i60 = icmp eq i32 %631, 0, !dbg !41
  br i1 %.not.i60, label %634, label %632, !dbg !41

632:                                              ; preds = %__nv_exp2f.exit59
  %633 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %583) #2, !dbg !41
  br label %__nv_exp2f.exit62, !dbg !41

634:                                              ; preds = %__nv_exp2f.exit59
  %635 = tail call float @llvm.nvvm.ex2.approx.f(float %583) #2, !dbg !41
  br label %__nv_exp2f.exit62, !dbg !41

__nv_exp2f.exit62:                                ; preds = %632, %634
  %.0.i61 = phi float [ %633, %632 ], [ %635, %634 ], !dbg !41
  %636 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !41
  %.not.i63 = icmp eq i32 %636, 0, !dbg !41
  br i1 %.not.i63, label %639, label %637, !dbg !41

637:                                              ; preds = %__nv_exp2f.exit62
  %638 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %584) #2, !dbg !41
  br label %__nv_exp2f.exit65, !dbg !41

639:                                              ; preds = %__nv_exp2f.exit62
  %640 = tail call float @llvm.nvvm.ex2.approx.f(float %584) #2, !dbg !41
  br label %__nv_exp2f.exit65, !dbg !41

__nv_exp2f.exit65:                                ; preds = %637, %639
  %.0.i64 = phi float [ %638, %637 ], [ %640, %639 ], !dbg !41
  %641 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !41
  %.not.i66 = icmp eq i32 %641, 0, !dbg !41
  br i1 %.not.i66, label %644, label %642, !dbg !41

642:                                              ; preds = %__nv_exp2f.exit65
  %643 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %585) #2, !dbg !41
  br label %__nv_exp2f.exit68, !dbg !41

644:                                              ; preds = %__nv_exp2f.exit65
  %645 = tail call float @llvm.nvvm.ex2.approx.f(float %585) #2, !dbg !41
  br label %__nv_exp2f.exit68, !dbg !41

__nv_exp2f.exit68:                                ; preds = %642, %644
  %.0.i67 = phi float [ %643, %642 ], [ %645, %644 ], !dbg !41
  %646 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !41
  %.not.i69 = icmp eq i32 %646, 0, !dbg !41
  br i1 %.not.i69, label %649, label %647, !dbg !41

647:                                              ; preds = %__nv_exp2f.exit68
  %648 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %586) #2, !dbg !41
  br label %__nv_exp2f.exit71, !dbg !41

649:                                              ; preds = %__nv_exp2f.exit68
  %650 = tail call float @llvm.nvvm.ex2.approx.f(float %586) #2, !dbg !41
  br label %__nv_exp2f.exit71, !dbg !41

__nv_exp2f.exit71:                                ; preds = %647, %649
  %.0.i70 = phi float [ %648, %647 ], [ %650, %649 ], !dbg !41
  %651 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !41
  %.not.i72 = icmp eq i32 %651, 0, !dbg !41
  br i1 %.not.i72, label %654, label %652, !dbg !41

652:                                              ; preds = %__nv_exp2f.exit71
  %653 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %587) #2, !dbg !41
  br label %__nv_exp2f.exit74, !dbg !41

654:                                              ; preds = %__nv_exp2f.exit71
  %655 = tail call float @llvm.nvvm.ex2.approx.f(float %587) #2, !dbg !41
  br label %__nv_exp2f.exit74, !dbg !41

__nv_exp2f.exit74:                                ; preds = %652, %654
  %.0.i73 = phi float [ %653, %652 ], [ %655, %654 ], !dbg !41
  %656 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !41
  %.not.i75 = icmp eq i32 %656, 0, !dbg !41
  br i1 %.not.i75, label %659, label %657, !dbg !41

657:                                              ; preds = %__nv_exp2f.exit74
  %658 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %588) #2, !dbg !41
  br label %__nv_exp2f.exit77, !dbg !41

659:                                              ; preds = %__nv_exp2f.exit74
  %660 = tail call float @llvm.nvvm.ex2.approx.f(float %588) #2, !dbg !41
  br label %__nv_exp2f.exit77, !dbg !41

__nv_exp2f.exit77:                                ; preds = %657, %659
  %.0.i76 = phi float [ %658, %657 ], [ %660, %659 ], !dbg !41
  %661 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !41
  %.not.i78 = icmp eq i32 %661, 0, !dbg !41
  br i1 %.not.i78, label %664, label %662, !dbg !41

662:                                              ; preds = %__nv_exp2f.exit77
  %663 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %589) #2, !dbg !41
  br label %__nv_exp2f.exit80, !dbg !41

664:                                              ; preds = %__nv_exp2f.exit77
  %665 = tail call float @llvm.nvvm.ex2.approx.f(float %589) #2, !dbg !41
  br label %__nv_exp2f.exit80, !dbg !41

__nv_exp2f.exit80:                                ; preds = %662, %664
  %.0.i79 = phi float [ %663, %662 ], [ %665, %664 ], !dbg !41
  %666 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !41
  %.not.i81 = icmp eq i32 %666, 0, !dbg !41
  br i1 %.not.i81, label %669, label %667, !dbg !41

667:                                              ; preds = %__nv_exp2f.exit80
  %668 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %590) #2, !dbg !41
  br label %__nv_exp2f.exit83, !dbg !41

669:                                              ; preds = %__nv_exp2f.exit80
  %670 = tail call float @llvm.nvvm.ex2.approx.f(float %590) #2, !dbg !41
  br label %__nv_exp2f.exit83, !dbg !41

__nv_exp2f.exit83:                                ; preds = %667, %669
  %.0.i82 = phi float [ %668, %667 ], [ %670, %669 ], !dbg !41
  %671 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !41
  %.not.i84 = icmp eq i32 %671, 0, !dbg !41
  br i1 %.not.i84, label %674, label %672, !dbg !41

672:                                              ; preds = %__nv_exp2f.exit83
  %673 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %591) #2, !dbg !41
  br label %__nv_exp2f.exit86, !dbg !41

674:                                              ; preds = %__nv_exp2f.exit83
  %675 = tail call float @llvm.nvvm.ex2.approx.f(float %591) #2, !dbg !41
  br label %__nv_exp2f.exit86, !dbg !41

__nv_exp2f.exit86:                                ; preds = %672, %674
  %.0.i85 = phi float [ %673, %672 ], [ %675, %674 ], !dbg !41
  %676 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !41
  %.not.i87 = icmp eq i32 %676, 0, !dbg !41
  br i1 %.not.i87, label %679, label %677, !dbg !41

677:                                              ; preds = %__nv_exp2f.exit86
  %678 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %592) #2, !dbg !41
  br label %__nv_exp2f.exit89, !dbg !41

679:                                              ; preds = %__nv_exp2f.exit86
  %680 = tail call float @llvm.nvvm.ex2.approx.f(float %592) #2, !dbg !41
  br label %__nv_exp2f.exit89, !dbg !41

__nv_exp2f.exit89:                                ; preds = %677, %679
  %.0.i88 = phi float [ %678, %677 ], [ %680, %679 ], !dbg !41
  %681 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !41
  %.not.i90 = icmp eq i32 %681, 0, !dbg !41
  br i1 %.not.i90, label %684, label %682, !dbg !41

682:                                              ; preds = %__nv_exp2f.exit89
  %683 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %593) #2, !dbg !41
  br label %__nv_exp2f.exit92, !dbg !41

684:                                              ; preds = %__nv_exp2f.exit89
  %685 = tail call float @llvm.nvvm.ex2.approx.f(float %593) #2, !dbg !41
  br label %__nv_exp2f.exit92, !dbg !41

__nv_exp2f.exit92:                                ; preds = %682, %684
  %.0.i91 = phi float [ %683, %682 ], [ %685, %684 ], !dbg !41
  %686 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !41
  %.not.i93 = icmp eq i32 %686, 0, !dbg !41
  br i1 %.not.i93, label %689, label %687, !dbg !41

687:                                              ; preds = %__nv_exp2f.exit92
  %688 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %594) #2, !dbg !41
  br label %__nv_exp2f.exit95, !dbg !41

689:                                              ; preds = %__nv_exp2f.exit92
  %690 = tail call float @llvm.nvvm.ex2.approx.f(float %594) #2, !dbg !41
  br label %__nv_exp2f.exit95, !dbg !41

__nv_exp2f.exit95:                                ; preds = %687, %689
  %.0.i94 = phi float [ %688, %687 ], [ %690, %689 ], !dbg !41
  %691 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !41
  %.not.i96 = icmp eq i32 %691, 0, !dbg !41
  br i1 %.not.i96, label %694, label %692, !dbg !41

692:                                              ; preds = %__nv_exp2f.exit95
  %693 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %595) #2, !dbg !41
  br label %__nv_exp2f.exit98, !dbg !41

694:                                              ; preds = %__nv_exp2f.exit95
  %695 = tail call float @llvm.nvvm.ex2.approx.f(float %595) #2, !dbg !41
  br label %__nv_exp2f.exit98, !dbg !41

__nv_exp2f.exit98:                                ; preds = %692, %694
  %.0.i97 = phi float [ %693, %692 ], [ %695, %694 ], !dbg !41
  %696 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !41
  %.not.i99 = icmp eq i32 %696, 0, !dbg !41
  br i1 %.not.i99, label %699, label %697, !dbg !41

697:                                              ; preds = %__nv_exp2f.exit98
  %698 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %596) #2, !dbg !41
  br label %__nv_exp2f.exit101, !dbg !41

699:                                              ; preds = %__nv_exp2f.exit98
  %700 = tail call float @llvm.nvvm.ex2.approx.f(float %596) #2, !dbg !41
  br label %__nv_exp2f.exit101, !dbg !41

__nv_exp2f.exit101:                               ; preds = %697, %699
  %.0.i100 = phi float [ %698, %697 ], [ %700, %699 ], !dbg !41
  %701 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !41
  %.not.i102 = icmp eq i32 %701, 0, !dbg !41
  br i1 %.not.i102, label %704, label %702, !dbg !41

702:                                              ; preds = %__nv_exp2f.exit101
  %703 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %597) #2, !dbg !41
  br label %__nv_exp2f.exit104, !dbg !41

704:                                              ; preds = %__nv_exp2f.exit101
  %705 = tail call float @llvm.nvvm.ex2.approx.f(float %597) #2, !dbg !41
  br label %__nv_exp2f.exit104, !dbg !41

__nv_exp2f.exit104:                               ; preds = %702, %704
  %.0.i103 = phi float [ %703, %702 ], [ %705, %704 ], !dbg !41
  %706 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !41
  %.not.i105 = icmp eq i32 %706, 0, !dbg !41
  br i1 %.not.i105, label %709, label %707, !dbg !41

707:                                              ; preds = %__nv_exp2f.exit104
  %708 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %598) #2, !dbg !41
  br label %__nv_exp2f.exit107, !dbg !41

709:                                              ; preds = %__nv_exp2f.exit104
  %710 = tail call float @llvm.nvvm.ex2.approx.f(float %598) #2, !dbg !41
  br label %__nv_exp2f.exit107, !dbg !41

__nv_exp2f.exit107:                               ; preds = %707, %709
  %.0.i106 = phi float [ %708, %707 ], [ %710, %709 ], !dbg !41
  %711 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !41
  %.not.i108 = icmp eq i32 %711, 0, !dbg !41
  br i1 %.not.i108, label %714, label %712, !dbg !41

712:                                              ; preds = %__nv_exp2f.exit107
  %713 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %599) #2, !dbg !41
  br label %__nv_exp2f.exit110, !dbg !41

714:                                              ; preds = %__nv_exp2f.exit107
  %715 = tail call float @llvm.nvvm.ex2.approx.f(float %599) #2, !dbg !41
  br label %__nv_exp2f.exit110, !dbg !41

__nv_exp2f.exit110:                               ; preds = %712, %714
  %.0.i109 = phi float [ %713, %712 ], [ %715, %714 ], !dbg !41
  %716 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !41
  %.not.i111 = icmp eq i32 %716, 0, !dbg !41
  br i1 %.not.i111, label %719, label %717, !dbg !41

717:                                              ; preds = %__nv_exp2f.exit110
  %718 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %600) #2, !dbg !41
  br label %__nv_exp2f.exit113, !dbg !41

719:                                              ; preds = %__nv_exp2f.exit110
  %720 = tail call float @llvm.nvvm.ex2.approx.f(float %600) #2, !dbg !41
  br label %__nv_exp2f.exit113, !dbg !41

__nv_exp2f.exit113:                               ; preds = %717, %719
  %.0.i112 = phi float [ %718, %717 ], [ %720, %719 ], !dbg !41
  %721 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !41
  %.not.i114 = icmp eq i32 %721, 0, !dbg !41
  br i1 %.not.i114, label %724, label %722, !dbg !41

722:                                              ; preds = %__nv_exp2f.exit113
  %723 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %601) #2, !dbg !41
  br label %__nv_exp2f.exit116, !dbg !41

724:                                              ; preds = %__nv_exp2f.exit113
  %725 = tail call float @llvm.nvvm.ex2.approx.f(float %601) #2, !dbg !41
  br label %__nv_exp2f.exit116, !dbg !41

__nv_exp2f.exit116:                               ; preds = %722, %724
  %.0.i115 = phi float [ %723, %722 ], [ %725, %724 ], !dbg !41
  %726 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !41
  %.not.i117 = icmp eq i32 %726, 0, !dbg !41
  br i1 %.not.i117, label %729, label %727, !dbg !41

727:                                              ; preds = %__nv_exp2f.exit116
  %728 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %602) #2, !dbg !41
  br label %__nv_exp2f.exit119, !dbg !41

729:                                              ; preds = %__nv_exp2f.exit116
  %730 = tail call float @llvm.nvvm.ex2.approx.f(float %602) #2, !dbg !41
  br label %__nv_exp2f.exit119, !dbg !41

__nv_exp2f.exit119:                               ; preds = %727, %729
  %.0.i118 = phi float [ %728, %727 ], [ %730, %729 ], !dbg !41
  %731 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !41
  %.not.i120 = icmp eq i32 %731, 0, !dbg !41
  br i1 %.not.i120, label %734, label %732, !dbg !41

732:                                              ; preds = %__nv_exp2f.exit119
  %733 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %603) #2, !dbg !41
  br label %__nv_exp2f.exit122, !dbg !41

734:                                              ; preds = %__nv_exp2f.exit119
  %735 = tail call float @llvm.nvvm.ex2.approx.f(float %603) #2, !dbg !41
  br label %__nv_exp2f.exit122, !dbg !41

__nv_exp2f.exit122:                               ; preds = %732, %734
  %.0.i121 = phi float [ %733, %732 ], [ %735, %734 ], !dbg !41
  %736 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !41
  %.not.i123 = icmp eq i32 %736, 0, !dbg !41
  br i1 %.not.i123, label %739, label %737, !dbg !41

737:                                              ; preds = %__nv_exp2f.exit122
  %738 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %604) #2, !dbg !41
  br label %__nv_exp2f.exit125, !dbg !41

739:                                              ; preds = %__nv_exp2f.exit122
  %740 = tail call float @llvm.nvvm.ex2.approx.f(float %604) #2, !dbg !41
  br label %__nv_exp2f.exit125, !dbg !41

__nv_exp2f.exit125:                               ; preds = %737, %739
  %.0.i124 = phi float [ %738, %737 ], [ %740, %739 ], !dbg !41
  %741 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !41
  %.not.i126 = icmp eq i32 %741, 0, !dbg !41
  br i1 %.not.i126, label %744, label %742, !dbg !41

742:                                              ; preds = %__nv_exp2f.exit125
  %743 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %605) #2, !dbg !41
  br label %__nv_exp2f.exit128, !dbg !41

744:                                              ; preds = %__nv_exp2f.exit125
  %745 = tail call float @llvm.nvvm.ex2.approx.f(float %605) #2, !dbg !41
  br label %__nv_exp2f.exit128, !dbg !41

__nv_exp2f.exit128:                               ; preds = %742, %744
  %.0.i127 = phi float [ %743, %742 ], [ %745, %744 ], !dbg !41
  %746 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !41
  %.not.i129 = icmp eq i32 %746, 0, !dbg !41
  br i1 %.not.i129, label %749, label %747, !dbg !41

747:                                              ; preds = %__nv_exp2f.exit128
  %748 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %606) #2, !dbg !41
  br label %__nv_exp2f.exit131, !dbg !41

749:                                              ; preds = %__nv_exp2f.exit128
  %750 = tail call float @llvm.nvvm.ex2.approx.f(float %606) #2, !dbg !41
  br label %__nv_exp2f.exit131, !dbg !41

__nv_exp2f.exit131:                               ; preds = %747, %749
  %.0.i130 = phi float [ %748, %747 ], [ %750, %749 ], !dbg !41
  %751 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !41
  %.not.i132 = icmp eq i32 %751, 0, !dbg !41
  br i1 %.not.i132, label %754, label %752, !dbg !41

752:                                              ; preds = %__nv_exp2f.exit131
  %753 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %607) #2, !dbg !41
  br label %__nv_exp2f.exit134, !dbg !41

754:                                              ; preds = %__nv_exp2f.exit131
  %755 = tail call float @llvm.nvvm.ex2.approx.f(float %607) #2, !dbg !41
  br label %__nv_exp2f.exit134, !dbg !41

__nv_exp2f.exit134:                               ; preds = %752, %754
  %.0.i133 = phi float [ %753, %752 ], [ %755, %754 ], !dbg !41
  %756 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !41
  %.not.i135 = icmp eq i32 %756, 0, !dbg !41
  br i1 %.not.i135, label %759, label %757, !dbg !41

757:                                              ; preds = %__nv_exp2f.exit134
  %758 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %608) #2, !dbg !41
  br label %__nv_exp2f.exit137, !dbg !41

759:                                              ; preds = %__nv_exp2f.exit134
  %760 = tail call float @llvm.nvvm.ex2.approx.f(float %608) #2, !dbg !41
  br label %__nv_exp2f.exit137, !dbg !41

__nv_exp2f.exit137:                               ; preds = %757, %759
  %.0.i136 = phi float [ %758, %757 ], [ %760, %759 ], !dbg !41
  %761 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !41
  %.not.i138 = icmp eq i32 %761, 0, !dbg !41
  br i1 %.not.i138, label %764, label %762, !dbg !41

762:                                              ; preds = %__nv_exp2f.exit137
  %763 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %609) #2, !dbg !41
  br label %__nv_exp2f.exit140, !dbg !41

764:                                              ; preds = %__nv_exp2f.exit137
  %765 = tail call float @llvm.nvvm.ex2.approx.f(float %609) #2, !dbg !41
  br label %__nv_exp2f.exit140, !dbg !41

__nv_exp2f.exit140:                               ; preds = %762, %764
  %.0.i139 = phi float [ %763, %762 ], [ %765, %764 ], !dbg !41
  %766 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !41
  %.not.i141 = icmp eq i32 %766, 0, !dbg !41
  br i1 %.not.i141, label %769, label %767, !dbg !41

767:                                              ; preds = %__nv_exp2f.exit140
  %768 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %610) #2, !dbg !41
  br label %__nv_exp2f.exit143, !dbg !41

769:                                              ; preds = %__nv_exp2f.exit140
  %770 = tail call float @llvm.nvvm.ex2.approx.f(float %610) #2, !dbg !41
  br label %__nv_exp2f.exit143, !dbg !41

__nv_exp2f.exit143:                               ; preds = %767, %769
  %.0.i142 = phi float [ %768, %767 ], [ %770, %769 ], !dbg !41
  %771 = fadd float %.0.i, %.0.i52, !dbg !42
  %772 = fadd float %.0.i55, %.0.i58, !dbg !42
  %773 = fadd float %771, %.0.i61, !dbg !42
  %774 = fadd float %773, %.0.i64, !dbg !42
  %775 = fadd float %772, %.0.i67, !dbg !42
  %776 = fadd float %775, %.0.i70, !dbg !42
  %777 = fadd float %774, %.0.i73, !dbg !42
  %778 = fadd float %777, %.0.i76, !dbg !42
  %779 = fadd float %776, %.0.i79, !dbg !42
  %780 = fadd float %779, %.0.i82, !dbg !42
  %781 = fadd float %778, %.0.i85, !dbg !42
  %782 = fadd float %781, %.0.i88, !dbg !42
  %783 = fadd float %780, %.0.i91, !dbg !42
  %784 = fadd float %783, %.0.i94, !dbg !42
  %785 = fadd float %782, %.0.i97, !dbg !42
  %786 = fadd float %785, %.0.i100, !dbg !42
  %787 = fadd float %784, %.0.i103, !dbg !42
  %788 = fadd float %787, %.0.i106, !dbg !42
  %789 = fadd float %786, %.0.i109, !dbg !42
  %790 = fadd float %789, %.0.i112, !dbg !42
  %791 = fadd float %788, %.0.i115, !dbg !42
  %792 = fadd float %791, %.0.i118, !dbg !42
  %793 = fadd float %790, %.0.i121, !dbg !42
  %794 = fadd float %793, %.0.i124, !dbg !42
  %795 = fadd float %792, %.0.i127, !dbg !42
  %796 = fadd float %795, %.0.i130, !dbg !42
  %797 = fadd float %794, %.0.i133, !dbg !42
  %798 = fadd float %797, %.0.i136, !dbg !42
  %799 = fadd float %796, %.0.i139, !dbg !42
  %800 = fadd float %799, %.0.i142, !dbg !42
  %801 = bitcast float %798 to i32, !dbg !43
  %802 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %801, i32 2, i32 31), !dbg !43
  %803 = bitcast i32 %802 to float, !dbg !43
  %804 = fadd float %798, %803, !dbg !42
  %805 = bitcast float %804 to i32, !dbg !43
  %806 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %805, i32 1, i32 31), !dbg !43
  %807 = bitcast i32 %806 to float, !dbg !43
  %808 = fadd float %804, %807, !dbg !42
  %809 = bitcast float %800 to i32, !dbg !43
  %810 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %809, i32 2, i32 31), !dbg !43
  %811 = bitcast i32 %810 to float, !dbg !43
  %812 = fadd float %800, %811, !dbg !42
  %813 = bitcast float %812 to i32, !dbg !43
  %814 = tail call i32 @llvm.nvvm.shfl.sync.bfly.i32(i32 -1, i32 %813, i32 1, i32 31), !dbg !43
  %815 = bitcast i32 %814 to float, !dbg !43
  %816 = fadd float %812, %815, !dbg !42
  %817 = fsub float %214, %545, !dbg !44
  %818 = fsub float %215, %546, !dbg !44
  %819 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !45
  %.not.i144 = icmp eq i32 %819, 0, !dbg !45
  br i1 %.not.i144, label %822, label %820, !dbg !45

820:                                              ; preds = %__nv_exp2f.exit143
  %821 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %817) #2, !dbg !45
  br label %__nv_exp2f.exit146, !dbg !45

822:                                              ; preds = %__nv_exp2f.exit143
  %823 = tail call float @llvm.nvvm.ex2.approx.f(float %817) #2, !dbg !45
  br label %__nv_exp2f.exit146, !dbg !45

__nv_exp2f.exit146:                               ; preds = %820, %822
  %.0.i145 = phi float [ %821, %820 ], [ %823, %822 ], !dbg !45
  %824 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !45
  %.not.i147 = icmp eq i32 %824, 0, !dbg !45
  br i1 %.not.i147, label %827, label %825, !dbg !45

825:                                              ; preds = %__nv_exp2f.exit146
  %826 = tail call float @llvm.nvvm.ex2.approx.ftz.f(float %818) #2, !dbg !45
  br label %__nv_exp2f.exit149, !dbg !45

827:                                              ; preds = %__nv_exp2f.exit146
  %828 = tail call float @llvm.nvvm.ex2.approx.f(float %818) #2, !dbg !45
  br label %__nv_exp2f.exit149, !dbg !45

__nv_exp2f.exit149:                               ; preds = %825, %827
  %.0.i148 = phi float [ %826, %825 ], [ %828, %827 ], !dbg !45
  %829 = fmul float %248, %.0.i145, !dbg !46
  %830 = fmul float %249, %.0.i148, !dbg !46
  %831 = fadd float %808, %829, !dbg !47
  %832 = fadd float %816, %830, !dbg !47
  %833 = fmul float %465, %.0.i145, !dbg !48
  %834 = fmul float %466, %.0.i145, !dbg !48
  %835 = fmul float %467, %.0.i148, !dbg !48
  %836 = fmul float %468, %.0.i148, !dbg !48
  %837 = fmul float %469, %.0.i145, !dbg !48
  %838 = fmul float %470, %.0.i145, !dbg !48
  %839 = fmul float %471, %.0.i148, !dbg !48
  %840 = fmul float %472, %.0.i148, !dbg !48
  %841 = fmul float %473, %.0.i145, !dbg !48
  %842 = fmul float %474, %.0.i145, !dbg !48
  %843 = fmul float %475, %.0.i148, !dbg !48
  %844 = fmul float %476, %.0.i148, !dbg !48
  %845 = fmul float %477, %.0.i145, !dbg !48
  %846 = fmul float %478, %.0.i145, !dbg !48
  %847 = fmul float %479, %.0.i148, !dbg !48
  %848 = fmul float %480, %.0.i148, !dbg !48
  %849 = fmul float %481, %.0.i145, !dbg !48
  %850 = fmul float %482, %.0.i145, !dbg !48
  %851 = fmul float %483, %.0.i148, !dbg !48
  %852 = fmul float %484, %.0.i148, !dbg !48
  %853 = fmul float %485, %.0.i145, !dbg !48
  %854 = fmul float %486, %.0.i145, !dbg !48
  %855 = fmul float %487, %.0.i148, !dbg !48
  %856 = fmul float %488, %.0.i148, !dbg !48
  %857 = fmul float %489, %.0.i145, !dbg !48
  %858 = fmul float %490, %.0.i145, !dbg !48
  %859 = fmul float %491, %.0.i148, !dbg !48
  %860 = fmul float %492, %.0.i148, !dbg !48
  %861 = fmul float %493, %.0.i145, !dbg !48
  %862 = fmul float %494, %.0.i145, !dbg !48
  %863 = fmul float %495, %.0.i148, !dbg !48
  %864 = fmul float %496, %.0.i148, !dbg !48
  %865 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %255, !dbg !30
  %866 = insertelement <2 x float> poison, float %.0.i, i64 0, !dbg !49
  %867 = insertelement <2 x float> %866, float %.0.i52, i64 1, !dbg !49
  %868 = fptrunc <2 x float> %867 to <2 x half>, !dbg !49
  %869 = insertelement <2 x float> poison, float %.0.i55, i64 0, !dbg !49
  %870 = insertelement <2 x float> %869, float %.0.i58, i64 1, !dbg !49
  %871 = fptrunc <2 x float> %870 to <2 x half>, !dbg !49
  %872 = insertelement <2 x float> poison, float %.0.i61, i64 0, !dbg !49
  %873 = insertelement <2 x float> %872, float %.0.i64, i64 1, !dbg !49
  %874 = fptrunc <2 x float> %873 to <2 x half>, !dbg !49
  %875 = insertelement <2 x float> poison, float %.0.i67, i64 0, !dbg !49
  %876 = insertelement <2 x float> %875, float %.0.i70, i64 1, !dbg !49
  %877 = fptrunc <2 x float> %876 to <2 x half>, !dbg !49
  %878 = insertelement <2 x float> poison, float %.0.i73, i64 0, !dbg !49
  %879 = insertelement <2 x float> %878, float %.0.i76, i64 1, !dbg !49
  %880 = fptrunc <2 x float> %879 to <2 x half>, !dbg !49
  %881 = insertelement <2 x float> poison, float %.0.i79, i64 0, !dbg !49
  %882 = insertelement <2 x float> %881, float %.0.i82, i64 1, !dbg !49
  %883 = fptrunc <2 x float> %882 to <2 x half>, !dbg !49
  %884 = insertelement <2 x float> poison, float %.0.i85, i64 0, !dbg !49
  %885 = insertelement <2 x float> %884, float %.0.i88, i64 1, !dbg !49
  %886 = fptrunc <2 x float> %885 to <2 x half>, !dbg !49
  %887 = insertelement <2 x float> poison, float %.0.i91, i64 0, !dbg !49
  %888 = insertelement <2 x float> %887, float %.0.i94, i64 1, !dbg !49
  %889 = fptrunc <2 x float> %888 to <2 x half>, !dbg !49
  %890 = insertelement <2 x float> poison, float %.0.i97, i64 0, !dbg !49
  %891 = insertelement <2 x float> %890, float %.0.i100, i64 1, !dbg !49
  %892 = fptrunc <2 x float> %891 to <2 x half>, !dbg !49
  %893 = insertelement <2 x float> poison, float %.0.i103, i64 0, !dbg !49
  %894 = insertelement <2 x float> %893, float %.0.i106, i64 1, !dbg !49
  %895 = fptrunc <2 x float> %894 to <2 x half>, !dbg !49
  %896 = insertelement <2 x float> poison, float %.0.i109, i64 0, !dbg !49
  %897 = insertelement <2 x float> %896, float %.0.i112, i64 1, !dbg !49
  %898 = fptrunc <2 x float> %897 to <2 x half>, !dbg !49
  %899 = insertelement <2 x float> poison, float %.0.i115, i64 0, !dbg !49
  %900 = insertelement <2 x float> %899, float %.0.i118, i64 1, !dbg !49
  %901 = fptrunc <2 x float> %900 to <2 x half>, !dbg !49
  %902 = insertelement <2 x float> poison, float %.0.i121, i64 0, !dbg !49
  %903 = insertelement <2 x float> %902, float %.0.i124, i64 1, !dbg !49
  %904 = fptrunc <2 x float> %903 to <2 x half>, !dbg !49
  %905 = insertelement <2 x float> poison, float %.0.i127, i64 0, !dbg !49
  %906 = insertelement <2 x float> %905, float %.0.i130, i64 1, !dbg !49
  %907 = fptrunc <2 x float> %906 to <2 x half>, !dbg !49
  %908 = insertelement <2 x float> poison, float %.0.i133, i64 0, !dbg !49
  %909 = insertelement <2 x float> %908, float %.0.i136, i64 1, !dbg !49
  %910 = fptrunc <2 x float> %909 to <2 x half>, !dbg !49
  %911 = insertelement <2 x float> poison, float %.0.i139, i64 0, !dbg !49
  %912 = insertelement <2 x float> %911, float %.0.i142, i64 1, !dbg !49
  %913 = fptrunc <2 x float> %912 to <2 x half>, !dbg !49
  %914 = bitcast <2 x half> %868 to i32, !dbg !50
  %915 = bitcast <2 x half> %871 to i32, !dbg !50
  %916 = bitcast <2 x half> %874 to i32, !dbg !50
  %917 = bitcast <2 x half> %877 to i32, !dbg !50
  %918 = bitcast <2 x half> %880 to i32, !dbg !50
  %919 = bitcast <2 x half> %883 to i32, !dbg !50
  %920 = bitcast <2 x half> %886 to i32, !dbg !50
  %921 = bitcast <2 x half> %889 to i32, !dbg !50
  %922 = bitcast <2 x half> %892 to i32, !dbg !50
  %923 = bitcast <2 x half> %895 to i32, !dbg !50
  %924 = bitcast <2 x half> %898 to i32, !dbg !50
  %925 = bitcast <2 x half> %901 to i32, !dbg !50
  %926 = bitcast <2 x half> %904 to i32, !dbg !50
  %927 = bitcast <2 x half> %907 to i32, !dbg !50
  %928 = bitcast <2 x half> %910 to i32, !dbg !50
  %929 = bitcast <2 x half> %913 to i32, !dbg !50
  tail call void asm sideeffect "wgmma.fence.sync.aligned;", ""() #2, !dbg !50
  %930 = ptrtoint ptr addrspace(3) %865 to i32, !dbg !50
  %931 = lshr exact i32 %930, 4, !dbg !50
  %932 = and i32 %931, 16383, !dbg !50
  %933 = zext nneg i32 %932 to i64, !dbg !50
  %934 = or disjoint i64 %933, 4611686293338849280, !dbg !50
  %935 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.f16.f16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, {$64,$65,$66,$67}, $68, $69, 1, 1, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,r,r,r,r,l,b"(float %833, float %834, float %835, float %836, float %837, float %838, float %839, float %840, float %841, float %842, float %843, float %844, float %845, float %846, float %847, float %848, float %849, float %850, float %851, float %852, float %853, float %854, float %855, float %856, float %857, float %858, float %859, float %860, float %861, float %862, float %863, float %864, i32 %914, i32 %915, i32 %916, i32 %917, i64 %934, i1 true) #2, !dbg !50
  %936 = add i32 %930, 2048, !dbg !50
  %937 = lshr exact i32 %936, 4, !dbg !50
  %938 = and i32 %937, 16383, !dbg !50
  %939 = zext nneg i32 %938 to i64, !dbg !50
  %940 = or disjoint i64 %939, 4611686293338849280, !dbg !50
  %941 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %935, 0, !dbg !50
  %942 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %935, 1, !dbg !50
  %943 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %935, 2, !dbg !50
  %944 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %935, 3, !dbg !50
  %945 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %935, 4, !dbg !50
  %946 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %935, 5, !dbg !50
  %947 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %935, 6, !dbg !50
  %948 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %935, 7, !dbg !50
  %949 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %935, 8, !dbg !50
  %950 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %935, 9, !dbg !50
  %951 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %935, 10, !dbg !50
  %952 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %935, 11, !dbg !50
  %953 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %935, 12, !dbg !50
  %954 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %935, 13, !dbg !50
  %955 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %935, 14, !dbg !50
  %956 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %935, 15, !dbg !50
  %957 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %935, 16, !dbg !50
  %958 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %935, 17, !dbg !50
  %959 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %935, 18, !dbg !50
  %960 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %935, 19, !dbg !50
  %961 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %935, 20, !dbg !50
  %962 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %935, 21, !dbg !50
  %963 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %935, 22, !dbg !50
  %964 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %935, 23, !dbg !50
  %965 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %935, 24, !dbg !50
  %966 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %935, 25, !dbg !50
  %967 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %935, 26, !dbg !50
  %968 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %935, 27, !dbg !50
  %969 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %935, 28, !dbg !50
  %970 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %935, 29, !dbg !50
  %971 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %935, 30, !dbg !50
  %972 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %935, 31, !dbg !50
  %973 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.f16.f16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, {$64,$65,$66,$67}, $68, $69, 1, 1, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,r,r,r,r,l,b"(float %941, float %942, float %943, float %944, float %945, float %946, float %947, float %948, float %949, float %950, float %951, float %952, float %953, float %954, float %955, float %956, float %957, float %958, float %959, float %960, float %961, float %962, float %963, float %964, float %965, float %966, float %967, float %968, float %969, float %970, float %971, float %972, i32 %918, i32 %919, i32 %920, i32 %921, i64 %940, i1 true) #2, !dbg !50
  %974 = add i32 %930, 4096, !dbg !50
  %975 = lshr exact i32 %974, 4, !dbg !50
  %976 = and i32 %975, 16383, !dbg !50
  %977 = zext nneg i32 %976 to i64, !dbg !50
  %978 = or disjoint i64 %977, 4611686293338849280, !dbg !50
  %979 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %973, 0, !dbg !50
  %980 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %973, 1, !dbg !50
  %981 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %973, 2, !dbg !50
  %982 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %973, 3, !dbg !50
  %983 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %973, 4, !dbg !50
  %984 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %973, 5, !dbg !50
  %985 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %973, 6, !dbg !50
  %986 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %973, 7, !dbg !50
  %987 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %973, 8, !dbg !50
  %988 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %973, 9, !dbg !50
  %989 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %973, 10, !dbg !50
  %990 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %973, 11, !dbg !50
  %991 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %973, 12, !dbg !50
  %992 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %973, 13, !dbg !50
  %993 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %973, 14, !dbg !50
  %994 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %973, 15, !dbg !50
  %995 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %973, 16, !dbg !50
  %996 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %973, 17, !dbg !50
  %997 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %973, 18, !dbg !50
  %998 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %973, 19, !dbg !50
  %999 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %973, 20, !dbg !50
  %1000 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %973, 21, !dbg !50
  %1001 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %973, 22, !dbg !50
  %1002 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %973, 23, !dbg !50
  %1003 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %973, 24, !dbg !50
  %1004 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %973, 25, !dbg !50
  %1005 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %973, 26, !dbg !50
  %1006 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %973, 27, !dbg !50
  %1007 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %973, 28, !dbg !50
  %1008 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %973, 29, !dbg !50
  %1009 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %973, 30, !dbg !50
  %1010 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %973, 31, !dbg !50
  %1011 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.f16.f16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, {$64,$65,$66,$67}, $68, $69, 1, 1, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,r,r,r,r,l,b"(float %979, float %980, float %981, float %982, float %983, float %984, float %985, float %986, float %987, float %988, float %989, float %990, float %991, float %992, float %993, float %994, float %995, float %996, float %997, float %998, float %999, float %1000, float %1001, float %1002, float %1003, float %1004, float %1005, float %1006, float %1007, float %1008, float %1009, float %1010, i32 %922, i32 %923, i32 %924, i32 %925, i64 %978, i1 true) #2, !dbg !50
  %1012 = add i32 %930, 6144, !dbg !50
  %1013 = lshr exact i32 %1012, 4, !dbg !50
  %1014 = and i32 %1013, 16383, !dbg !50
  %1015 = zext nneg i32 %1014 to i64, !dbg !50
  %1016 = or disjoint i64 %1015, 4611686293338849280, !dbg !50
  %1017 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1011, 0, !dbg !50
  %1018 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1011, 1, !dbg !50
  %1019 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1011, 2, !dbg !50
  %1020 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1011, 3, !dbg !50
  %1021 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1011, 4, !dbg !50
  %1022 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1011, 5, !dbg !50
  %1023 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1011, 6, !dbg !50
  %1024 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1011, 7, !dbg !50
  %1025 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1011, 8, !dbg !50
  %1026 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1011, 9, !dbg !50
  %1027 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1011, 10, !dbg !50
  %1028 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1011, 11, !dbg !50
  %1029 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1011, 12, !dbg !50
  %1030 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1011, 13, !dbg !50
  %1031 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1011, 14, !dbg !50
  %1032 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1011, 15, !dbg !50
  %1033 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1011, 16, !dbg !50
  %1034 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1011, 17, !dbg !50
  %1035 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1011, 18, !dbg !50
  %1036 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1011, 19, !dbg !50
  %1037 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1011, 20, !dbg !50
  %1038 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1011, 21, !dbg !50
  %1039 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1011, 22, !dbg !50
  %1040 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1011, 23, !dbg !50
  %1041 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1011, 24, !dbg !50
  %1042 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1011, 25, !dbg !50
  %1043 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1011, 26, !dbg !50
  %1044 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1011, 27, !dbg !50
  %1045 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1011, 28, !dbg !50
  %1046 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1011, 29, !dbg !50
  %1047 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1011, 30, !dbg !50
  %1048 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1011, 31, !dbg !50
  %1049 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.f16.f16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, {$64,$65,$66,$67}, $68, $69, 1, 1, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,r,r,r,r,l,b"(float %1017, float %1018, float %1019, float %1020, float %1021, float %1022, float %1023, float %1024, float %1025, float %1026, float %1027, float %1028, float %1029, float %1030, float %1031, float %1032, float %1033, float %1034, float %1035, float %1036, float %1037, float %1038, float %1039, float %1040, float %1041, float %1042, float %1043, float %1044, float %1045, float %1046, float %1047, float %1048, i32 %926, i32 %927, i32 %928, i32 %929, i64 %1016, i1 true) #2, !dbg !50
  %1050 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1049, 0, !dbg !50
  %1051 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1049, 1, !dbg !50
  %1052 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1049, 2, !dbg !50
  %1053 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1049, 3, !dbg !50
  %1054 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1049, 4, !dbg !50
  %1055 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1049, 5, !dbg !50
  %1056 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1049, 6, !dbg !50
  %1057 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1049, 7, !dbg !50
  %1058 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1049, 8, !dbg !50
  %1059 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1049, 9, !dbg !50
  %1060 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1049, 10, !dbg !50
  %1061 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1049, 11, !dbg !50
  %1062 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1049, 12, !dbg !50
  %1063 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1049, 13, !dbg !50
  %1064 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1049, 14, !dbg !50
  %1065 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1049, 15, !dbg !50
  %1066 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1049, 16, !dbg !50
  %1067 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1049, 17, !dbg !50
  %1068 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1049, 18, !dbg !50
  %1069 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1049, 19, !dbg !50
  %1070 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1049, 20, !dbg !50
  %1071 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1049, 21, !dbg !50
  %1072 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1049, 22, !dbg !50
  %1073 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1049, 23, !dbg !50
  %1074 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1049, 24, !dbg !50
  %1075 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1049, 25, !dbg !50
  %1076 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1049, 26, !dbg !50
  %1077 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1049, 27, !dbg !50
  %1078 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1049, 28, !dbg !50
  %1079 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1049, 29, !dbg !50
  %1080 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1049, 30, !dbg !50
  %1081 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1049, 31, !dbg !50
  tail call void asm sideeffect "wgmma.commit_group.sync.aligned;", ""() #2, !dbg !50
  %1082 = add nuw nsw i64 %213, 64, !dbg !51
  %1083 = add i32 %212, 1, !dbg !32
  %1084 = icmp sgt i32 %1083, 3, !dbg !32
  %1085 = select i1 %1084, i32 0, i32 %1083, !dbg !32
  %1086 = or disjoint i64 %1082, %51, !dbg !27
  %1087 = or disjoint i64 %1082, %52, !dbg !27
  %1088 = mul i64 %1086, %39, !dbg !27
  %1089 = mul i64 %1087, %39, !dbg !27
  %gep = getelementptr half, ptr addrspace(1) %invariant.gep, i64 %1088, !dbg !27
  %gep215 = getelementptr half, ptr addrspace(1) %invariant.gep, i64 %1089, !dbg !27
  %1090 = shl i32 %1085, 12, !dbg !27
  %1091 = getelementptr half, ptr addrspace(3) @global_smem, i32 %1090, !dbg !27
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !27
  %1092 = getelementptr inbounds nuw half, ptr addrspace(3) %1091, i32 %126, !dbg !27
  %1093 = getelementptr inbounds nuw half, ptr addrspace(3) %1091, i32 %135, !dbg !27
  %1094 = select i1 %251, i32 16, i32 0, !dbg !27
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %1092, ptr addrspace(1) %gep, i32 %1094) #2, !dbg !27
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %1093, ptr addrspace(1) %gep215, i32 %1094) #2, !dbg !27
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !27
  %1095 = mul i64 %1086, %37, !dbg !30
  %1096 = mul i64 %1087, %37, !dbg !30
  %gep217 = getelementptr half, ptr addrspace(1) %invariant.gep216, i64 %1095, !dbg !30
  %gep219 = getelementptr half, ptr addrspace(1) %invariant.gep216, i64 %1096, !dbg !30
  %1097 = getelementptr half, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %1090, !dbg !30
  %1098 = getelementptr inbounds nuw half, ptr addrspace(3) %1097, i32 %126, !dbg !30
  %1099 = getelementptr inbounds nuw half, ptr addrspace(3) %1097, i32 %135, !dbg !30
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %1098, ptr addrspace(1) %gep217, i32 %1094) #2, !dbg !30
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %1099, ptr addrspace(1) %gep219, i32 %1094) #2, !dbg !30
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !30
  %1100 = add nuw nsw i32 %250, 64, !dbg !32
  %1101 = icmp samesign ult i32 %250, 4032, !dbg !32
  br i1 %1101, label %210, label %1102, !dbg !32

1102:                                             ; preds = %__nv_exp2f.exit149
  %1103 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "// wait for regs: $0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31\0A\09wgmma.wait_group.sync.aligned 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31"(float %1050, float %1051, float %1052, float %1053, float %1054, float %1055, float %1056, float %1057, float %1058, float %1059, float %1060, float %1061, float %1062, float %1063, float %1064, float %1065, float %1066, float %1067, float %1068, float %1069, float %1070, float %1071, float %1072, float %1073, float %1074, float %1075, float %1076, float %1077, float %1078, float %1079, float %1080, float %1081) #2, !dbg !32
  tail call void @llvm.nvvm.cp.async.wait.group(i32 0), !dbg !32
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !32
  %1104 = fcmp olt float %831, 0x3810000000000000, !dbg !52
  %1105 = fmul float %831, 0x4160000000000000, !dbg !52
  %.02.i = select i1 %1104, float %1105, float %831, !dbg !52
  %i.i.0.i = select i1 %1104, float -2.300000e+01, float 0.000000e+00, !dbg !52
  %1106 = bitcast float %.02.i to i32, !dbg !52
  %1107 = add i32 %1106, -1060439283, !dbg !52
  %1108 = and i32 %1107, -8388608, !dbg !52
  %1109 = sub i32 %1106, %1108, !dbg !52
  %1110 = bitcast i32 %1109 to float, !dbg !52
  %1111 = sitofp i32 %1108 to float, !dbg !52
  %1112 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !52
  %.not.i150 = icmp eq i32 %1112, 0, !dbg !52
  %1113 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1111, float 0x3E80000000000000, float %i.i.0.i) #2, !dbg !52
  %1114 = tail call float @llvm.nvvm.fma.rn.f(float %1111, float 0x3E80000000000000, float %i.i.0.i) #2, !dbg !52
  %.08.i = select i1 %.not.i150, float %1114, float %1113, !dbg !52
  %1115 = fadd float %1110, -1.000000e+00, !dbg !52
  %1116 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !52
  %.not1.i = icmp eq i32 %1116, 0, !dbg !52
  %1117 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3FB8D64FE0000000, float %1115, float 0xBFC58FE600000000) #2, !dbg !52
  %1118 = tail call float @llvm.nvvm.fma.rn.f(float 0x3FB8D64FE0000000, float %1115, float 0xBFC58FE600000000) #2, !dbg !52
  %.010.i = select i1 %.not1.i, float %1118, float %1117, !dbg !52
  %1119 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !52
  %.not2.i = icmp eq i32 %1119, 0, !dbg !52
  %1120 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i, float %1115, float 0x3FC5F9E540000000) #2, !dbg !52
  %1121 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i, float %1115, float 0x3FC5F9E540000000) #2, !dbg !52
  %.011.i = select i1 %.not2.i, float %1121, float %1120, !dbg !52
  %1122 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !52
  %.not3.i = icmp eq i32 %1122, 0, !dbg !52
  %1123 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i, float %1115, float 0xBFC6E9C860000000) #2, !dbg !52
  %1124 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i, float %1115, float 0xBFC6E9C860000000) #2, !dbg !52
  %.012.i = select i1 %.not3.i, float %1124, float %1123, !dbg !52
  %1125 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !52
  %.not4.i = icmp eq i32 %1125, 0, !dbg !52
  %1126 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i, float %1115, float 0x3FCA417E80000000) #2, !dbg !52
  %1127 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i, float %1115, float 0x3FCA417E80000000) #2, !dbg !52
  %.09.i = select i1 %.not4.i, float %1127, float %1126, !dbg !52
  %1128 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !52
  %.not5.i = icmp eq i32 %1128, 0, !dbg !52
  %1129 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i, float %1115, float 0xBFCEC79160000000) #2, !dbg !52
  %1130 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i, float %1115, float 0xBFCEC79160000000) #2, !dbg !52
  %.05.i = select i1 %.not5.i, float %1130, float %1129, !dbg !52
  %1131 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !52
  %.not6.i = icmp eq i32 %1131, 0, !dbg !52
  %1132 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i, float %1115, float 0x3FD277F320000000) #2, !dbg !52
  %1133 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i, float %1115, float 0x3FD277F320000000) #2, !dbg !52
  %.01.i = select i1 %.not6.i, float %1133, float %1132, !dbg !52
  %1134 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !52
  %.not7.i = icmp eq i32 %1134, 0, !dbg !52
  %1135 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i, float %1115, float 0xBFD7154920000000) #2, !dbg !52
  %1136 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i, float %1115, float 0xBFD7154920000000) #2, !dbg !52
  %.0.i151 = select i1 %.not7.i, float %1136, float %1135, !dbg !52
  %1137 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !52
  %.not8.i = icmp eq i32 %1137, 0, !dbg !52
  %1138 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i151, float %1115, float 0x3FDEC70940000000) #2, !dbg !52
  %1139 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i151, float %1115, float 0x3FDEC70940000000) #2, !dbg !52
  %.07.i = select i1 %.not8.i, float %1139, float %1138, !dbg !52
  %1140 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !52
  %.not9.i = icmp eq i32 %1140, 0, !dbg !52
  %1141 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i, float %1115, float 0xBFE7154760000000) #2, !dbg !52
  %1142 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i, float %1115, float 0xBFE7154760000000) #2, !dbg !52
  %.06.i = select i1 %.not9.i, float %1142, float %1141, !dbg !52
  %1143 = fmul float %1115, %.06.i, !dbg !52
  %1144 = fmul float %1115, %1143, !dbg !52
  %1145 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !52
  %.not10.i = icmp eq i32 %1145, 0, !dbg !52
  %1146 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1115, float 0x3FF7154760000000, float %1144) #2, !dbg !52
  %1147 = tail call float @llvm.nvvm.fma.rn.f(float %1115, float 0x3FF7154760000000, float %1144) #2, !dbg !52
  %.04.i = select i1 %.not10.i, float %1147, float %1146, !dbg !52
  %1148 = fadd float %.08.i, %.04.i, !dbg !52
  %1149 = icmp ugt i32 %1106, 2139095039, !dbg !52
  br i1 %1149, label %__nv_fmaf_rn.exit.i.i, label %__nv_log2f.exit, !dbg !52

__nv_fmaf_rn.exit.i.i:                            ; preds = %1102
  %1150 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !52
  %.not11.i = icmp eq i32 %1150, 0, !dbg !52
  %1151 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !52
  %1152 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !52
  %.03.i = select i1 %.not11.i, float %1152, float %1151, !dbg !52
  br label %__nv_log2f.exit, !dbg !52

__nv_log2f.exit:                                  ; preds = %1102, %__nv_fmaf_rn.exit.i.i
  %r.i.0.i = phi float [ %.03.i, %__nv_fmaf_rn.exit.i.i ], [ %1148, %1102 ], !dbg !52
  %1153 = fcmp olt float %832, 0x3810000000000000, !dbg !52
  %1154 = fmul float %832, 0x4160000000000000, !dbg !52
  %.02.i152 = select i1 %1153, float %1154, float %832, !dbg !52
  %i.i.0.i153 = select i1 %1153, float -2.300000e+01, float 0.000000e+00, !dbg !52
  %1155 = bitcast float %.02.i152 to i32, !dbg !52
  %1156 = add i32 %1155, -1060439283, !dbg !52
  %1157 = and i32 %1156, -8388608, !dbg !52
  %1158 = sub i32 %1155, %1157, !dbg !52
  %1159 = bitcast i32 %1158 to float, !dbg !52
  %1160 = sitofp i32 %1157 to float, !dbg !52
  %1161 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !52
  %.not.i154 = icmp eq i32 %1161, 0, !dbg !52
  %1162 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1160, float 0x3E80000000000000, float %i.i.0.i153) #2, !dbg !52
  %1163 = tail call float @llvm.nvvm.fma.rn.f(float %1160, float 0x3E80000000000000, float %i.i.0.i153) #2, !dbg !52
  %.08.i155 = select i1 %.not.i154, float %1163, float %1162, !dbg !52
  %1164 = fadd float %1159, -1.000000e+00, !dbg !52
  %1165 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !52
  %.not1.i156 = icmp eq i32 %1165, 0, !dbg !52
  %1166 = tail call float @llvm.nvvm.fma.rn.ftz.f(float 0x3FB8D64FE0000000, float %1164, float 0xBFC58FE600000000) #2, !dbg !52
  %1167 = tail call float @llvm.nvvm.fma.rn.f(float 0x3FB8D64FE0000000, float %1164, float 0xBFC58FE600000000) #2, !dbg !52
  %.010.i157 = select i1 %.not1.i156, float %1167, float %1166, !dbg !52
  %1168 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !52
  %.not2.i158 = icmp eq i32 %1168, 0, !dbg !52
  %1169 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.010.i157, float %1164, float 0x3FC5F9E540000000) #2, !dbg !52
  %1170 = tail call float @llvm.nvvm.fma.rn.f(float %.010.i157, float %1164, float 0x3FC5F9E540000000) #2, !dbg !52
  %.011.i159 = select i1 %.not2.i158, float %1170, float %1169, !dbg !52
  %1171 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !52
  %.not3.i160 = icmp eq i32 %1171, 0, !dbg !52
  %1172 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.011.i159, float %1164, float 0xBFC6E9C860000000) #2, !dbg !52
  %1173 = tail call float @llvm.nvvm.fma.rn.f(float %.011.i159, float %1164, float 0xBFC6E9C860000000) #2, !dbg !52
  %.012.i161 = select i1 %.not3.i160, float %1173, float %1172, !dbg !52
  %1174 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !52
  %.not4.i162 = icmp eq i32 %1174, 0, !dbg !52
  %1175 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.012.i161, float %1164, float 0x3FCA417E80000000) #2, !dbg !52
  %1176 = tail call float @llvm.nvvm.fma.rn.f(float %.012.i161, float %1164, float 0x3FCA417E80000000) #2, !dbg !52
  %.09.i163 = select i1 %.not4.i162, float %1176, float %1175, !dbg !52
  %1177 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !52
  %.not5.i164 = icmp eq i32 %1177, 0, !dbg !52
  %1178 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.09.i163, float %1164, float 0xBFCEC79160000000) #2, !dbg !52
  %1179 = tail call float @llvm.nvvm.fma.rn.f(float %.09.i163, float %1164, float 0xBFCEC79160000000) #2, !dbg !52
  %.05.i165 = select i1 %.not5.i164, float %1179, float %1178, !dbg !52
  %1180 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !52
  %.not6.i166 = icmp eq i32 %1180, 0, !dbg !52
  %1181 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.05.i165, float %1164, float 0x3FD277F320000000) #2, !dbg !52
  %1182 = tail call float @llvm.nvvm.fma.rn.f(float %.05.i165, float %1164, float 0x3FD277F320000000) #2, !dbg !52
  %.01.i167 = select i1 %.not6.i166, float %1182, float %1181, !dbg !52
  %1183 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !52
  %.not7.i168 = icmp eq i32 %1183, 0, !dbg !52
  %1184 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.01.i167, float %1164, float 0xBFD7154920000000) #2, !dbg !52
  %1185 = tail call float @llvm.nvvm.fma.rn.f(float %.01.i167, float %1164, float 0xBFD7154920000000) #2, !dbg !52
  %.0.i169 = select i1 %.not7.i168, float %1185, float %1184, !dbg !52
  %1186 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !52
  %.not8.i170 = icmp eq i32 %1186, 0, !dbg !52
  %1187 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.0.i169, float %1164, float 0x3FDEC70940000000) #2, !dbg !52
  %1188 = tail call float @llvm.nvvm.fma.rn.f(float %.0.i169, float %1164, float 0x3FDEC70940000000) #2, !dbg !52
  %.07.i171 = select i1 %.not8.i170, float %1188, float %1187, !dbg !52
  %1189 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !52
  %.not9.i172 = icmp eq i32 %1189, 0, !dbg !52
  %1190 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.07.i171, float %1164, float 0xBFE7154760000000) #2, !dbg !52
  %1191 = tail call float @llvm.nvvm.fma.rn.f(float %.07.i171, float %1164, float 0xBFE7154760000000) #2, !dbg !52
  %.06.i173 = select i1 %.not9.i172, float %1191, float %1190, !dbg !52
  %1192 = fmul float %1164, %.06.i173, !dbg !52
  %1193 = fmul float %1164, %1192, !dbg !52
  %1194 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !52
  %.not10.i174 = icmp eq i32 %1194, 0, !dbg !52
  %1195 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %1164, float 0x3FF7154760000000, float %1193) #2, !dbg !52
  %1196 = tail call float @llvm.nvvm.fma.rn.f(float %1164, float 0x3FF7154760000000, float %1193) #2, !dbg !52
  %.04.i175 = select i1 %.not10.i174, float %1196, float %1195, !dbg !52
  %1197 = fadd float %.08.i155, %.04.i175, !dbg !52
  %1198 = icmp ugt i32 %1155, 2139095039, !dbg !52
  br i1 %1198, label %__nv_fmaf_rn.exit.i.i178, label %__nv_log2f.exit181, !dbg !52

__nv_fmaf_rn.exit.i.i178:                         ; preds = %__nv_log2f.exit
  %1199 = tail call i32 @__nvvm_reflect(ptr nonnull @.str) #2, !dbg !52
  %.not11.i179 = icmp eq i32 %1199, 0, !dbg !52
  %1200 = tail call float @llvm.nvvm.fma.rn.ftz.f(float %.02.i152, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !52
  %1201 = tail call float @llvm.nvvm.fma.rn.f(float %.02.i152, float 0x7FF0000000000000, float 0x7FF0000000000000) #2, !dbg !52
  %.03.i180 = select i1 %.not11.i179, float %1201, float %1200, !dbg !52
  br label %__nv_log2f.exit181, !dbg !52

__nv_log2f.exit181:                               ; preds = %__nv_log2f.exit, %__nv_fmaf_rn.exit.i.i178
  %r.i.0.i176 = phi float [ %.03.i180, %__nv_fmaf_rn.exit.i.i178 ], [ %1197, %__nv_log2f.exit ], !dbg !52
  %1202 = fcmp oeq float %.02.i, 0.000000e+00, !dbg !52
  %r.i.1.i = select i1 %1202, float 0xFFF0000000000000, float %r.i.0.i, !dbg !52
  %1203 = getelementptr half, ptr addrspace(1) %5, i64 %31, !dbg !53
  %1204 = sext i32 %17 to i64, !dbg !54
  %1205 = and i32 %40, 127, !dbg !24
  %1206 = or disjoint i32 %33, %1205, !dbg !55
  %1207 = icmp eq i32 %44, 0, !dbg !24
  %1208 = fcmp oeq float %.02.i152, 0.000000e+00, !dbg !52
  %r.i.1.i177 = select i1 %1208, float 0xFFF0000000000000, float %r.i.0.i176, !dbg !52
  %1209 = fadd float %545, %r.i.1.i, !dbg !56
  %1210 = fadd float %546, %r.i.1.i177, !dbg !56
  %1211 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1103, 0, !dbg !57
  %1212 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1103, 1, !dbg !57
  %1213 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1103, 2, !dbg !57
  %1214 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1103, 3, !dbg !57
  %1215 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1103, 4, !dbg !57
  %1216 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1103, 5, !dbg !57
  %1217 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1103, 6, !dbg !57
  %1218 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1103, 7, !dbg !57
  %1219 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1103, 8, !dbg !57
  %1220 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1103, 9, !dbg !57
  %1221 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1103, 10, !dbg !57
  %1222 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1103, 11, !dbg !57
  %1223 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1103, 12, !dbg !57
  %1224 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1103, 13, !dbg !57
  %1225 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1103, 14, !dbg !57
  %1226 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1103, 15, !dbg !57
  %1227 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1103, 16, !dbg !57
  %1228 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1103, 17, !dbg !57
  %1229 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1103, 18, !dbg !57
  %1230 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1103, 19, !dbg !57
  %1231 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1103, 20, !dbg !57
  %1232 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1103, 21, !dbg !57
  %1233 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1103, 22, !dbg !57
  %1234 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1103, 23, !dbg !57
  %1235 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1103, 24, !dbg !57
  %1236 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1103, 25, !dbg !57
  %1237 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1103, 26, !dbg !57
  %1238 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1103, 27, !dbg !57
  %1239 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1103, 28, !dbg !57
  %1240 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1103, 29, !dbg !57
  %1241 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1103, 30, !dbg !57
  %1242 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1103, 31, !dbg !57
  %1243 = tail call float @llvm.nvvm.div.full(float %1211, float %831), !dbg !57
  %1244 = tail call float @llvm.nvvm.div.full(float %1212, float %831), !dbg !57
  %1245 = tail call float @llvm.nvvm.div.full(float %1213, float %832), !dbg !57
  %1246 = tail call float @llvm.nvvm.div.full(float %1214, float %832), !dbg !57
  %1247 = tail call float @llvm.nvvm.div.full(float %1215, float %831), !dbg !57
  %1248 = tail call float @llvm.nvvm.div.full(float %1216, float %831), !dbg !57
  %1249 = tail call float @llvm.nvvm.div.full(float %1217, float %832), !dbg !57
  %1250 = tail call float @llvm.nvvm.div.full(float %1218, float %832), !dbg !57
  %1251 = tail call float @llvm.nvvm.div.full(float %1219, float %831), !dbg !57
  %1252 = tail call float @llvm.nvvm.div.full(float %1220, float %831), !dbg !57
  %1253 = tail call float @llvm.nvvm.div.full(float %1221, float %832), !dbg !57
  %1254 = tail call float @llvm.nvvm.div.full(float %1222, float %832), !dbg !57
  %1255 = tail call float @llvm.nvvm.div.full(float %1223, float %831), !dbg !57
  %1256 = tail call float @llvm.nvvm.div.full(float %1224, float %831), !dbg !57
  %1257 = tail call float @llvm.nvvm.div.full(float %1225, float %832), !dbg !57
  %1258 = tail call float @llvm.nvvm.div.full(float %1226, float %832), !dbg !57
  %1259 = tail call float @llvm.nvvm.div.full(float %1227, float %831), !dbg !57
  %1260 = tail call float @llvm.nvvm.div.full(float %1228, float %831), !dbg !57
  %1261 = tail call float @llvm.nvvm.div.full(float %1229, float %832), !dbg !57
  %1262 = tail call float @llvm.nvvm.div.full(float %1230, float %832), !dbg !57
  %1263 = tail call float @llvm.nvvm.div.full(float %1231, float %831), !dbg !57
  %1264 = tail call float @llvm.nvvm.div.full(float %1232, float %831), !dbg !57
  %1265 = tail call float @llvm.nvvm.div.full(float %1233, float %832), !dbg !57
  %1266 = tail call float @llvm.nvvm.div.full(float %1234, float %832), !dbg !57
  %1267 = tail call float @llvm.nvvm.div.full(float %1235, float %831), !dbg !57
  %1268 = tail call float @llvm.nvvm.div.full(float %1236, float %831), !dbg !57
  %1269 = tail call float @llvm.nvvm.div.full(float %1237, float %832), !dbg !57
  %1270 = tail call float @llvm.nvvm.div.full(float %1238, float %832), !dbg !57
  %1271 = tail call float @llvm.nvvm.div.full(float %1239, float %831), !dbg !57
  %1272 = tail call float @llvm.nvvm.div.full(float %1240, float %831), !dbg !57
  %1273 = tail call float @llvm.nvvm.div.full(float %1241, float %832), !dbg !57
  %1274 = tail call float @llvm.nvvm.div.full(float %1242, float %832), !dbg !57
  %1275 = shl nuw nsw i32 %22, 5, !dbg !58
  %1276 = zext nneg i32 %1275 to i64, !dbg !59
  %1277 = getelementptr float, ptr addrspace(1) %4, i64 %1276, !dbg !59
  %1278 = sext i32 %1206 to i64, !dbg !60
  %1279 = getelementptr float, ptr addrspace(1) %1277, i64 %1278, !dbg !60
  %1280 = lshr i32 %40, 2, !dbg !61
  %1281 = and i32 %1280, 7, !dbg !61
  %1282 = lshr i32 %40, 1, !dbg !61
  %1283 = and i32 %1282, 48, !dbg !61
  %1284 = lshr exact i32 %44, 1, !dbg !61
  %1285 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %1283, !dbg !61
  %1286 = getelementptr inbounds nuw float, ptr addrspace(3) %1285, i32 %1281, !dbg !61
  %1287 = getelementptr inbounds nuw float, ptr addrspace(3) %1286, i32 %1284, !dbg !61
  store float %1209, ptr addrspace(3) %1287, align 4, !dbg !61
  %1288 = getelementptr inbounds nuw i8, ptr addrspace(3) %1287, i32 32, !dbg !61
  store float %1210, ptr addrspace(3) %1288, align 4, !dbg !61
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !61
  %1289 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %1205, !dbg !61
  %1290 = load i32, ptr addrspace(3) %1289, align 4, !dbg !61
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %1290, ptr addrspace(1) %1279, i1 %1207) #2, !dbg !61
  %1291 = insertelement <2 x float> poison, float %1243, i64 0, !dbg !62
  %1292 = insertelement <2 x float> %1291, float %1244, i64 1, !dbg !62
  %1293 = fptrunc <2 x float> %1292 to <2 x half>, !dbg !62
  %1294 = insertelement <2 x float> poison, float %1245, i64 0, !dbg !62
  %1295 = insertelement <2 x float> %1294, float %1246, i64 1, !dbg !62
  %1296 = fptrunc <2 x float> %1295 to <2 x half>, !dbg !62
  %1297 = insertelement <2 x float> poison, float %1247, i64 0, !dbg !62
  %1298 = insertelement <2 x float> %1297, float %1248, i64 1, !dbg !62
  %1299 = fptrunc <2 x float> %1298 to <2 x half>, !dbg !62
  %1300 = insertelement <2 x float> poison, float %1249, i64 0, !dbg !62
  %1301 = insertelement <2 x float> %1300, float %1250, i64 1, !dbg !62
  %1302 = fptrunc <2 x float> %1301 to <2 x half>, !dbg !62
  %1303 = insertelement <2 x float> poison, float %1251, i64 0, !dbg !62
  %1304 = insertelement <2 x float> %1303, float %1252, i64 1, !dbg !62
  %1305 = fptrunc <2 x float> %1304 to <2 x half>, !dbg !62
  %1306 = insertelement <2 x float> poison, float %1253, i64 0, !dbg !62
  %1307 = insertelement <2 x float> %1306, float %1254, i64 1, !dbg !62
  %1308 = fptrunc <2 x float> %1307 to <2 x half>, !dbg !62
  %1309 = insertelement <2 x float> poison, float %1255, i64 0, !dbg !62
  %1310 = insertelement <2 x float> %1309, float %1256, i64 1, !dbg !62
  %1311 = fptrunc <2 x float> %1310 to <2 x half>, !dbg !62
  %1312 = insertelement <2 x float> poison, float %1257, i64 0, !dbg !62
  %1313 = insertelement <2 x float> %1312, float %1258, i64 1, !dbg !62
  %1314 = fptrunc <2 x float> %1313 to <2 x half>, !dbg !62
  %1315 = insertelement <2 x float> poison, float %1259, i64 0, !dbg !62
  %1316 = insertelement <2 x float> %1315, float %1260, i64 1, !dbg !62
  %1317 = fptrunc <2 x float> %1316 to <2 x half>, !dbg !62
  %1318 = insertelement <2 x float> poison, float %1261, i64 0, !dbg !62
  %1319 = insertelement <2 x float> %1318, float %1262, i64 1, !dbg !62
  %1320 = fptrunc <2 x float> %1319 to <2 x half>, !dbg !62
  %1321 = insertelement <2 x float> poison, float %1263, i64 0, !dbg !62
  %1322 = insertelement <2 x float> %1321, float %1264, i64 1, !dbg !62
  %1323 = fptrunc <2 x float> %1322 to <2 x half>, !dbg !62
  %1324 = insertelement <2 x float> poison, float %1265, i64 0, !dbg !62
  %1325 = insertelement <2 x float> %1324, float %1266, i64 1, !dbg !62
  %1326 = fptrunc <2 x float> %1325 to <2 x half>, !dbg !62
  %1327 = insertelement <2 x float> poison, float %1267, i64 0, !dbg !62
  %1328 = insertelement <2 x float> %1327, float %1268, i64 1, !dbg !62
  %1329 = fptrunc <2 x float> %1328 to <2 x half>, !dbg !62
  %1330 = insertelement <2 x float> poison, float %1269, i64 0, !dbg !62
  %1331 = insertelement <2 x float> %1330, float %1270, i64 1, !dbg !62
  %1332 = fptrunc <2 x float> %1331 to <2 x half>, !dbg !62
  %1333 = insertelement <2 x float> poison, float %1271, i64 0, !dbg !62
  %1334 = insertelement <2 x float> %1333, float %1272, i64 1, !dbg !62
  %1335 = fptrunc <2 x float> %1334 to <2 x half>, !dbg !62
  %1336 = insertelement <2 x float> poison, float %1273, i64 0, !dbg !62
  %1337 = insertelement <2 x float> %1336, float %1274, i64 1, !dbg !62
  %1338 = fptrunc <2 x float> %1337 to <2 x half>, !dbg !62
  %1339 = mul nsw i64 %55, %1204, !dbg !63
  %1340 = mul nsw i64 %56, %1204, !dbg !63
  %1341 = mul nsw i64 %57, %1204, !dbg !63
  %1342 = mul nsw i64 %58, %1204, !dbg !63
  %1343 = getelementptr half, ptr addrspace(1) %1203, i64 %1339, !dbg !63
  %1344 = getelementptr half, ptr addrspace(1) %1343, i64 %65, !dbg !63
  %1345 = getelementptr half, ptr addrspace(1) %1203, i64 %1340, !dbg !63
  %1346 = getelementptr half, ptr addrspace(1) %1345, i64 %65, !dbg !63
  %1347 = getelementptr half, ptr addrspace(1) %1203, i64 %1341, !dbg !63
  %1348 = getelementptr half, ptr addrspace(1) %1347, i64 %65, !dbg !63
  %1349 = getelementptr half, ptr addrspace(1) %1203, i64 %1342, !dbg !63
  %1350 = getelementptr half, ptr addrspace(1) %1349, i64 %65, !dbg !63
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !63
  %1351 = shl nuw nsw i32 %40, 6, !dbg !63
  %1352 = and i32 %1351, 960, !dbg !63
  %1353 = and i32 %1282, 8, !dbg !63
  %1354 = or disjoint i32 %1352, %1353, !dbg !63
  %1355 = shl nuw nsw i32 %40, 5, !dbg !63
  %1356 = and i32 %1355, 3072, !dbg !63
  %1357 = or disjoint i32 %1354, %1356, !dbg !63
  %1358 = shl nuw nsw i32 %44, 5, !dbg !63
  %1359 = or disjoint i32 %1357, %1358, !dbg !63
  %1360 = and i32 %63, 1016, !dbg !63
  %1361 = or disjoint i32 %1360, %124, !dbg !63
  %1362 = lshr exact i32 %1359, 3, !dbg !63
  %1363 = and i32 %1362, 1016, !dbg !63
  %1364 = getelementptr inbounds nuw half, ptr addrspace(3) @global_smem, i32 %1363, !dbg !63
  %1365 = getelementptr inbounds nuw half, ptr addrspace(3) %1364, i32 %1359, !dbg !63
  %1366 = bitcast <2 x half> %1293 to i32, !dbg !63
  %1367 = bitcast <2 x half> %1296 to i32, !dbg !63
  %1368 = bitcast <2 x half> %1299 to i32, !dbg !63
  %1369 = bitcast <2 x half> %1302 to i32, !dbg !63
  %1370 = ptrtoint ptr addrspace(3) %1365 to i32, !dbg !63
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %1370, i32 %1366, i32 %1367, i32 %1368, i32 %1369) #2, !dbg !63
  %1371 = getelementptr inbounds nuw i8, ptr addrspace(3) %1365, i32 32, !dbg !63
  %1372 = bitcast <2 x half> %1305 to i32, !dbg !63
  %1373 = bitcast <2 x half> %1308 to i32, !dbg !63
  %1374 = bitcast <2 x half> %1311 to i32, !dbg !63
  %1375 = bitcast <2 x half> %1314 to i32, !dbg !63
  %1376 = ptrtoint ptr addrspace(3) %1371 to i32, !dbg !63
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %1376, i32 %1372, i32 %1373, i32 %1374, i32 %1375) #2, !dbg !63
  %1377 = getelementptr inbounds nuw i8, ptr addrspace(3) %1365, i32 64, !dbg !63
  %1378 = bitcast <2 x half> %1317 to i32, !dbg !63
  %1379 = bitcast <2 x half> %1320 to i32, !dbg !63
  %1380 = bitcast <2 x half> %1323 to i32, !dbg !63
  %1381 = bitcast <2 x half> %1326 to i32, !dbg !63
  %1382 = ptrtoint ptr addrspace(3) %1377 to i32, !dbg !63
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %1382, i32 %1378, i32 %1379, i32 %1380, i32 %1381) #2, !dbg !63
  %1383 = getelementptr inbounds nuw i8, ptr addrspace(3) %1365, i32 96, !dbg !63
  %1384 = bitcast <2 x half> %1329 to i32, !dbg !63
  %1385 = bitcast <2 x half> %1332 to i32, !dbg !63
  %1386 = bitcast <2 x half> %1335 to i32, !dbg !63
  %1387 = bitcast <2 x half> %1338 to i32, !dbg !63
  %1388 = ptrtoint ptr addrspace(3) %1383 to i32, !dbg !63
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %1388, i32 %1384, i32 %1385, i32 %1386, i32 %1387) #2, !dbg !63
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !63
  %1389 = lshr exact i32 %1361, 3, !dbg !63
  %1390 = and i32 %1389, 248, !dbg !63
  %1391 = getelementptr inbounds nuw half, ptr addrspace(3) @global_smem, i32 %1390, !dbg !63
  %1392 = getelementptr inbounds nuw half, ptr addrspace(3) %1391, i32 %1361, !dbg !63
  %1393 = load <4 x i32>, ptr addrspace(3) %1392, align 16, !dbg !63
  %1394 = or disjoint i32 %1361, 2048, !dbg !63
  %1395 = lshr exact i32 %1394, 3, !dbg !63
  %1396 = and i32 %1395, 504, !dbg !63
  %1397 = getelementptr inbounds nuw half, ptr addrspace(3) @global_smem, i32 %1396, !dbg !63
  %1398 = getelementptr inbounds nuw half, ptr addrspace(3) %1397, i32 %1394, !dbg !63
  %1399 = load <4 x i32>, ptr addrspace(3) %1398, align 16, !dbg !63
  %1400 = or disjoint i32 %1361, 4096, !dbg !63
  %1401 = lshr exact i32 %1400, 3, !dbg !63
  %1402 = and i32 %1401, 760, !dbg !63
  %1403 = getelementptr inbounds nuw half, ptr addrspace(3) @global_smem, i32 %1402, !dbg !63
  %1404 = getelementptr inbounds nuw half, ptr addrspace(3) %1403, i32 %1400, !dbg !63
  %1405 = load <4 x i32>, ptr addrspace(3) %1404, align 16, !dbg !63
  %1406 = or disjoint i32 %1361, 6144, !dbg !63
  %1407 = lshr exact i32 %1406, 3, !dbg !63
  %1408 = and i32 %1407, 1016, !dbg !63
  %1409 = getelementptr inbounds nuw half, ptr addrspace(3) @global_smem, i32 %1408, !dbg !63
  %1410 = getelementptr inbounds nuw half, ptr addrspace(3) %1409, i32 %1406, !dbg !63
  %1411 = load <4 x i32>, ptr addrspace(3) %1410, align 16, !dbg !63
  %.extract = extractelement <4 x i32> %1393, i64 0, !dbg !63
  %.extract183 = extractelement <4 x i32> %1393, i64 1, !dbg !63
  %.extract185 = extractelement <4 x i32> %1393, i64 2, !dbg !63
  %.extract187 = extractelement <4 x i32> %1393, i64 3, !dbg !63
  tail call void asm sideeffect "st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l"(i32 %.extract, i32 %.extract183, i32 %.extract185, i32 %.extract187, ptr addrspace(1) %1344) #2, !dbg !63
  %.extract189 = extractelement <4 x i32> %1399, i64 0, !dbg !63
  %.extract191 = extractelement <4 x i32> %1399, i64 1, !dbg !63
  %.extract193 = extractelement <4 x i32> %1399, i64 2, !dbg !63
  %.extract195 = extractelement <4 x i32> %1399, i64 3, !dbg !63
  tail call void asm sideeffect "st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l"(i32 %.extract189, i32 %.extract191, i32 %.extract193, i32 %.extract195, ptr addrspace(1) %1346) #2, !dbg !63
  %.extract197 = extractelement <4 x i32> %1405, i64 0, !dbg !63
  %.extract199 = extractelement <4 x i32> %1405, i64 1, !dbg !63
  %.extract201 = extractelement <4 x i32> %1405, i64 2, !dbg !63
  %.extract203 = extractelement <4 x i32> %1405, i64 3, !dbg !63
  tail call void asm sideeffect "st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l"(i32 %.extract197, i32 %.extract199, i32 %.extract201, i32 %.extract203, ptr addrspace(1) %1348) #2, !dbg !63
  %.extract205 = extractelement <4 x i32> %1411, i64 0, !dbg !63
  %.extract207 = extractelement <4 x i32> %1411, i64 1, !dbg !63
  %.extract209 = extractelement <4 x i32> %1411, i64 2, !dbg !63
  %.extract211 = extractelement <4 x i32> %1411, i64 3, !dbg !63
  tail call void asm sideeffect "st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l"(i32 %.extract205, i32 %.extract207, i32 %.extract209, i32 %.extract211, ptr addrspace(1) %1350) #2, !dbg !63
  ret void, !dbg !64
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 2147483647) i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 65535) i32 @llvm.nvvm.read.ptx.sreg.ctaid.y() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 1024) i32 @llvm.nvvm.read.ptx.sreg.tid.x() #1

; Function Attrs: nounwind
declare void @llvm.nvvm.cp.async.commit.group() #2

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier.cta.sync.aligned.all(i32) #3

; Function Attrs: nounwind
declare void @llvm.nvvm.cp.async.wait.group(i32 immarg) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.div.full(float, float) #4

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.idx.i32(i32, i32, i32, i32) #5

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.maxnum.f32(float, float) #1

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.bfly.i32(i32, i32, i32, i32) #5

declare i32 @__nvvm_reflect(ptr) local_unnamed_addr #6

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.ftz.f(float) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.ftz.f(float, float, float) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.nvvm.fma.rn.f(float, float, float) #1

attributes #0 = { "nvvm.reqntid"="256" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { nounwind }
attributes #3 = { convergent nocallback nounwind }
attributes #4 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #5 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #6 = { "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3}
!llvm.ident = !{!4}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "gqa.py", directory: "/home/ubuntu/PTX_dataset/triton_ptx")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!4 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!5 = distinct !DISubprogram(name: "_attn_fwd", linkageName: "_attn_fwd", scope: !1, file: !1, line: 114, type: !6, scopeLine: 114, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!6 = !DISubroutineType(cc: DW_CC_normal, types: !7)
!7 = !{}
!8 = !DILocation(line: 127, column: 28, scope: !5)
!9 = !DILocation(line: 128, column: 27, scope: !5)
!10 = !DILocation(line: 129, column: 22, scope: !5)
!11 = !DILocation(line: 130, column: 21, scope: !5)
!12 = !DILocation(line: 131, column: 26, scope: !5)
!13 = !DILocation(line: 131, column: 38, scope: !5)
!14 = !DILocation(line: 131, column: 59, scope: !5)
!15 = !DILocation(line: 131, column: 71, scope: !5)
!16 = !DILocation(line: 131, column: 50, scope: !5)
!17 = !DILocation(line: 135, column: 17, scope: !5)
!18 = !DILocation(line: 138, column: 27, scope: !5)
!19 = !DILocation(line: 140, column: 8, scope: !5)
!20 = !DILocation(line: 143, column: 17, scope: !5)
!21 = !DILocation(line: 148, column: 8, scope: !5)
!22 = !DILocation(line: 151, column: 17, scope: !5)
!23 = !DILocation(line: 156, column: 8, scope: !5)
!24 = !DILocation(line: 167, column: 46, scope: !5)
!25 = !DILocation(line: 175, column: 16, scope: !5)
!26 = !DILocation(line: 177, column: 16, scope: !5)
!27 = !DILocation(line: 47, column: 20, scope: !28, inlinedAt: !29)
!28 = distinct !DILexicalBlockFile(scope: !5, file: !1, discriminator: 0)
!29 = !DILocation(line: 185, column: 82, scope: !5)
!30 = !DILocation(line: 65, column: 20, scope: !28, inlinedAt: !29)
!31 = !DILocation(line: 48, column: 23, scope: !28, inlinedAt: !29)
!32 = !DILocation(line: 44, column: 33, scope: !28, inlinedAt: !29)
!33 = !DILocation(line: 167, column: 27, scope: !34, inlinedAt: !29)
!34 = distinct !DILexicalBlockFile(scope: !5, file: !35, discriminator: 0)
!35 = !DIFile(filename: "standard.py", directory: "/home/joy/miniconda3/envs/ptx/lib/python3.10/site-packages/triton/language")
!36 = !DILocation(line: 188, column: 40, scope: !34, inlinedAt: !29)
!37 = !DILocation(line: 55, column: 51, scope: !28, inlinedAt: !29)
!38 = !DILocation(line: 55, column: 35, scope: !28, inlinedAt: !29)
!39 = !DILocation(line: 56, column: 22, scope: !28, inlinedAt: !29)
!40 = !DILocation(line: 56, column: 33, scope: !28, inlinedAt: !29)
!41 = !DILocation(line: 57, column: 25, scope: !28, inlinedAt: !29)
!42 = !DILocation(line: 260, column: 15, scope: !34, inlinedAt: !29)
!43 = !DILocation(line: 290, column: 36, scope: !34, inlinedAt: !29)
!44 = !DILocation(line: 60, column: 35, scope: !28, inlinedAt: !29)
!45 = !DILocation(line: 60, column: 29, scope: !28, inlinedAt: !29)
!46 = !DILocation(line: 61, column: 20, scope: !28, inlinedAt: !29)
!47 = !DILocation(line: 61, column: 28, scope: !28, inlinedAt: !29)
!48 = !DILocation(line: 63, column: 20, scope: !28, inlinedAt: !29)
!49 = !DILocation(line: 69, column: 21, scope: !28, inlinedAt: !29)
!50 = !DILocation(line: 70, column: 27, scope: !28, inlinedAt: !29)
!51 = !DILocation(line: 73, column: 46, scope: !28, inlinedAt: !29)
!52 = !DILocation(line: 198, column: 24, scope: !5)
!53 = !DILocation(line: 159, column: 19, scope: !5)
!54 = !DILocation(line: 164, column: 8, scope: !5)
!55 = !DILocation(line: 167, column: 33, scope: !5)
!56 = !DILocation(line: 198, column: 11, scope: !5)
!57 = !DILocation(line: 199, column: 16, scope: !5)
!58 = !DILocation(line: 200, column: 26, scope: !5)
!59 = !DILocation(line: 200, column: 17, scope: !5)
!60 = !DILocation(line: 200, column: 34, scope: !5)
!61 = !DILocation(line: 201, column: 21, scope: !5)
!62 = !DILocation(line: 202, column: 33, scope: !5)
!63 = !DILocation(line: 202, column: 26, scope: !5)
!64 = !DILocation(line: 202, column: 4, scope: !5)
