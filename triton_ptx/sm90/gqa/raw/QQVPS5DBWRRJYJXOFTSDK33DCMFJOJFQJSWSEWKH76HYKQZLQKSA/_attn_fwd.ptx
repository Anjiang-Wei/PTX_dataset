//
// Generated by LLVM NVPTX Back-End
//

.version 8.7
.target sm_90a
.address_size 64

	// .globl	_attn_fwd               // -- Begin function _attn_fwd
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
                                        // @_attn_fwd
.visible .entry _attn_fwd(
	.param .u64 .ptr .global .align 1 _attn_fwd_param_0,
	.param .u64 .ptr .global .align 1 _attn_fwd_param_1,
	.param .u64 .ptr .global .align 1 _attn_fwd_param_2,
	.param .f32 _attn_fwd_param_3,
	.param .u64 .ptr .global .align 1 _attn_fwd_param_4,
	.param .u64 .ptr .global .align 1 _attn_fwd_param_5,
	.param .u32 _attn_fwd_param_6,
	.param .u32 _attn_fwd_param_7,
	.param .u32 _attn_fwd_param_8,
	.param .u32 _attn_fwd_param_9,
	.param .u32 _attn_fwd_param_10,
	.param .u32 _attn_fwd_param_11,
	.param .u32 _attn_fwd_param_12,
	.param .u32 _attn_fwd_param_13,
	.param .u32 _attn_fwd_param_14,
	.param .u32 _attn_fwd_param_15,
	.param .u32 _attn_fwd_param_16,
	.param .u32 _attn_fwd_param_17,
	.param .u32 _attn_fwd_param_18,
	.param .u64 .ptr .global .align 1 _attn_fwd_param_19
)
.reqntid 128
{
	.reg .pred 	%p<27>;
	.reg .b32 	%r<1837>;
	.reg .b64 	%rd<237>;
	.loc	1 114 0                         // gqa.py:114:0
$L__func_begin0:
	.loc	1 114 0                         // gqa.py:114:0

// %bb.0:
	ld.param.b32 	%r251, [_attn_fwd_param_17];
	ld.param.b64 	%rd35, [_attn_fwd_param_5];
	ld.param.b64 	%rd34, [_attn_fwd_param_4];
	ld.param.b64 	%rd56, [_attn_fwd_param_0];
	ld.param.b64 	%rd57, [_attn_fwd_param_1];
$L__tmp0:
	.loc	1 127 28                        // gqa.py:127:28
	mov.u32 	%r320, %ctaid.x;
	.loc	1 128 27                        // gqa.py:128:27
	mov.u32 	%r1, %ctaid.y;
	ld.param.b64 	%rd58, [_attn_fwd_param_2];
	ld.param.b32 	%r321, [_attn_fwd_param_3];
	ld.param.b32 	%r322, [_attn_fwd_param_18];
	.loc	1 129 22                        // gqa.py:129:22
	div.s32 	%r324, %r1, %r322;
	.loc	1 130 21                        // gqa.py:130:21
	mul.lo.s32 	%r325, %r324, %r322;
	sub.s32 	%r326, %r1, %r325;
	ld.param.b32 	%r327, [_attn_fwd_param_6];
	ld.param.s32 	%rd59, [_attn_fwd_param_7];
	ld.param.s32 	%rd60, [_attn_fwd_param_8];
	.loc	1 131 38                        // gqa.py:131:38
	mul.wide.s32 	%rd61, %r324, %r327;
	.loc	1 131 59                        // gqa.py:131:59
	cvt.u64.u32 	%rd62, %r326;
	ld.param.b32 	%r328, [_attn_fwd_param_11];
	.loc	1 131 50                        // gqa.py:131:50
	mad.lo.s64 	%rd1, %rd62, %rd59, %rd61;
	.loc	1 135 17                        // gqa.py:135:17
	shl.b64 	%rd19, %rd1, 1;
	add.s64 	%rd63, %rd56, %rd19;
	ld.param.b32 	%r329, [_attn_fwd_param_14];
	.loc	1 138 27                        // gqa.py:138:27
	shl.b32 	%r2, %r320, 7;
	.loc	1 140 8                         // gqa.py:140:8
	cvt.s64.s32 	%rd64, %r2;
	.loc	1 143 17                        // gqa.py:143:17
	add.s64 	%rd65, %rd58, %rd19;
	.loc	1 148 8                         // gqa.py:148:8
	cvt.s64.s32 	%rd66, %r329;
	.loc	1 151 17                        // gqa.py:151:17
	add.s64 	%rd67, %rd57, %rd19;
	.loc	1 156 8                         // gqa.py:156:8
	cvt.s64.s32 	%rd68, %r328;
	.loc	1 167 46                        // gqa.py:167:46
	mov.u32 	%r3, %tid.x;
	shr.u32 	%r4, %r3, 5;
	bfe.s32 	%r330, %r3, 5, 1;
	shr.u32 	%r331, %r3, 3;
	bfe.u32 	%r332, %r3, 3, 4;
	or.b32 	%r333, %r332, 16;
	or.b32 	%r334, %r332, 32;
	or.b32 	%r335, %r332, 48;
	or.b32 	%r336, %r332, 64;
	or.b32 	%r337, %r332, 80;
	or.b32 	%r338, %r332, 96;
	or.b32 	%r339, %r331, 112;
	.loc	1 175 16                        // gqa.py:175:16
	mul.f32 	%r9, %r321, 0f3FB8AA3B;
	.loc	1 177 16                        // gqa.py:177:16
	cvt.u64.u32 	%rd69, %r332;
	cvt.u64.u32 	%rd70, %r333;
	cvt.u64.u32 	%rd71, %r334;
	cvt.u64.u32 	%rd72, %r335;
	cvt.u64.u32 	%rd73, %r336;
	cvt.u64.u32 	%rd74, %r337;
	cvt.u64.u32 	%rd75, %r338;
	cvt.u64.u32 	%rd76, %r339;
	or.b64 	%rd2, %rd69, %rd64;
	or.b64 	%rd3, %rd70, %rd64;
	or.b64 	%rd4, %rd71, %rd64;
	or.b64 	%rd5, %rd72, %rd64;
	or.b64 	%rd6, %rd73, %rd64;
	or.b64 	%rd7, %rd74, %rd64;
	or.b64 	%rd8, %rd75, %rd64;
	or.b64 	%rd9, %rd76, %rd64;
	mul.lo.s64 	%rd77, %rd2, %rd60;
	mul.lo.s64 	%rd78, %rd3, %rd60;
	mul.lo.s64 	%rd79, %rd4, %rd60;
	mul.lo.s64 	%rd80, %rd5, %rd60;
	mul.lo.s64 	%rd81, %rd6, %rd60;
	mul.lo.s64 	%rd82, %rd7, %rd60;
	mul.lo.s64 	%rd83, %rd8, %rd60;
	mul.lo.s64 	%rd84, %rd9, %rd60;
	shl.b32 	%r6, %r3, 3;
	and.b32 	%r340, %r6, 56;
	cvt.u64.u32 	%rd10, %r340;
	shl.b64 	%rd85, %rd77, 1;
	add.s64 	%rd86, %rd63, %rd85;
	mul.wide.u32 	%rd87, %r340, 2;
	add.s64 	%rd36, %rd86, %rd87;
	shl.b64 	%rd88, %rd78, 1;
	add.s64 	%rd89, %rd63, %rd88;
	add.s64 	%rd37, %rd89, %rd87;
	shl.b64 	%rd90, %rd79, 1;
	add.s64 	%rd91, %rd63, %rd90;
	add.s64 	%rd38, %rd91, %rd87;
	shl.b64 	%rd92, %rd80, 1;
	add.s64 	%rd93, %rd63, %rd92;
	add.s64 	%rd39, %rd93, %rd87;
	shl.b64 	%rd94, %rd81, 1;
	add.s64 	%rd95, %rd63, %rd94;
	add.s64 	%rd40, %rd95, %rd87;
	shl.b64 	%rd96, %rd82, 1;
	add.s64 	%rd97, %rd63, %rd96;
	add.s64 	%rd41, %rd97, %rd87;
	shl.b64 	%rd98, %rd83, 1;
	add.s64 	%rd99, %rd63, %rd98;
	add.s64 	%rd42, %rd99, %rd87;
	shl.b64 	%rd100, %rd84, 1;
	add.s64 	%rd101, %rd63, %rd100;
	add.s64 	%rd43, %rd101, %rd87;
	// begin inline asm
	mov.u32 %r252, 0x0;
	mov.u32 %r253, 0x0;
	mov.u32 %r254, 0x0;
	mov.u32 %r255, 0x0;
	ld.global.v4.b32 { %r252, %r253, %r254, %r255 }, [ %rd36 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r256, 0x0;
	mov.u32 %r257, 0x0;
	mov.u32 %r258, 0x0;
	mov.u32 %r259, 0x0;
	ld.global.v4.b32 { %r256, %r257, %r258, %r259 }, [ %rd37 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r260, 0x0;
	mov.u32 %r261, 0x0;
	mov.u32 %r262, 0x0;
	mov.u32 %r263, 0x0;
	ld.global.v4.b32 { %r260, %r261, %r262, %r263 }, [ %rd38 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r264, 0x0;
	mov.u32 %r265, 0x0;
	mov.u32 %r266, 0x0;
	mov.u32 %r267, 0x0;
	ld.global.v4.b32 { %r264, %r265, %r266, %r267 }, [ %rd39 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r268, 0x0;
	mov.u32 %r269, 0x0;
	mov.u32 %r270, 0x0;
	mov.u32 %r271, 0x0;
	ld.global.v4.b32 { %r268, %r269, %r270, %r271 }, [ %rd40 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r272, 0x0;
	mov.u32 %r273, 0x0;
	mov.u32 %r274, 0x0;
	mov.u32 %r275, 0x0;
	ld.global.v4.b32 { %r272, %r273, %r274, %r275 }, [ %rd41 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r276, 0x0;
	mov.u32 %r277, 0x0;
	mov.u32 %r278, 0x0;
	mov.u32 %r279, 0x0;
	ld.global.v4.b32 { %r276, %r277, %r278, %r279 }, [ %rd42 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r280, 0x0;
	mov.u32 %r281, 0x0;
	mov.u32 %r282, 0x0;
	mov.u32 %r283, 0x0;
	ld.global.v4.b32 { %r280, %r281, %r282, %r283 }, [ %rd43 + 0 ];
	// end inline asm
	and.b32 	%r341, %r330, 288;
	and.b32 	%r342, %r3, 24;
	mul.lo.s32 	%r343, %r342, 9;
	xor.b32 	%r344, %r343, %r340;
	xor.b32 	%r345, %r344, %r341;
	and.b32 	%r346, %r6, 512;
	or.b32 	%r7, %r345, %r346;
	shl.b32 	%r347, %r7, 1;
	mov.b32 	%r348, global_smem;
	add.s32 	%r349, %r348, %r347;
	st.shared.v4.b32 	[%r349], {%r252, %r253, %r254, %r255};
	or.b32 	%r350, %r340, 1024;
	xor.b32 	%r351, %r343, %r350;
	xor.b32 	%r352, %r351, %r341;
	or.b32 	%r8, %r352, %r346;
	shl.b32 	%r353, %r8, 1;
	add.s32 	%r354, %r348, %r353;
	st.shared.v4.b32 	[%r354], {%r256, %r257, %r258, %r259};
	or.b32 	%r355, %r340, 2048;
	xor.b32 	%r356, %r343, %r355;
	xor.b32 	%r357, %r356, %r341;
	shl.b32 	%r358, %r357, 1;
	add.s32 	%r359, %r348, %r358;
	shl.b32 	%r360, %r346, 1;
	add.s32 	%r361, %r359, %r360;
	st.shared.v4.b32 	[%r361], {%r260, %r261, %r262, %r263};
	or.b32 	%r362, %r340, 3072;
	xor.b32 	%r363, %r343, %r362;
	xor.b32 	%r364, %r363, %r341;
	shl.b32 	%r365, %r364, 1;
	add.s32 	%r366, %r348, %r365;
	add.s32 	%r367, %r366, %r360;
	st.shared.v4.b32 	[%r367], {%r264, %r265, %r266, %r267};
	or.b32 	%r368, %r340, 4096;
	xor.b32 	%r369, %r343, %r368;
	xor.b32 	%r370, %r369, %r341;
	shl.b32 	%r371, %r370, 1;
	add.s32 	%r372, %r348, %r371;
	add.s32 	%r373, %r372, %r360;
	st.shared.v4.b32 	[%r373], {%r268, %r269, %r270, %r271};
	or.b32 	%r374, %r340, 5120;
	xor.b32 	%r375, %r343, %r374;
	xor.b32 	%r376, %r375, %r341;
	shl.b32 	%r377, %r376, 1;
	add.s32 	%r378, %r348, %r377;
	add.s32 	%r379, %r378, %r360;
	st.shared.v4.b32 	[%r379], {%r272, %r273, %r274, %r275};
	or.b32 	%r380, %r340, 6144;
	xor.b32 	%r381, %r343, %r380;
	xor.b32 	%r382, %r381, %r341;
	shl.b32 	%r383, %r382, 1;
	add.s32 	%r384, %r348, %r383;
	add.s32 	%r385, %r384, %r360;
	st.shared.v4.b32 	[%r385], {%r276, %r277, %r278, %r279};
	or.b32 	%r386, %r340, 7168;
	xor.b32 	%r387, %r343, %r386;
	xor.b32 	%r388, %r387, %r341;
	shl.b32 	%r389, %r388, 1;
	add.s32 	%r390, %r348, %r389;
	add.s32 	%r391, %r390, %r360;
	st.shared.v4.b32 	[%r391], {%r280, %r281, %r282, %r283};
$L__tmp1:
	.loc	1 47 20                         // gqa.py:47:20 @[ gqa.py:185:82 ]
	mul.lo.s64 	%rd102, %rd68, %rd69;
	mul.lo.s64 	%rd103, %rd68, %rd70;
	shl.b64 	%rd104, %rd102, 1;
	add.s64 	%rd105, %rd67, %rd104;
	add.s64 	%rd44, %rd105, %rd87;
	shl.b64 	%rd106, %rd103, 1;
	add.s64 	%rd107, %rd67, %rd106;
	add.s64 	%rd45, %rd107, %rd87;
	add.s32 	%r392, %r348, 16384;
	add.s32 	%r284, %r392, %r347;
	add.s32 	%r286, %r392, %r353;
	mov.b32 	%r285, 16;
	// begin inline asm
	cp.async.cg.shared.global [ %r284 + 0 ], [ %rd44 + 0 ], 0x10, %r285;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r286 + 0 ], [ %rd45 + 0 ], 0x10, %r285;
	// end inline asm
	cp.async.commit_group;
	.loc	1 65 20                         // gqa.py:65:20 @[ gqa.py:185:82 ]
	mul.lo.s64 	%rd108, %rd66, %rd69;
	mul.lo.s64 	%rd109, %rd66, %rd70;
	shl.b64 	%rd110, %rd108, 1;
	add.s64 	%rd111, %rd65, %rd110;
	add.s64 	%rd46, %rd111, %rd87;
	shl.b64 	%rd112, %rd109, 1;
	add.s64 	%rd113, %rd65, %rd112;
	add.s64 	%rd47, %rd113, %rd87;
	add.s32 	%r393, %r348, 32768;
	add.s32 	%r288, %r393, %r347;
	add.s32 	%r290, %r393, %r353;
	// begin inline asm
	cp.async.cg.shared.global [ %r288 + 0 ], [ %rd46 + 0 ], 0x10, %r285;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r290 + 0 ], [ %rd47 + 0 ], 0x10, %r285;
	// end inline asm
	cp.async.commit_group;
	.loc	1 47 20                         // gqa.py:47:20 @[ gqa.py:185:82 ]
	mul.wide.s32 	%rd114, %r328, 32;
	add.s64 	%rd115, %rd102, %rd114;
	add.s64 	%rd116, %rd103, %rd114;
	shl.b64 	%rd117, %rd115, 1;
	add.s64 	%rd118, %rd67, %rd117;
	add.s64 	%rd48, %rd118, %rd87;
	shl.b64 	%rd119, %rd116, 1;
	add.s64 	%rd120, %rd67, %rd119;
	add.s64 	%rd49, %rd120, %rd87;
	bar.sync 	0;
	add.s32 	%r394, %r348, 20480;
	add.s32 	%r292, %r394, %r347;
	add.s32 	%r294, %r394, %r353;
	// begin inline asm
	cp.async.cg.shared.global [ %r292 + 0 ], [ %rd48 + 0 ], 0x10, %r285;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r294 + 0 ], [ %rd49 + 0 ], 0x10, %r285;
	// end inline asm
	cp.async.commit_group;
	.loc	1 65 20                         // gqa.py:65:20 @[ gqa.py:185:82 ]
	mul.wide.s32 	%rd121, %r329, 32;
	add.s64 	%rd122, %rd108, %rd121;
	add.s64 	%rd123, %rd109, %rd121;
	shl.b64 	%rd124, %rd122, 1;
	add.s64 	%rd125, %rd65, %rd124;
	add.s64 	%rd50, %rd125, %rd87;
	shl.b64 	%rd126, %rd123, 1;
	add.s64 	%rd127, %rd65, %rd126;
	add.s64 	%rd51, %rd127, %rd87;
	add.s32 	%r395, %r348, 36864;
	add.s32 	%r296, %r395, %r347;
	add.s32 	%r298, %r395, %r353;
	// begin inline asm
	cp.async.cg.shared.global [ %r296 + 0 ], [ %rd50 + 0 ], 0x10, %r285;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r298 + 0 ], [ %rd51 + 0 ], 0x10, %r285;
	// end inline asm
	cp.async.commit_group;
	.loc	1 47 20                         // gqa.py:47:20 @[ gqa.py:185:82 ]
	add.s64 	%rd128, %rd115, %rd114;
	add.s64 	%rd129, %rd116, %rd114;
	shl.b64 	%rd130, %rd128, 1;
	add.s64 	%rd131, %rd67, %rd130;
	add.s64 	%rd52, %rd131, %rd87;
	shl.b64 	%rd132, %rd129, 1;
	add.s64 	%rd133, %rd67, %rd132;
	add.s64 	%rd53, %rd133, %rd87;
	bar.sync 	0;
	add.s32 	%r396, %r348, 24576;
	add.s32 	%r300, %r396, %r347;
	add.s32 	%r302, %r396, %r353;
	// begin inline asm
	cp.async.cg.shared.global [ %r300 + 0 ], [ %rd52 + 0 ], 0x10, %r285;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r302 + 0 ], [ %rd53 + 0 ], 0x10, %r285;
	// end inline asm
	cp.async.commit_group;
	.loc	1 65 20                         // gqa.py:65:20 @[ gqa.py:185:82 ]
	add.s64 	%rd134, %rd122, %rd121;
	add.s64 	%rd135, %rd123, %rd121;
	shl.b64 	%rd136, %rd134, 1;
	add.s64 	%rd137, %rd65, %rd136;
	add.s64 	%rd54, %rd137, %rd87;
	shl.b64 	%rd138, %rd135, 1;
	add.s64 	%rd139, %rd65, %rd138;
	add.s64 	%rd55, %rd139, %rd87;
	add.s32 	%r397, %r348, 40960;
	add.s32 	%r304, %r397, %r347;
	add.s32 	%r306, %r397, %r353;
	// begin inline asm
	cp.async.cg.shared.global [ %r304 + 0 ], [ %rd54 + 0 ], 0x10, %r285;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r306 + 0 ], [ %rd55 + 0 ], 0x10, %r285;
	// end inline asm
	cp.async.commit_group;
	.loc	1 48 23                         // gqa.py:48:23 @[ gqa.py:185:82 ]
	// begin inline asm
	fence.proxy.async.shared::cta;
	// end inline asm
	bfe.u32 	%r398, %r348, 4, 14;
	cvt.u64.u32 	%rd140, %r398;
	or.b64 	%rd163, %rd140, 4611686293372403712;
	add.s32 	%r399, %r348, 32;
	bfe.u32 	%r400, %r399, 4, 14;
	cvt.u64.u32 	%rd141, %r400;
	or.b64 	%rd165, %rd141, 4611686293372403712;
	add.s32 	%r401, %r348, 64;
	bfe.u32 	%r402, %r401, 4, 14;
	cvt.u64.u32 	%rd142, %r402;
	or.b64 	%rd167, %rd142, 4611686293372403712;
	add.s32 	%r403, %r348, 96;
	bfe.u32 	%r404, %r403, 4, 14;
	cvt.u64.u32 	%rd143, %r404;
	or.b64 	%rd169, %rd143, 4611686293372403712;
	add.s32 	%r405, %r348, 8192;
	bfe.u32 	%r406, %r405, 4, 14;
	cvt.u64.u32 	%rd144, %r406;
	or.b64 	%rd171, %rd144, 4611686293372403712;
	add.s32 	%r407, %r348, 8224;
	bfe.u32 	%r408, %r407, 4, 14;
	cvt.u64.u32 	%rd145, %r408;
	or.b64 	%rd173, %rd145, 4611686293372403712;
	add.s32 	%r409, %r348, 8256;
	bfe.u32 	%r410, %r409, 4, 14;
	cvt.u64.u32 	%rd146, %r410;
	or.b64 	%rd175, %rd146, 4611686293372403712;
	add.s32 	%r411, %r348, 8288;
	bfe.u32 	%r412, %r411, 4, 14;
	cvt.u64.u32 	%rd147, %r412;
	or.b64 	%rd177, %rd147, 4611686293372403712;
	.loc	1 44 33                         // gqa.py:44:33 @[ gqa.py:185:82 ]
	or.b64 	%rd148, %rd69, 112;
	mul.lo.s64 	%rd149, %rd148, %rd66;
	shl.b64 	%rd150, %rd149, 1;
	and.b32 	%r413, %r3, 7;
	mul.wide.u32 	%rd151, %r413, 16;
	add.s64 	%rd152, %rd150, %rd151;
	add.s64 	%rd236, %rd58, %rd152;
	mul.wide.s32 	%rd21, %r329, 64;
	mul.lo.s64 	%rd153, %rd148, %rd68;
	shl.b64 	%rd154, %rd153, 1;
	add.s64 	%rd155, %rd154, %rd151;
	add.s64 	%rd235, %rd57, %rd155;
	mul.wide.s32 	%rd23, %r328, 64;
	or.b64 	%rd156, %rd69, 96;
	mul.lo.s64 	%rd157, %rd156, %rd66;
	shl.b64 	%rd158, %rd157, 1;
	add.s64 	%rd159, %rd158, %rd151;
	add.s64 	%rd234, %rd58, %rd159;
	mul.lo.s64 	%rd160, %rd156, %rd68;
	shl.b64 	%rd161, %rd160, 1;
	add.s64 	%rd162, %rd161, %rd151;
	add.s64 	%rd233, %rd57, %rd162;
	mov.b32 	%r1829, 0f3F800000;
	mov.b32 	%r1825, 0fFF800000;
	mov.b32 	%r1761, 0f00000000;
	mov.b32 	%r1760, 2;
	mov.b32 	%r1759, -1;
	mov.b32 	%r1758, -32;
	mov.b32 	%r1762, %r1761;
	mov.b32 	%r1763, %r1761;
	mov.b32 	%r1764, %r1761;
	mov.b32 	%r1765, %r1761;
	mov.b32 	%r1766, %r1761;
	mov.b32 	%r1767, %r1761;
	mov.b32 	%r1768, %r1761;
	mov.b32 	%r1769, %r1761;
	mov.b32 	%r1770, %r1761;
	mov.b32 	%r1771, %r1761;
	mov.b32 	%r1772, %r1761;
	mov.b32 	%r1773, %r1761;
	mov.b32 	%r1774, %r1761;
	mov.b32 	%r1775, %r1761;
	mov.b32 	%r1776, %r1761;
	mov.b32 	%r1777, %r1761;
	mov.b32 	%r1778, %r1761;
	mov.b32 	%r1779, %r1761;
	mov.b32 	%r1780, %r1761;
	mov.b32 	%r1781, %r1761;
	mov.b32 	%r1782, %r1761;
	mov.b32 	%r1783, %r1761;
	mov.b32 	%r1784, %r1761;
	mov.b32 	%r1785, %r1761;
	mov.b32 	%r1786, %r1761;
	mov.b32 	%r1787, %r1761;
	mov.b32 	%r1788, %r1761;
	mov.b32 	%r1789, %r1761;
	mov.b32 	%r1790, %r1761;
	mov.b32 	%r1791, %r1761;
	mov.b32 	%r1792, %r1761;
	mov.b32 	%r1793, %r1761;
	mov.b32 	%r1794, %r1761;
	mov.b32 	%r1795, %r1761;
	mov.b32 	%r1796, %r1761;
	mov.b32 	%r1797, %r1761;
	mov.b32 	%r1798, %r1761;
	mov.b32 	%r1799, %r1761;
	mov.b32 	%r1800, %r1761;
	mov.b32 	%r1801, %r1761;
	mov.b32 	%r1802, %r1761;
	mov.b32 	%r1803, %r1761;
	mov.b32 	%r1804, %r1761;
	mov.b32 	%r1805, %r1761;
	mov.b32 	%r1806, %r1761;
	mov.b32 	%r1807, %r1761;
	mov.b32 	%r1808, %r1761;
	mov.b32 	%r1809, %r1761;
	mov.b32 	%r1810, %r1761;
	mov.b32 	%r1811, %r1761;
	mov.b32 	%r1812, %r1761;
	mov.b32 	%r1813, %r1761;
	mov.b32 	%r1814, %r1761;
	mov.b32 	%r1815, %r1761;
	mov.b32 	%r1816, %r1761;
	mov.b32 	%r1817, %r1761;
	mov.b32 	%r1818, %r1761;
	mov.b32 	%r1819, %r1761;
	mov.b32 	%r1820, %r1761;
	mov.b32 	%r1821, %r1761;
	mov.b32 	%r1822, %r1761;
	mov.b32 	%r1823, %r1761;
	mov.b32 	%r1824, %r1761;
	mov.b32 	%r1826, %r1825;
	mov.b32 	%r1827, %r1825;
	mov.b32 	%r1828, %r1825;
	mov.b32 	%r1830, %r1829;
	mov.b32 	%r1831, %r1829;
	mov.b32 	%r1832, %r1829;
$L__BB0_1:                              // %__nv_exp2f.exit
                                        // =>This Inner Loop Header: Depth=1
	add.s32 	%r1758, %r1758, 32;
	setp.lt.u32 	%p11, %r1758, 4000;
	add.s32 	%r1122, %r1759, 1;
	setp.gt.s32 	%p12, %r1122, 3;
	selp.b32 	%r1759, 0, %r1122, %p12;
	.loc	1 47 20                         // gqa.py:47:20 @[ gqa.py:185:82 ]
	cp.async.wait_group 	4;
	bar.sync 	0;
	shl.b32 	%r1123, %r1759, 12;
	add.s32 	%r673, %r392, %r1123;
	.loc	1 48 23                         // gqa.py:48:23 @[ gqa.py:185:82 ]
	shfl.sync.idx.b32 	%r1125, %r4, 0, 31, -1;
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	bfe.u32 	%r1126, %r673, 4, 14;
	cvt.u64.u32 	%rd187, %r1126;
	or.b64 	%rd164, %rd187, 4611686293322072064;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n32k16.f32.f16.f16 {%r462,%r463,%r464,%r465,%r466,%r467,%r468,%r469,%r470,%r471,%r472,%r473,%r474,%r475,%r476,%r477}, %rd163, %rd164, 0, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r1127, %r673, 32;
	bfe.u32 	%r1128, %r1127, 4, 14;
	cvt.u64.u32 	%rd188, %r1128;
	or.b64 	%rd166, %rd188, 4611686293322072064;
	mov.pred 	%p1, -1;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n32k16.f32.f16.f16 {%r462,%r463,%r464,%r465,%r466,%r467,%r468,%r469,%r470,%r471,%r472,%r473,%r474,%r475,%r476,%r477}, %rd165, %rd166, %p1, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r1129, %r673, 64;
	bfe.u32 	%r1130, %r1129, 4, 14;
	cvt.u64.u32 	%rd189, %r1130;
	or.b64 	%rd168, %rd189, 4611686293322072064;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n32k16.f32.f16.f16 {%r462,%r463,%r464,%r465,%r466,%r467,%r468,%r469,%r470,%r471,%r472,%r473,%r474,%r475,%r476,%r477}, %rd167, %rd168, %p1, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r1131, %r673, 96;
	bfe.u32 	%r1132, %r1131, 4, 14;
	cvt.u64.u32 	%rd190, %r1132;
	or.b64 	%rd170, %rd190, 4611686293322072064;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n32k16.f32.f16.f16 {%r462,%r463,%r464,%r465,%r466,%r467,%r468,%r469,%r470,%r471,%r472,%r473,%r474,%r475,%r476,%r477}, %rd169, %rd170, %p1, 1, 1, 0, 0;
	// end inline asm
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n32k16.f32.f16.f16 {%r574,%r575,%r576,%r577,%r578,%r579,%r580,%r581,%r582,%r583,%r584,%r585,%r586,%r587,%r588,%r589}, %rd171, %rd164, 0, 1, 1, 0, 0;
	// end inline asm
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n32k16.f32.f16.f16 {%r574,%r575,%r576,%r577,%r578,%r579,%r580,%r581,%r582,%r583,%r584,%r585,%r586,%r587,%r588,%r589}, %rd173, %rd166, %p1, 1, 1, 0, 0;
	// end inline asm
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n32k16.f32.f16.f16 {%r574,%r575,%r576,%r577,%r578,%r579,%r580,%r581,%r582,%r583,%r584,%r585,%r586,%r587,%r588,%r589}, %rd175, %rd168, %p1, 1, 1, 0, 0;
	// end inline asm
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n32k16.f32.f16.f16 {%r574,%r575,%r576,%r577,%r578,%r579,%r580,%r581,%r582,%r583,%r584,%r585,%r586,%r587,%r588,%r589}, %rd177, %rd170, %p1, 1, 1, 0, 0;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	mov.b32 	%r671, 0;
	mov.b32 	%r672, %r671;
	mov.b32 	%r674, %r671;
	mov.b32 	%r670, %r348;
	mov.b32 	%r675, %r671;
	// begin inline asm
	// wait for regs: %r462,%r463,%r464,%r465,%r466,%r467,%r468,%r469,%r470,%r471,%r472,%r473,%r474,%r475,%r476,%r477,%r574,%r575,%r576,%r577,%r578,%r579,%r580,%r581,%r582,%r583,%r584,%r585,%r586,%r587,%r588,%r589,%r670,%r671,%r672,%r673,%r674,%r675,%r1761,%r1762,%r1763,%r1764,%r1765,%r1766,%r1767,%r1768,%r1769,%r1770,%r1771,%r1772,%r1773,%r1774,%r1775,%r1776,%r1777,%r1778,%r1779,%r1780,%r1781,%r1782,%r1783,%r1784,%r1785,%r1786,%r1787,%r1788,%r1789,%r1790,%r1791,%r1792,%r1793,%r1794,%r1795,%r1796,%r1797,%r1798,%r1799,%r1800,%r1801,%r1802,%r1803,%r1804,%r1805,%r1806,%r1807,%r1808,%r1809,%r1810,%r1811,%r1812,%r1813,%r1814,%r1815,%r1816,%r1817,%r1818,%r1819,%r1820,%r1821,%r1822,%r1823,%r1824
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	.loc	2 167 27                        // standard.py:167:27 @[ gqa.py:185:82 ]
	max.f32 	%r1133, %r462, %r463;
	max.f32 	%r1134, %r464, %r465;
	max.f32 	%r1135, %r1133, %r466;
	max.f32 	%r1136, %r1135, %r467;
	max.f32 	%r1137, %r1134, %r468;
	max.f32 	%r1138, %r1137, %r469;
	max.f32 	%r1139, %r1136, %r470;
	max.f32 	%r1140, %r1139, %r471;
	max.f32 	%r1141, %r1138, %r472;
	max.f32 	%r1142, %r1141, %r473;
	max.f32 	%r1143, %r1140, %r474;
	max.f32 	%r1144, %r1143, %r475;
	max.f32 	%r1145, %r1142, %r476;
	max.f32 	%r1146, %r1145, %r477;
	max.f32 	%r1147, %r574, %r575;
	max.f32 	%r1148, %r576, %r577;
	max.f32 	%r1149, %r1147, %r578;
	max.f32 	%r1150, %r1149, %r579;
	max.f32 	%r1151, %r1148, %r580;
	max.f32 	%r1152, %r1151, %r581;
	max.f32 	%r1153, %r1150, %r582;
	max.f32 	%r1154, %r1153, %r583;
	max.f32 	%r1155, %r1152, %r584;
	max.f32 	%r1156, %r1155, %r585;
	max.f32 	%r1157, %r1154, %r586;
	max.f32 	%r1158, %r1157, %r587;
	max.f32 	%r1159, %r1156, %r588;
	max.f32 	%r1160, %r1159, %r589;
	.loc	2 188 40                        // standard.py:188:40 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1161, %r1144, 2, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ gqa.py:185:82 ]
	max.f32 	%r1162, %r1144, %r1161;
	.loc	2 188 40                        // standard.py:188:40 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1163, %r1162, 1, 31, -1;
	shfl.sync.bfly.b32 	%r1164, %r1146, 2, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ gqa.py:185:82 ]
	max.f32 	%r1165, %r1146, %r1164;
	.loc	2 188 40                        // standard.py:188:40 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1166, %r1165, 1, 31, -1;
	shfl.sync.bfly.b32 	%r1167, %r1158, 2, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ gqa.py:185:82 ]
	max.f32 	%r1168, %r1158, %r1167;
	.loc	2 188 40                        // standard.py:188:40 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1169, %r1168, 1, 31, -1;
	shfl.sync.bfly.b32 	%r1170, %r1160, 2, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ gqa.py:185:82 ]
	max.f32 	%r1171, %r1160, %r1170;
	.loc	2 188 40                        // standard.py:188:40 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1172, %r1171, 1, 31, -1;
	.loc	2 167 27                        // standard.py:167:27 @[ gqa.py:185:82 ]
	max.f32 	%r1173, %r1171, %r1172;
	max.f32 	%r1174, %r1168, %r1169;
	max.f32 	%r1175, %r1165, %r1166;
	max.f32 	%r1176, %r1162, %r1163;
	.loc	1 55 51                         // gqa.py:55:51 @[ gqa.py:185:82 ]
	mul.f32 	%r1177, %r9, %r1176;
	mul.f32 	%r1178, %r9, %r1175;
	mul.f32 	%r1179, %r9, %r1174;
	mul.f32 	%r1180, %r9, %r1173;
	.loc	1 55 35                         // gqa.py:55:35 @[ gqa.py:185:82 ]
	max.f32 	%r93, %r1828, %r1180;
	max.f32 	%r92, %r1827, %r1179;
	max.f32 	%r91, %r1826, %r1178;
	max.f32 	%r90, %r1825, %r1177;
	.loc	1 56 33                         // gqa.py:56:33 @[ gqa.py:185:82 ]
	neg.f32 	%r1181, %r90;
	fma.rn.f32 	%r1182, %r9, %r462, %r1181;
	fma.rn.f32 	%r1183, %r9, %r463, %r1181;
	neg.f32 	%r1184, %r91;
	fma.rn.f32 	%r1185, %r9, %r464, %r1184;
	fma.rn.f32 	%r1186, %r9, %r465, %r1184;
	fma.rn.f32 	%r1187, %r9, %r466, %r1181;
	fma.rn.f32 	%r1188, %r9, %r467, %r1181;
	fma.rn.f32 	%r1189, %r9, %r468, %r1184;
	fma.rn.f32 	%r1190, %r9, %r469, %r1184;
	fma.rn.f32 	%r1191, %r9, %r470, %r1181;
	fma.rn.f32 	%r1192, %r9, %r471, %r1181;
	fma.rn.f32 	%r1193, %r9, %r472, %r1184;
	fma.rn.f32 	%r1194, %r9, %r473, %r1184;
	fma.rn.f32 	%r1195, %r9, %r474, %r1181;
	fma.rn.f32 	%r1196, %r9, %r475, %r1181;
	fma.rn.f32 	%r1197, %r9, %r476, %r1184;
	fma.rn.f32 	%r1198, %r9, %r477, %r1184;
	neg.f32 	%r1199, %r92;
	fma.rn.f32 	%r1200, %r9, %r574, %r1199;
	fma.rn.f32 	%r1201, %r9, %r575, %r1199;
	neg.f32 	%r1202, %r93;
	fma.rn.f32 	%r1203, %r9, %r576, %r1202;
	fma.rn.f32 	%r1204, %r9, %r577, %r1202;
	fma.rn.f32 	%r1205, %r9, %r578, %r1199;
	fma.rn.f32 	%r1206, %r9, %r579, %r1199;
	fma.rn.f32 	%r1207, %r9, %r580, %r1202;
	fma.rn.f32 	%r1208, %r9, %r581, %r1202;
	fma.rn.f32 	%r1209, %r9, %r582, %r1199;
	fma.rn.f32 	%r1210, %r9, %r583, %r1199;
	fma.rn.f32 	%r1211, %r9, %r584, %r1202;
	fma.rn.f32 	%r1212, %r9, %r585, %r1202;
	fma.rn.f32 	%r1213, %r9, %r586, %r1199;
	fma.rn.f32 	%r1214, %r9, %r587, %r1199;
	fma.rn.f32 	%r1215, %r9, %r588, %r1202;
	fma.rn.f32 	%r1216, %r9, %r589, %r1202;
	.loc	1 57 25                         // gqa.py:57:25 @[ gqa.py:185:82 ]
	ex2.approx.ftz.f32 	%r1217, %r1182;
	ex2.approx.ftz.f32 	%r1218, %r1183;
	ex2.approx.ftz.f32 	%r1219, %r1185;
	ex2.approx.ftz.f32 	%r1220, %r1186;
	ex2.approx.ftz.f32 	%r1221, %r1187;
	ex2.approx.ftz.f32 	%r1222, %r1188;
	ex2.approx.ftz.f32 	%r1223, %r1189;
	ex2.approx.ftz.f32 	%r1224, %r1190;
	ex2.approx.ftz.f32 	%r1225, %r1191;
	ex2.approx.ftz.f32 	%r1226, %r1192;
	ex2.approx.ftz.f32 	%r1227, %r1193;
	ex2.approx.ftz.f32 	%r1228, %r1194;
	ex2.approx.ftz.f32 	%r1229, %r1195;
	ex2.approx.ftz.f32 	%r1230, %r1196;
	ex2.approx.ftz.f32 	%r1231, %r1197;
	ex2.approx.ftz.f32 	%r1232, %r1198;
	ex2.approx.ftz.f32 	%r1233, %r1200;
	ex2.approx.ftz.f32 	%r1234, %r1201;
	ex2.approx.ftz.f32 	%r1235, %r1203;
	ex2.approx.ftz.f32 	%r1236, %r1204;
	ex2.approx.ftz.f32 	%r1237, %r1205;
	ex2.approx.ftz.f32 	%r1238, %r1206;
	ex2.approx.ftz.f32 	%r1239, %r1207;
	ex2.approx.ftz.f32 	%r1240, %r1208;
	ex2.approx.ftz.f32 	%r1241, %r1209;
	ex2.approx.ftz.f32 	%r1242, %r1210;
	ex2.approx.ftz.f32 	%r1243, %r1211;
	ex2.approx.ftz.f32 	%r1244, %r1212;
	ex2.approx.ftz.f32 	%r1245, %r1213;
	ex2.approx.ftz.f32 	%r1246, %r1214;
	ex2.approx.ftz.f32 	%r1247, %r1215;
	ex2.approx.ftz.f32 	%r1248, %r1216;
	.loc	2 260 15                        // standard.py:260:15 @[ gqa.py:185:82 ]
	add.f32 	%r1249, %r1217, %r1218;
	add.f32 	%r1250, %r1219, %r1220;
	add.f32 	%r1251, %r1249, %r1221;
	add.f32 	%r1252, %r1251, %r1222;
	add.f32 	%r1253, %r1250, %r1223;
	add.f32 	%r1254, %r1253, %r1224;
	add.f32 	%r1255, %r1252, %r1225;
	add.f32 	%r1256, %r1255, %r1226;
	add.f32 	%r1257, %r1254, %r1227;
	add.f32 	%r1258, %r1257, %r1228;
	add.f32 	%r1259, %r1256, %r1229;
	add.f32 	%r1260, %r1259, %r1230;
	add.f32 	%r1261, %r1258, %r1231;
	add.f32 	%r1262, %r1261, %r1232;
	add.f32 	%r1263, %r1233, %r1234;
	add.f32 	%r1264, %r1235, %r1236;
	add.f32 	%r1265, %r1263, %r1237;
	add.f32 	%r1266, %r1265, %r1238;
	add.f32 	%r1267, %r1264, %r1239;
	add.f32 	%r1268, %r1267, %r1240;
	add.f32 	%r1269, %r1266, %r1241;
	add.f32 	%r1270, %r1269, %r1242;
	add.f32 	%r1271, %r1268, %r1243;
	add.f32 	%r1272, %r1271, %r1244;
	add.f32 	%r1273, %r1270, %r1245;
	add.f32 	%r1274, %r1273, %r1246;
	add.f32 	%r1275, %r1272, %r1247;
	add.f32 	%r1276, %r1275, %r1248;
	.loc	2 290 36                        // standard.py:290:36 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1277, %r1260, 2, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ gqa.py:185:82 ]
	add.f32 	%r1278, %r1260, %r1277;
	.loc	2 290 36                        // standard.py:290:36 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1279, %r1278, 1, 31, -1;
	shfl.sync.bfly.b32 	%r1280, %r1262, 2, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ gqa.py:185:82 ]
	add.f32 	%r1281, %r1262, %r1280;
	.loc	2 290 36                        // standard.py:290:36 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1282, %r1281, 1, 31, -1;
	shfl.sync.bfly.b32 	%r1283, %r1274, 2, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ gqa.py:185:82 ]
	add.f32 	%r1284, %r1274, %r1283;
	.loc	2 290 36                        // standard.py:290:36 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1285, %r1284, 1, 31, -1;
	shfl.sync.bfly.b32 	%r1286, %r1276, 2, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ gqa.py:185:82 ]
	add.f32 	%r1287, %r1276, %r1286;
	.loc	2 290 36                        // standard.py:290:36 @[ gqa.py:185:82 ]
	shfl.sync.bfly.b32 	%r1288, %r1287, 1, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ gqa.py:185:82 ]
	add.f32 	%r1289, %r1287, %r1288;
	add.f32 	%r1290, %r1284, %r1285;
	add.f32 	%r1291, %r1281, %r1282;
	add.f32 	%r1292, %r1278, %r1279;
	.loc	1 60 35                         // gqa.py:60:35 @[ gqa.py:185:82 ]
	sub.f32 	%r1293, %r1828, %r93;
	sub.f32 	%r1294, %r1827, %r92;
	sub.f32 	%r1295, %r1826, %r91;
	sub.f32 	%r1296, %r1825, %r90;
	.loc	1 60 29                         // gqa.py:60:29 @[ gqa.py:185:82 ]
	ex2.approx.ftz.f32 	%r1297, %r1296;
	ex2.approx.ftz.f32 	%r1298, %r1295;
	ex2.approx.ftz.f32 	%r1299, %r1294;
	ex2.approx.ftz.f32 	%r1300, %r1293;
	.loc	1 61 28                         // gqa.py:61:28 @[ gqa.py:185:82 ]
	fma.rn.f32 	%r1829, %r1829, %r1297, %r1292;
	fma.rn.f32 	%r1830, %r1830, %r1298, %r1291;
	fma.rn.f32 	%r1831, %r1831, %r1299, %r1290;
	fma.rn.f32 	%r1832, %r1832, %r1300, %r1289;
	.loc	1 63 20                         // gqa.py:63:20 @[ gqa.py:185:82 ]
	mul.f32 	%r1761, %r1761, %r1297;
	mul.f32 	%r1762, %r1762, %r1297;
	mul.f32 	%r1763, %r1763, %r1298;
	mul.f32 	%r1764, %r1764, %r1298;
	mul.f32 	%r1765, %r1765, %r1297;
	mul.f32 	%r1766, %r1766, %r1297;
	mul.f32 	%r1767, %r1767, %r1298;
	mul.f32 	%r1768, %r1768, %r1298;
	mul.f32 	%r1769, %r1769, %r1297;
	mul.f32 	%r1770, %r1770, %r1297;
	mul.f32 	%r1771, %r1771, %r1298;
	mul.f32 	%r1772, %r1772, %r1298;
	mul.f32 	%r1773, %r1773, %r1297;
	mul.f32 	%r1774, %r1774, %r1297;
	mul.f32 	%r1775, %r1775, %r1298;
	mul.f32 	%r1776, %r1776, %r1298;
	mul.f32 	%r1777, %r1777, %r1297;
	mul.f32 	%r1778, %r1778, %r1297;
	mul.f32 	%r1779, %r1779, %r1298;
	mul.f32 	%r1780, %r1780, %r1298;
	mul.f32 	%r1781, %r1781, %r1297;
	mul.f32 	%r1782, %r1782, %r1297;
	mul.f32 	%r1783, %r1783, %r1298;
	mul.f32 	%r1784, %r1784, %r1298;
	mul.f32 	%r1785, %r1785, %r1297;
	mul.f32 	%r1786, %r1786, %r1297;
	mul.f32 	%r1787, %r1787, %r1298;
	mul.f32 	%r1788, %r1788, %r1298;
	mul.f32 	%r1789, %r1789, %r1297;
	mul.f32 	%r1790, %r1790, %r1297;
	mul.f32 	%r1791, %r1791, %r1298;
	mul.f32 	%r1792, %r1792, %r1298;
	mul.f32 	%r1793, %r1793, %r1299;
	mul.f32 	%r1794, %r1794, %r1299;
	mul.f32 	%r1795, %r1795, %r1300;
	mul.f32 	%r1796, %r1796, %r1300;
	mul.f32 	%r1797, %r1797, %r1299;
	mul.f32 	%r1798, %r1798, %r1299;
	mul.f32 	%r1799, %r1799, %r1300;
	mul.f32 	%r1800, %r1800, %r1300;
	mul.f32 	%r1801, %r1801, %r1299;
	mul.f32 	%r1802, %r1802, %r1299;
	mul.f32 	%r1803, %r1803, %r1300;
	mul.f32 	%r1804, %r1804, %r1300;
	mul.f32 	%r1805, %r1805, %r1299;
	mul.f32 	%r1806, %r1806, %r1299;
	mul.f32 	%r1807, %r1807, %r1300;
	mul.f32 	%r1808, %r1808, %r1300;
	mul.f32 	%r1809, %r1809, %r1299;
	mul.f32 	%r1810, %r1810, %r1299;
	mul.f32 	%r1811, %r1811, %r1300;
	mul.f32 	%r1812, %r1812, %r1300;
	mul.f32 	%r1813, %r1813, %r1299;
	mul.f32 	%r1814, %r1814, %r1299;
	mul.f32 	%r1815, %r1815, %r1300;
	mul.f32 	%r1816, %r1816, %r1300;
	mul.f32 	%r1817, %r1817, %r1299;
	mul.f32 	%r1818, %r1818, %r1299;
	mul.f32 	%r1819, %r1819, %r1300;
	mul.f32 	%r1820, %r1820, %r1300;
	mul.f32 	%r1821, %r1821, %r1299;
	mul.f32 	%r1822, %r1822, %r1299;
	mul.f32 	%r1823, %r1823, %r1300;
	mul.f32 	%r1824, %r1824, %r1300;
	.loc	1 65 20                         // gqa.py:65:20 @[ gqa.py:185:82 ]
	add.s32 	%r1302, %r393, %r1123;
	.loc	1 69 21                         // gqa.py:69:21 @[ gqa.py:185:82 ]
	cvt.rn.f16x2.f32 	%r906, %r1218, %r1217;
	cvt.rn.f16x2.f32 	%r907, %r1220, %r1219;
	cvt.rn.f16x2.f32 	%r908, %r1222, %r1221;
	cvt.rn.f16x2.f32 	%r909, %r1224, %r1223;
	cvt.rn.f16x2.f32 	%r974, %r1226, %r1225;
	cvt.rn.f16x2.f32 	%r975, %r1228, %r1227;
	cvt.rn.f16x2.f32 	%r976, %r1230, %r1229;
	cvt.rn.f16x2.f32 	%r977, %r1232, %r1231;
	cvt.rn.f16x2.f32 	%r1042, %r1234, %r1233;
	cvt.rn.f16x2.f32 	%r1043, %r1236, %r1235;
	cvt.rn.f16x2.f32 	%r1044, %r1238, %r1237;
	cvt.rn.f16x2.f32 	%r1045, %r1240, %r1239;
	cvt.rn.f16x2.f32 	%r1110, %r1242, %r1241;
	cvt.rn.f16x2.f32 	%r1111, %r1244, %r1243;
	cvt.rn.f16x2.f32 	%r1112, %r1246, %r1245;
	cvt.rn.f16x2.f32 	%r1113, %r1248, %r1247;
	.loc	1 70 27                         // gqa.py:70:27 @[ gqa.py:185:82 ]
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	bfe.u32 	%r1303, %r1302, 4, 14;
	cvt.u64.u32 	%rd191, %r1303;
	or.b64 	%rd179, %rd191, 4611686293322072064;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.f16.f16 {%r1761,%r1762,%r1763,%r1764,%r1765,%r1766,%r1767,%r1768,%r1769,%r1770,%r1771,%r1772,%r1773,%r1774,%r1775,%r1776,%r1777,%r1778,%r1779,%r1780,%r1781,%r1782,%r1783,%r1784,%r1785,%r1786,%r1787,%r1788,%r1789,%r1790,%r1791,%r1792}, {%r906,%r907,%r908,%r909}, %rd179, %p1, 1, 1, 1;
	// end inline asm
	add.s32 	%r1304, %r1302, 2048;
	bfe.u32 	%r1305, %r1304, 4, 14;
	cvt.u64.u32 	%rd192, %r1305;
	or.b64 	%rd180, %rd192, 4611686293322072064;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.f16.f16 {%r1761,%r1762,%r1763,%r1764,%r1765,%r1766,%r1767,%r1768,%r1769,%r1770,%r1771,%r1772,%r1773,%r1774,%r1775,%r1776,%r1777,%r1778,%r1779,%r1780,%r1781,%r1782,%r1783,%r1784,%r1785,%r1786,%r1787,%r1788,%r1789,%r1790,%r1791,%r1792}, {%r974,%r975,%r976,%r977}, %rd180, %p1, 1, 1, 1;
	// end inline asm
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.f16.f16 {%r1793,%r1794,%r1795,%r1796,%r1797,%r1798,%r1799,%r1800,%r1801,%r1802,%r1803,%r1804,%r1805,%r1806,%r1807,%r1808,%r1809,%r1810,%r1811,%r1812,%r1813,%r1814,%r1815,%r1816,%r1817,%r1818,%r1819,%r1820,%r1821,%r1822,%r1823,%r1824}, {%r1042,%r1043,%r1044,%r1045}, %rd179, %p1, 1, 1, 1;
	// end inline asm
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.f16.f16 {%r1793,%r1794,%r1795,%r1796,%r1797,%r1798,%r1799,%r1800,%r1801,%r1802,%r1803,%r1804,%r1805,%r1806,%r1807,%r1808,%r1809,%r1810,%r1811,%r1812,%r1813,%r1814,%r1815,%r1816,%r1817,%r1818,%r1819,%r1820,%r1821,%r1822,%r1823,%r1824}, {%r1110,%r1111,%r1112,%r1113}, %rd180, %p1, 1, 1, 1;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	.loc	1 44 33                         // gqa.py:44:33 @[ gqa.py:185:82 ]
	add.s32 	%r1306, %r1760, 1;
	setp.gt.s32 	%p13, %r1306, 3;
	selp.b32 	%r1760, 0, %r1306, %p13;
	.loc	1 47 20                         // gqa.py:47:20 @[ gqa.py:185:82 ]
	add.s64 	%rd183, %rd233, %rd19;
	add.s64 	%rd184, %rd235, %rd19;
	shl.b32 	%r1307, %r1760, 12;
	add.s32 	%r1308, %r392, %r1307;
	bar.sync 	0;
	add.s32 	%r1114, %r1308, %r347;
	add.s32 	%r1116, %r1308, %r353;
	selp.b32 	%r1115, 16, 0, %p11;
	// begin inline asm
	cp.async.cg.shared.global [ %r1114 + 0 ], [ %rd183 + 0 ], 0x10, %r1115;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r1116 + 0 ], [ %rd184 + 0 ], 0x10, %r1115;
	// end inline asm
	cp.async.commit_group;
	.loc	1 65 20                         // gqa.py:65:20 @[ gqa.py:185:82 ]
	add.s64 	%rd185, %rd234, %rd19;
	add.s64 	%rd186, %rd236, %rd19;
	add.s32 	%r1311, %r393, %r1307;
	add.s32 	%r1118, %r1311, %r347;
	add.s32 	%r1120, %r1311, %r353;
	// begin inline asm
	cp.async.cg.shared.global [ %r1118 + 0 ], [ %rd185 + 0 ], 0x10, %r1115;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r1120 + 0 ], [ %rd186 + 0 ], 0x10, %r1115;
	// end inline asm
	cp.async.commit_group;
	.loc	1 44 33                         // gqa.py:44:33 @[ gqa.py:185:82 ]
	add.s64 	%rd236, %rd236, %rd21;
	add.s64 	%rd235, %rd235, %rd23;
	add.s64 	%rd234, %rd234, %rd21;
	add.s64 	%rd233, %rd233, %rd23;
	setp.lt.u32 	%p14, %r1758, 4064;
	mov.b32 	%r1825, %r90;
	mov.b32 	%r1826, %r91;
	mov.b32 	%r1827, %r92;
	mov.b32 	%r1828, %r93;
	@%p14 bra 	$L__BB0_1;
// %bb.2:
	// begin inline asm
	// wait for regs: %r1761,%r1762,%r1763,%r1764,%r1765,%r1766,%r1767,%r1768,%r1769,%r1770,%r1771,%r1772,%r1773,%r1774,%r1775,%r1776,%r1777,%r1778,%r1779,%r1780,%r1781,%r1782,%r1783,%r1784,%r1785,%r1786,%r1787,%r1788,%r1789,%r1790,%r1791,%r1792,%r1793,%r1794,%r1795,%r1796,%r1797,%r1798,%r1799,%r1800,%r1801,%r1802,%r1803,%r1804,%r1805,%r1806,%r1807,%r1808,%r1809,%r1810,%r1811,%r1812,%r1813,%r1814,%r1815,%r1816,%r1817,%r1818,%r1819,%r1820,%r1821,%r1822,%r1823,%r1824
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	cp.async.wait_group 	0;
	bar.sync 	0;
$L__tmp2:
	.loc	1 198 24                        // gqa.py:198:24
	setp.lt.f32 	%p15, %r1829, 0f00800000;
	mul.f32 	%r1440, %r1829, 0f4B000000;
	selp.f32 	%r232, %r1440, %r1829, %p15;
	selp.f32 	%r1441, 0fC1B80000, 0f00000000, %p15;
	add.s32 	%r1442, %r232, -1060439283;
	and.b32 	%r1443, %r1442, -8388608;
	sub.s32 	%r1444, %r232, %r1443;
	cvt.rn.f32.s32 	%r1445, %r1443;
	mov.b32 	%r1446, 0f34000000;
	fma.rn.ftz.f32 	%r1447, %r1445, %r1446, %r1441;
	add.f32 	%r1448, %r1444, 0fBF800000;
	mov.b32 	%r1449, 0fBE2C7F30;
	mov.b32 	%r1450, 0f3DC6B27F;
	fma.rn.ftz.f32 	%r1451, %r1450, %r1448, %r1449;
	mov.b32 	%r1452, 0f3E2FCF2A;
	fma.rn.ftz.f32 	%r1453, %r1451, %r1448, %r1452;
	mov.b32 	%r1454, 0fBE374E43;
	fma.rn.ftz.f32 	%r1455, %r1453, %r1448, %r1454;
	mov.b32 	%r1456, 0f3E520BF4;
	fma.rn.ftz.f32 	%r1457, %r1455, %r1448, %r1456;
	mov.b32 	%r1458, 0fBE763C8B;
	fma.rn.ftz.f32 	%r1459, %r1457, %r1448, %r1458;
	mov.b32 	%r1460, 0f3E93BF99;
	fma.rn.ftz.f32 	%r1461, %r1459, %r1448, %r1460;
	mov.b32 	%r1462, 0fBEB8AA49;
	fma.rn.ftz.f32 	%r1463, %r1461, %r1448, %r1462;
	mov.b32 	%r1464, 0f3EF6384A;
	fma.rn.ftz.f32 	%r1465, %r1463, %r1448, %r1464;
	mov.b32 	%r1466, 0fBF38AA3B;
	fma.rn.ftz.f32 	%r1467, %r1465, %r1448, %r1466;
	mul.f32 	%r1468, %r1448, %r1467;
	mul.f32 	%r1469, %r1448, %r1468;
	mov.b32 	%r1470, 0f3FB8AA3B;
	fma.rn.ftz.f32 	%r1471, %r1448, %r1470, %r1469;
	add.f32 	%r1833, %r1447, %r1471;
	setp.lt.u32 	%p16, %r232, 2139095040;
	mov.b32 	%r1472, 0f7F800000;
	@%p16 bra 	$L__BB0_4;
// %bb.3:                               // %__nv_fmaf_rn.exit.i.i
	.loc	1 0 24                          // gqa.py:0:24
	fma.rn.ftz.f32 	%r1833, %r232, %r1472, %r1472;
$L__BB0_4:                              // %__nv_log2f.exit
	.loc	1 198 24                        // gqa.py:198:24
	setp.lt.f32 	%p17, %r1830, 0f00800000;
	mul.f32 	%r1473, %r1830, 0f4B000000;
	selp.f32 	%r237, %r1473, %r1830, %p17;
	selp.f32 	%r1474, 0fC1B80000, 0f00000000, %p17;
	add.s32 	%r1475, %r237, -1060439283;
	and.b32 	%r1476, %r1475, -8388608;
	sub.s32 	%r1477, %r237, %r1476;
	cvt.rn.f32.s32 	%r1478, %r1476;
	fma.rn.ftz.f32 	%r1480, %r1478, %r1446, %r1474;
	add.f32 	%r1481, %r1477, 0fBF800000;
	fma.rn.ftz.f32 	%r1484, %r1450, %r1481, %r1449;
	fma.rn.ftz.f32 	%r1486, %r1484, %r1481, %r1452;
	fma.rn.ftz.f32 	%r1488, %r1486, %r1481, %r1454;
	fma.rn.ftz.f32 	%r1490, %r1488, %r1481, %r1456;
	fma.rn.ftz.f32 	%r1492, %r1490, %r1481, %r1458;
	fma.rn.ftz.f32 	%r1494, %r1492, %r1481, %r1460;
	fma.rn.ftz.f32 	%r1496, %r1494, %r1481, %r1462;
	fma.rn.ftz.f32 	%r1498, %r1496, %r1481, %r1464;
	fma.rn.ftz.f32 	%r1500, %r1498, %r1481, %r1466;
	mul.f32 	%r1501, %r1481, %r1500;
	mul.f32 	%r1502, %r1481, %r1501;
	fma.rn.ftz.f32 	%r1504, %r1481, %r1470, %r1502;
	add.f32 	%r1834, %r1480, %r1504;
	setp.lt.u32 	%p18, %r237, 2139095040;
	@%p18 bra 	$L__BB0_6;
// %bb.5:                               // %__nv_fmaf_rn.exit.i.i232
	.loc	1 0 24                          // gqa.py:0:24
	fma.rn.ftz.f32 	%r1834, %r237, %r1472, %r1472;
$L__BB0_6:                              // %__nv_log2f.exit235
	.loc	1 198 24                        // gqa.py:198:24
	setp.lt.f32 	%p19, %r1831, 0f00800000;
	mul.f32 	%r1506, %r1831, 0f4B000000;
	selp.f32 	%r242, %r1506, %r1831, %p19;
	selp.f32 	%r1507, 0fC1B80000, 0f00000000, %p19;
	add.s32 	%r1508, %r242, -1060439283;
	and.b32 	%r1509, %r1508, -8388608;
	sub.s32 	%r1510, %r242, %r1509;
	cvt.rn.f32.s32 	%r1511, %r1509;
	mov.b32 	%r1512, 0f34000000;
	fma.rn.ftz.f32 	%r1513, %r1511, %r1512, %r1507;
	add.f32 	%r1514, %r1510, 0fBF800000;
	mov.b32 	%r1515, 0fBE2C7F30;
	mov.b32 	%r1516, 0f3DC6B27F;
	fma.rn.ftz.f32 	%r1517, %r1516, %r1514, %r1515;
	mov.b32 	%r1518, 0f3E2FCF2A;
	fma.rn.ftz.f32 	%r1519, %r1517, %r1514, %r1518;
	mov.b32 	%r1520, 0fBE374E43;
	fma.rn.ftz.f32 	%r1521, %r1519, %r1514, %r1520;
	mov.b32 	%r1522, 0f3E520BF4;
	fma.rn.ftz.f32 	%r1523, %r1521, %r1514, %r1522;
	mov.b32 	%r1524, 0fBE763C8B;
	fma.rn.ftz.f32 	%r1525, %r1523, %r1514, %r1524;
	mov.b32 	%r1526, 0f3E93BF99;
	fma.rn.ftz.f32 	%r1527, %r1525, %r1514, %r1526;
	mov.b32 	%r1528, 0fBEB8AA49;
	fma.rn.ftz.f32 	%r1529, %r1527, %r1514, %r1528;
	mov.b32 	%r1530, 0f3EF6384A;
	fma.rn.ftz.f32 	%r1531, %r1529, %r1514, %r1530;
	mov.b32 	%r1532, 0fBF38AA3B;
	fma.rn.ftz.f32 	%r1533, %r1531, %r1514, %r1532;
	mul.f32 	%r1534, %r1514, %r1533;
	mul.f32 	%r1535, %r1514, %r1534;
	mov.b32 	%r1536, 0f3FB8AA3B;
	fma.rn.ftz.f32 	%r1537, %r1514, %r1536, %r1535;
	add.f32 	%r1835, %r1513, %r1537;
	setp.lt.u32 	%p20, %r242, 2139095040;
	mov.b32 	%r1538, 0f7F800000;
	@%p20 bra 	$L__BB0_8;
// %bb.7:                               // %__nv_fmaf_rn.exit.i.i262
	.loc	1 0 24                          // gqa.py:0:24
	fma.rn.ftz.f32 	%r1835, %r242, %r1538, %r1538;
$L__BB0_8:                              // %__nv_log2f.exit265
	.loc	1 198 24                        // gqa.py:198:24
	setp.lt.f32 	%p21, %r1832, 0f00800000;
	mul.f32 	%r1539, %r1832, 0f4B000000;
	selp.f32 	%r247, %r1539, %r1832, %p21;
	selp.f32 	%r1540, 0fC1B80000, 0f00000000, %p21;
	add.s32 	%r1541, %r247, -1060439283;
	and.b32 	%r1542, %r1541, -8388608;
	sub.s32 	%r1543, %r247, %r1542;
	cvt.rn.f32.s32 	%r1544, %r1542;
	fma.rn.ftz.f32 	%r1546, %r1544, %r1512, %r1540;
	add.f32 	%r1547, %r1543, 0fBF800000;
	fma.rn.ftz.f32 	%r1550, %r1516, %r1547, %r1515;
	fma.rn.ftz.f32 	%r1552, %r1550, %r1547, %r1518;
	fma.rn.ftz.f32 	%r1554, %r1552, %r1547, %r1520;
	fma.rn.ftz.f32 	%r1556, %r1554, %r1547, %r1522;
	fma.rn.ftz.f32 	%r1558, %r1556, %r1547, %r1524;
	fma.rn.ftz.f32 	%r1560, %r1558, %r1547, %r1526;
	fma.rn.ftz.f32 	%r1562, %r1560, %r1547, %r1528;
	fma.rn.ftz.f32 	%r1564, %r1562, %r1547, %r1530;
	fma.rn.ftz.f32 	%r1566, %r1564, %r1547, %r1532;
	mul.f32 	%r1567, %r1547, %r1566;
	mul.f32 	%r1568, %r1547, %r1567;
	fma.rn.ftz.f32 	%r1570, %r1547, %r1536, %r1568;
	add.f32 	%r1836, %r1546, %r1570;
	setp.lt.u32 	%p22, %r247, 2139095040;
	@%p22 bra 	$L__BB0_10;
// %bb.9:                               // %__nv_fmaf_rn.exit.i.i292
	.loc	1 0 24                          // gqa.py:0:24
	fma.rn.ftz.f32 	%r1836, %r247, %r1538, %r1538;
$L__BB0_10:                             // %__nv_log2f.exit295
	.loc	1 198 24                        // gqa.py:198:24
	setp.eq.f32 	%p23, %r242, 0f00000000;
	selp.f32 	%r1605, 0fFF800000, %r1835, %p23;
	setp.eq.f32 	%p24, %r237, 0f00000000;
	selp.f32 	%r1606, 0fFF800000, %r1834, %p24;
	setp.eq.f32 	%p25, %r232, 0f00000000;
	selp.f32 	%r1607, 0fFF800000, %r1833, %p25;
	.loc	1 159 19                        // gqa.py:159:19
	add.s64 	%rd203, %rd35, %rd19;
	.loc	1 164 8                         // gqa.py:164:8
	cvt.s64.s32 	%rd204, %r251;
	.loc	1 167 46                        // gqa.py:167:46
	and.b32 	%r1608, %r3, 127;
	.loc	1 167 33                        // gqa.py:167:33
	or.b32 	%r1609, %r2, %r1608;
	.loc	1 198 24                        // gqa.py:198:24
	setp.eq.f32 	%p26, %r247, 0f00000000;
	selp.f32 	%r1610, 0fFF800000, %r1836, %p26;
	.loc	1 198 11                        // gqa.py:198:11
	add.f32 	%r1611, %r90, %r1607;
	add.f32 	%r1612, %r91, %r1606;
	add.f32 	%r1613, %r92, %r1605;
	add.f32 	%r1614, %r93, %r1610;
	.loc	1 199 16                        // gqa.py:199:16
	div.full.f32 	%r1615, %r1761, %r1829;
	div.full.f32 	%r1616, %r1762, %r1829;
	div.full.f32 	%r1617, %r1763, %r1830;
	div.full.f32 	%r1618, %r1764, %r1830;
	div.full.f32 	%r1619, %r1765, %r1829;
	div.full.f32 	%r1620, %r1766, %r1829;
	div.full.f32 	%r1621, %r1767, %r1830;
	div.full.f32 	%r1622, %r1768, %r1830;
	div.full.f32 	%r1623, %r1769, %r1829;
	div.full.f32 	%r1624, %r1770, %r1829;
	div.full.f32 	%r1625, %r1771, %r1830;
	div.full.f32 	%r1626, %r1772, %r1830;
	div.full.f32 	%r1627, %r1773, %r1829;
	div.full.f32 	%r1628, %r1774, %r1829;
	div.full.f32 	%r1629, %r1775, %r1830;
	div.full.f32 	%r1630, %r1776, %r1830;
	div.full.f32 	%r1631, %r1777, %r1829;
	div.full.f32 	%r1632, %r1778, %r1829;
	div.full.f32 	%r1633, %r1779, %r1830;
	div.full.f32 	%r1634, %r1780, %r1830;
	div.full.f32 	%r1635, %r1781, %r1829;
	div.full.f32 	%r1636, %r1782, %r1829;
	div.full.f32 	%r1637, %r1783, %r1830;
	div.full.f32 	%r1638, %r1784, %r1830;
	div.full.f32 	%r1639, %r1785, %r1829;
	div.full.f32 	%r1640, %r1786, %r1829;
	div.full.f32 	%r1641, %r1787, %r1830;
	div.full.f32 	%r1642, %r1788, %r1830;
	div.full.f32 	%r1643, %r1789, %r1829;
	div.full.f32 	%r1644, %r1790, %r1829;
	div.full.f32 	%r1645, %r1791, %r1830;
	div.full.f32 	%r1646, %r1792, %r1830;
	div.full.f32 	%r1647, %r1793, %r1831;
	div.full.f32 	%r1648, %r1794, %r1831;
	div.full.f32 	%r1649, %r1795, %r1832;
	div.full.f32 	%r1650, %r1796, %r1832;
	div.full.f32 	%r1651, %r1797, %r1831;
	div.full.f32 	%r1652, %r1798, %r1831;
	div.full.f32 	%r1653, %r1799, %r1832;
	div.full.f32 	%r1654, %r1800, %r1832;
	div.full.f32 	%r1655, %r1801, %r1831;
	div.full.f32 	%r1656, %r1802, %r1831;
	div.full.f32 	%r1657, %r1803, %r1832;
	div.full.f32 	%r1658, %r1804, %r1832;
	div.full.f32 	%r1659, %r1805, %r1831;
	div.full.f32 	%r1660, %r1806, %r1831;
	div.full.f32 	%r1661, %r1807, %r1832;
	div.full.f32 	%r1662, %r1808, %r1832;
	div.full.f32 	%r1663, %r1809, %r1831;
	div.full.f32 	%r1664, %r1810, %r1831;
	div.full.f32 	%r1665, %r1811, %r1832;
	div.full.f32 	%r1666, %r1812, %r1832;
	div.full.f32 	%r1667, %r1813, %r1831;
	div.full.f32 	%r1668, %r1814, %r1831;
	div.full.f32 	%r1669, %r1815, %r1832;
	div.full.f32 	%r1670, %r1816, %r1832;
	div.full.f32 	%r1671, %r1817, %r1831;
	div.full.f32 	%r1672, %r1818, %r1831;
	div.full.f32 	%r1673, %r1819, %r1832;
	div.full.f32 	%r1674, %r1820, %r1832;
	div.full.f32 	%r1675, %r1821, %r1831;
	div.full.f32 	%r1676, %r1822, %r1831;
	div.full.f32 	%r1677, %r1823, %r1832;
	div.full.f32 	%r1678, %r1824, %r1832;
	.loc	1 200 26                        // gqa.py:200:26
	shl.b32 	%r1679, %r1, 5;
	.loc	1 200 17                        // gqa.py:200:17
	mul.wide.u32 	%rd205, %r1679, 4;
	add.s64 	%rd206, %rd34, %rd205;
	.loc	1 200 34                        // gqa.py:200:34
	mul.wide.s32 	%rd207, %r1609, 4;
	add.s64 	%rd193, %rd206, %rd207;
	.loc	1 201 21                        // gqa.py:201:21
	shl.b32 	%r1680, %r3, 1;
	and.b32 	%r1681, %r1680, 192;
	add.s32 	%r1683, %r348, %r1681;
	and.b32 	%r1684, %r3, 28;
	add.s32 	%r1685, %r1683, %r1684;
	st.shared.b32 	[%r1685], %r1611;
	st.shared.b32 	[%r1685+32], %r1612;
	st.shared.b32 	[%r1685+256], %r1613;
	st.shared.b32 	[%r1685+288], %r1614;
	bar.sync 	0;
	shl.b32 	%r1686, %r1608, 2;
	add.s32 	%r1687, %r348, %r1686;
	ld.shared.b32 	%r1572, [%r1687];
	// begin inline asm
	st.global.b32 [ %rd193 + 0 ], { %r1572 };
	// end inline asm
	.loc	1 202 33                        // gqa.py:202:33
	cvt.rn.f16x2.f32 	%r1688, %r1616, %r1615;
	cvt.rn.f16x2.f32 	%r1689, %r1618, %r1617;
	cvt.rn.f16x2.f32 	%r1690, %r1620, %r1619;
	cvt.rn.f16x2.f32 	%r1691, %r1622, %r1621;
	cvt.rn.f16x2.f32 	%r1692, %r1624, %r1623;
	cvt.rn.f16x2.f32 	%r1693, %r1626, %r1625;
	cvt.rn.f16x2.f32 	%r1694, %r1628, %r1627;
	cvt.rn.f16x2.f32 	%r1695, %r1630, %r1629;
	cvt.rn.f16x2.f32 	%r1696, %r1632, %r1631;
	cvt.rn.f16x2.f32 	%r1697, %r1634, %r1633;
	cvt.rn.f16x2.f32 	%r1698, %r1636, %r1635;
	cvt.rn.f16x2.f32 	%r1699, %r1638, %r1637;
	cvt.rn.f16x2.f32 	%r1700, %r1640, %r1639;
	cvt.rn.f16x2.f32 	%r1701, %r1642, %r1641;
	cvt.rn.f16x2.f32 	%r1702, %r1644, %r1643;
	cvt.rn.f16x2.f32 	%r1703, %r1646, %r1645;
	cvt.rn.f16x2.f32 	%r1704, %r1648, %r1647;
	cvt.rn.f16x2.f32 	%r1705, %r1650, %r1649;
	cvt.rn.f16x2.f32 	%r1706, %r1652, %r1651;
	cvt.rn.f16x2.f32 	%r1707, %r1654, %r1653;
	cvt.rn.f16x2.f32 	%r1708, %r1656, %r1655;
	cvt.rn.f16x2.f32 	%r1709, %r1658, %r1657;
	cvt.rn.f16x2.f32 	%r1710, %r1660, %r1659;
	cvt.rn.f16x2.f32 	%r1711, %r1662, %r1661;
	cvt.rn.f16x2.f32 	%r1712, %r1664, %r1663;
	cvt.rn.f16x2.f32 	%r1713, %r1666, %r1665;
	cvt.rn.f16x2.f32 	%r1714, %r1668, %r1667;
	cvt.rn.f16x2.f32 	%r1715, %r1670, %r1669;
	cvt.rn.f16x2.f32 	%r1716, %r1672, %r1671;
	cvt.rn.f16x2.f32 	%r1717, %r1674, %r1673;
	cvt.rn.f16x2.f32 	%r1718, %r1676, %r1675;
	cvt.rn.f16x2.f32 	%r1719, %r1678, %r1677;
	.loc	1 202 26                        // gqa.py:202:26
	mul.lo.s64 	%rd208, %rd2, %rd204;
	mul.lo.s64 	%rd209, %rd3, %rd204;
	mul.lo.s64 	%rd210, %rd4, %rd204;
	mul.lo.s64 	%rd211, %rd5, %rd204;
	mul.lo.s64 	%rd212, %rd6, %rd204;
	mul.lo.s64 	%rd213, %rd7, %rd204;
	mul.lo.s64 	%rd214, %rd8, %rd204;
	mul.lo.s64 	%rd215, %rd9, %rd204;
	shl.b64 	%rd216, %rd208, 1;
	add.s64 	%rd217, %rd203, %rd216;
	shl.b64 	%rd218, %rd10, 1;
	add.s64 	%rd194, %rd217, %rd218;
	shl.b64 	%rd219, %rd209, 1;
	add.s64 	%rd220, %rd203, %rd219;
	add.s64 	%rd195, %rd220, %rd218;
	shl.b64 	%rd221, %rd210, 1;
	add.s64 	%rd222, %rd203, %rd221;
	add.s64 	%rd196, %rd222, %rd218;
	shl.b64 	%rd223, %rd211, 1;
	add.s64 	%rd224, %rd203, %rd223;
	add.s64 	%rd197, %rd224, %rd218;
	shl.b64 	%rd225, %rd212, 1;
	add.s64 	%rd226, %rd203, %rd225;
	add.s64 	%rd198, %rd226, %rd218;
	shl.b64 	%rd227, %rd213, 1;
	add.s64 	%rd228, %rd203, %rd227;
	add.s64 	%rd199, %rd228, %rd218;
	shl.b64 	%rd229, %rd214, 1;
	add.s64 	%rd230, %rd203, %rd229;
	add.s64 	%rd200, %rd230, %rd218;
	shl.b64 	%rd231, %rd215, 1;
	add.s64 	%rd232, %rd203, %rd231;
	add.s64 	%rd201, %rd232, %rd218;
	bar.sync 	0;
	and.b32 	%r1720, %r1680, 6;
	shl.b32 	%r1721, %r3, 4;
	and.b32 	%r1722, %r1721, 448;
	or.b32 	%r1723, %r1722, %r1720;
	shl.b32 	%r1724, %r3, 5;
	and.b32 	%r1725, %r1724, 3072;
	or.b32 	%r1726, %r1723, %r1725;
	and.b32 	%r1727, %r6, 1016;
	shr.u32 	%r1728, %r1726, 2;
	and.b32 	%r1729, %r1728, 880;
	add.s32 	%r1730, %r348, %r1729;
	shl.b32 	%r1731, %r1726, 1;
	add.s32 	%r1732, %r1730, %r1731;
	st.shared.b32 	[%r1732], %r1688;
	or.b32 	%r1733, %r1726, 512;
	shr.u32 	%r1734, %r1733, 2;
	and.b32 	%r1735, %r1734, 1008;
	add.s32 	%r1736, %r348, %r1735;
	add.s32 	%r1737, %r1736, %r1731;
	st.shared.b32 	[%r1737+1024], %r1689;
	st.shared.b32 	[%r1732+16], %r1690;
	st.shared.b32 	[%r1737+1040], %r1691;
	st.shared.b32 	[%r1732+32], %r1692;
	st.shared.b32 	[%r1737+1056], %r1693;
	st.shared.b32 	[%r1732+48], %r1694;
	st.shared.b32 	[%r1737+1072], %r1695;
	st.shared.b32 	[%r1732+64], %r1696;
	st.shared.b32 	[%r1737+1088], %r1697;
	st.shared.b32 	[%r1732+80], %r1698;
	st.shared.b32 	[%r1737+1104], %r1699;
	st.shared.b32 	[%r1732+96], %r1700;
	st.shared.b32 	[%r1737+1120], %r1701;
	st.shared.b32 	[%r1732+112], %r1702;
	st.shared.b32 	[%r1737+1136], %r1703;
	bar.sync 	0;
	and.b32 	%r1738, %r3, 120;
	shl.b32 	%r1739, %r1738, 1;
	add.s32 	%r1740, %r348, %r1739;
	shl.b32 	%r1741, %r1727, 1;
	add.s32 	%r1742, %r1740, %r1741;
	ld.shared.v4.b32 	{%r1573, %r1574, %r1575, %r1576}, [%r1742];
	or.b32 	%r1743, %r1727, 1024;
	shr.u32 	%r1744, %r1743, 2;
	and.b32 	%r1745, %r1744, 496;
	add.s32 	%r1746, %r348, %r1745;
	add.s32 	%r1747, %r1746, %r1741;
	ld.shared.v4.b32 	{%r1577, %r1578, %r1579, %r1580}, [%r1747+2048];
	or.b32 	%r1748, %r1727, 2048;
	shr.u32 	%r1749, %r1748, 2;
	and.b32 	%r1750, %r1749, 752;
	add.s32 	%r1751, %r348, %r1750;
	add.s32 	%r1752, %r1751, %r1741;
	ld.shared.v4.b32 	{%r1581, %r1582, %r1583, %r1584}, [%r1752+4096];
	or.b32 	%r1753, %r1727, 3072;
	shr.u32 	%r1754, %r1753, 2;
	and.b32 	%r1755, %r1754, 1008;
	add.s32 	%r1756, %r348, %r1755;
	add.s32 	%r1757, %r1756, %r1741;
	ld.shared.v4.b32 	{%r1585, %r1586, %r1587, %r1588}, [%r1757+6144];
	bar.sync 	0;
	st.shared.b32 	[%r1732], %r1704;
	st.shared.b32 	[%r1737+1024], %r1705;
	st.shared.b32 	[%r1732+16], %r1706;
	st.shared.b32 	[%r1737+1040], %r1707;
	st.shared.b32 	[%r1732+32], %r1708;
	st.shared.b32 	[%r1737+1056], %r1709;
	st.shared.b32 	[%r1732+48], %r1710;
	st.shared.b32 	[%r1737+1072], %r1711;
	st.shared.b32 	[%r1732+64], %r1712;
	st.shared.b32 	[%r1737+1088], %r1713;
	st.shared.b32 	[%r1732+80], %r1714;
	st.shared.b32 	[%r1737+1104], %r1715;
	st.shared.b32 	[%r1732+96], %r1716;
	st.shared.b32 	[%r1737+1120], %r1717;
	st.shared.b32 	[%r1732+112], %r1718;
	st.shared.b32 	[%r1737+1136], %r1719;
	bar.sync 	0;
	ld.shared.v4.b32 	{%r1589, %r1590, %r1591, %r1592}, [%r1742];
	ld.shared.v4.b32 	{%r1593, %r1594, %r1595, %r1596}, [%r1747+2048];
	ld.shared.v4.b32 	{%r1597, %r1598, %r1599, %r1600}, [%r1752+4096];
	ld.shared.v4.b32 	{%r1601, %r1602, %r1603, %r1604}, [%r1757+6144];
	// begin inline asm
	st.global.v4.b32 [ %rd194 + 0 ], { %r1573, %r1574, %r1575, %r1576 };
	// end inline asm
	// begin inline asm
	st.global.v4.b32 [ %rd195 + 0 ], { %r1577, %r1578, %r1579, %r1580 };
	// end inline asm
	// begin inline asm
	st.global.v4.b32 [ %rd196 + 0 ], { %r1581, %r1582, %r1583, %r1584 };
	// end inline asm
	// begin inline asm
	st.global.v4.b32 [ %rd197 + 0 ], { %r1585, %r1586, %r1587, %r1588 };
	// end inline asm
	// begin inline asm
	st.global.v4.b32 [ %rd198 + 0 ], { %r1589, %r1590, %r1591, %r1592 };
	// end inline asm
	// begin inline asm
	st.global.v4.b32 [ %rd199 + 0 ], { %r1593, %r1594, %r1595, %r1596 };
	// end inline asm
	// begin inline asm
	st.global.v4.b32 [ %rd200 + 0 ], { %r1597, %r1598, %r1599, %r1600 };
	// end inline asm
	// begin inline asm
	st.global.v4.b32 [ %rd201 + 0 ], { %r1601, %r1602, %r1603, %r1604 };
	// end inline asm
	.loc	1 202 4                         // gqa.py:202:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/ubuntu/PTX_dataset/triton_ptx/gqa.py"
	.file	2 "/home/joy/miniconda3/envs/ptx/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 123                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x74 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 103                                 // DW_AT_name
.b8 113
.b8 97
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 117
.b8 98
.b8 117
.b8 110
.b8 116
.b8 117
.b8 47
.b8 80
.b8 84
.b8 88
.b8 95
.b8 100
.b8 97
.b8 116
.b8 97
.b8 115
.b8 101
.b8 116
.b8 47
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 116
.b8 120
.b8 0
.b8 2                                   // Abbrev [2] 0x44:0xc DW_TAG_subprogram
.b8 95                                  // DW_AT_name
.b8 97
.b8 116
.b8 116
.b8 110
.b8 95
.b8 102
.b8 119
.b8 100
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x50:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 68                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x65:0x18 DW_TAG_inlined_subroutine
.b32 68                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 185                                 // DW_AT_call_line
.b8 82                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
