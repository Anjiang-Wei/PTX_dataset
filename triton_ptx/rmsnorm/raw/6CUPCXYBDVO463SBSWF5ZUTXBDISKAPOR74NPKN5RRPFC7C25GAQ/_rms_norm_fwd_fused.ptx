//
// Generated by LLVM NVPTX Back-End
//

.version 8.7
.target sm_80
.address_size 64

	// .globl	_rms_norm_fwd_fused     // -- Begin function _rms_norm_fwd_fused
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @_rms_norm_fwd_fused
.visible .entry _rms_norm_fwd_fused(
	.param .u64 .ptr .global .align 1 _rms_norm_fwd_fused_param_0,
	.param .u64 .ptr .global .align 1 _rms_norm_fwd_fused_param_1,
	.param .u64 .ptr .global .align 1 _rms_norm_fwd_fused_param_2,
	.param .u64 .ptr .global .align 1 _rms_norm_fwd_fused_param_3,
	.param .u64 .ptr .global .align 1 _rms_norm_fwd_fused_param_4,
	.param .u32 _rms_norm_fwd_fused_param_5,
	.param .u32 _rms_norm_fwd_fused_param_6,
	.param .u64 .ptr .global .align 1 _rms_norm_fwd_fused_param_7
)
.reqntid 256
{
	.reg .pred 	%p<25>;
	.reg .b16 	%rs<67>;
	.reg .b32 	%r<525>;
	.reg .b64 	%rd<39>;
	.loc	1 39 0                          // rmsnorm.py:39:0
$L__func_begin0:
	.loc	1 39 0                          // rmsnorm.py:39:0

// %bb.0:
	ld.param.b32 	%r124, [_rms_norm_fwd_fused_param_6];
	ld.param.b64 	%rd6, [_rms_norm_fwd_fused_param_0];
$L__tmp0:
	.loc	1 50 24                         // rmsnorm.py:50:24
	mov.u32 	%r1, %ctaid.x;
	ld.param.b32 	%r126, [_rms_norm_fwd_fused_param_5];
	.loc	1 51 15                         // rmsnorm.py:51:15
	mul.lo.s32 	%r127, %r126, %r1;
	.loc	1 51 9                          // rmsnorm.py:51:9
	mul.wide.s32 	%rd8, %r127, 2;
	.loc	1 52 9                          // rmsnorm.py:52:9
	add.s64 	%rd2, %rd6, %rd8;
	.loc	1 57 34                         // rmsnorm.py:57:34
	mov.u32 	%r2, %tid.x;
	and.b32 	%r3, %r2, 31;
	shr.u32 	%r4, %r2, 5;
	shl.b32 	%r128, %r2, 3;
	and.b32 	%r5, %r128, 2040;
	.loc	1 56 27                         // rmsnorm.py:56:27
	setp.lt.s32 	%p1, %r124, 1;
	mov.b32 	%r508, 0f00000000;
	cvt.u64.u32 	%rd38, %r5;
	mov.b32 	%r490, %r508;
	@%p1 bra 	$L__BB0_4;
// %bb.1:                               // %.lr.ph.preheader
	.loc	1 0 27                          // rmsnorm.py:0:27
	mov.b32 	%r474, 0f00000000;
	mov.b32 	%r150, 0;
	mov.b32 	%r473, %r150;
	mov.b32 	%r475, %r474;
	mov.b32 	%r476, %r474;
	mov.b32 	%r477, %r474;
	mov.b32 	%r478, %r474;
	mov.b32 	%r479, %r474;
	mov.b32 	%r480, %r474;
	mov.b32 	%r481, %r474;
	mov.b32 	%r482, %r474;
	mov.b32 	%r483, %r474;
	mov.b32 	%r484, %r474;
	mov.b32 	%r485, %r474;
	mov.b32 	%r486, %r474;
	mov.b32 	%r487, %r474;
	mov.b32 	%r488, %r474;
	mov.b32 	%r489, %r474;
$L__BB0_2:                              // %.lr.ph
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 57 21                         // rmsnorm.py:57:21
	add.s32 	%r162, %r5, %r473;
	.loc	1 58 42                         // rmsnorm.py:58:42
	add.s32 	%r163, %r162, 2048;
	setp.lt.s32 	%p2, %r162, %r124;
	setp.lt.s32 	%p3, %r163, %r124;
	.loc	1 58 24                         // rmsnorm.py:58:24
	mul.wide.s32 	%rd11, %r162, 2;
	add.s64 	%rd9, %rd2, %rd11;
	cvt.s64.s32 	%rd12, %r473;
	add.s64 	%rd14, %rd12, %rd38;
	shl.b64 	%rd15, %rd14, 1;
	add.s64 	%rd16, %rd2, %rd15;
	add.s64 	%rd10, %rd16, 4096;
	.loc	1 58 20                         // rmsnorm.py:58:20
	// begin inline asm
	mov.u32 %r146, %r150;
	mov.u32 %r147, %r150;
	mov.u32 %r148, %r150;
	mov.u32 %r149, %r150;
	@%p2 ld.global.v4.b32 { %r146, %r147, %r148, %r149 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r154, %r150;
	mov.u32 %r155, %r150;
	mov.u32 %r156, %r150;
	mov.u32 %r157, %r150;
	@%p3 ld.global.v4.b32 { %r154, %r155, %r156, %r157 }, [ %rd10 + 0 ];
	// end inline asm
	.loc	1 58 58                         // rmsnorm.py:58:58
	mov.b32 	{%rs1, %rs2}, %r157;
	cvt.f32.f16 	%r164, %rs2;
	cvt.f32.f16 	%r165, %rs1;
	mov.b32 	{%rs3, %rs4}, %r156;
	cvt.f32.f16 	%r166, %rs4;
	cvt.f32.f16 	%r167, %rs3;
	mov.b32 	{%rs5, %rs6}, %r155;
	cvt.f32.f16 	%r168, %rs6;
	cvt.f32.f16 	%r169, %rs5;
	mov.b32 	{%rs7, %rs8}, %r154;
	cvt.f32.f16 	%r170, %rs8;
	cvt.f32.f16 	%r171, %rs7;
	mov.b32 	{%rs9, %rs10}, %r149;
	cvt.f32.f16 	%r172, %rs10;
	mov.b32 	{%rs11, %rs12}, %r146;
	cvt.f32.f16 	%r173, %rs11;
	cvt.f32.f16 	%r174, %rs12;
	mov.b32 	{%rs13, %rs14}, %r147;
	cvt.f32.f16 	%r175, %rs13;
	cvt.f32.f16 	%r176, %rs14;
	mov.b32 	{%rs15, %rs16}, %r148;
	cvt.f32.f16 	%r177, %rs15;
	cvt.f32.f16 	%r178, %rs16;
	cvt.f32.f16 	%r179, %rs9;
	.loc	1 59 17                         // rmsnorm.py:59:17
	add.f32 	%r480, %r480, %r179;
	add.f32 	%r479, %r479, %r178;
	add.f32 	%r478, %r478, %r177;
	add.f32 	%r477, %r477, %r176;
	add.f32 	%r476, %r476, %r175;
	add.f32 	%r475, %r475, %r174;
	add.f32 	%r474, %r474, %r173;
	add.f32 	%r481, %r481, %r172;
	add.f32 	%r482, %r482, %r171;
	add.f32 	%r483, %r483, %r170;
	add.f32 	%r484, %r484, %r169;
	add.f32 	%r485, %r485, %r168;
	add.f32 	%r486, %r486, %r167;
	add.f32 	%r487, %r487, %r166;
	add.f32 	%r488, %r488, %r165;
	add.f32 	%r489, %r489, %r164;
	.loc	1 56 27                         // rmsnorm.py:56:27
	add.s32 	%r473, %r473, 4096;
	setp.lt.s32 	%p4, %r473, %r124;
	@%p4 bra 	$L__BB0_2;
// %bb.3:                               // %._crit_edge.loopexit
$L__tmp1:
	.loc	2 260 15                        // standard.py:260:15 @[ rmsnorm.py:60:18 ]
	add.f32 	%r180, %r474, %r475;
	add.f32 	%r181, %r476, %r180;
	add.f32 	%r182, %r477, %r181;
	add.f32 	%r183, %r478, %r182;
	add.f32 	%r184, %r479, %r183;
	add.f32 	%r185, %r480, %r184;
	add.f32 	%r186, %r481, %r185;
	add.f32 	%r187, %r482, %r186;
	add.f32 	%r188, %r483, %r187;
	add.f32 	%r189, %r484, %r188;
	add.f32 	%r190, %r485, %r189;
	add.f32 	%r191, %r486, %r190;
	add.f32 	%r192, %r487, %r191;
	add.f32 	%r193, %r488, %r192;
	add.f32 	%r490, %r489, %r193;
$L__BB0_4:                              // %._crit_edge
	.loc	2 0 15                          // standard.py:0:15
	ld.param.b64 	%rd5, [_rms_norm_fwd_fused_param_4];
	ld.param.b64 	%rd4, [_rms_norm_fwd_fused_param_3];
	.loc	2 290 36                        // standard.py:290:36 @[ rmsnorm.py:60:18 ]
	shfl.sync.bfly.b32 	%r216, %r490, 16, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ rmsnorm.py:60:18 ]
	add.f32 	%r217, %r490, %r216;
	.loc	2 290 36                        // standard.py:290:36 @[ rmsnorm.py:60:18 ]
	shfl.sync.bfly.b32 	%r218, %r217, 8, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ rmsnorm.py:60:18 ]
	add.f32 	%r219, %r217, %r218;
	.loc	2 290 36                        // standard.py:290:36 @[ rmsnorm.py:60:18 ]
	shfl.sync.bfly.b32 	%r220, %r219, 4, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ rmsnorm.py:60:18 ]
	add.f32 	%r221, %r219, %r220;
	.loc	2 290 36                        // standard.py:290:36 @[ rmsnorm.py:60:18 ]
	shfl.sync.bfly.b32 	%r222, %r221, 2, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ rmsnorm.py:60:18 ]
	add.f32 	%r223, %r221, %r222;
	.loc	2 290 36                        // standard.py:290:36 @[ rmsnorm.py:60:18 ]
	shfl.sync.bfly.b32 	%r224, %r223, 1, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ rmsnorm.py:60:18 ]
	add.f32 	%r195, %r223, %r224;
	.loc	2 290 36                        // standard.py:290:36 @[ rmsnorm.py:60:18 ]
	and.b32 	%r225, %r4, 7;
	setp.eq.s32 	%p5, %r3, 0;
	shl.b32 	%r226, %r225, 2;
	mov.b32 	%r227, global_smem;
	add.s32 	%r318, %r227, %r226;
	// begin inline asm
	@%p5 st.shared.b32 [ %r318 + 0 ], %r195;
	// end inline asm
	bar.sync 	0;
	setp.lt.u32 	%p6, %r2, 8;
	shl.b32 	%r228, %r2, 2;
	add.s32 	%r322, %r227, %r228;
	// begin inline asm
	@%p6 ld.shared.b32 %r196, [ %r322 + 0 ];
	// end inline asm
	shfl.sync.bfly.b32 	%r229, %r196, 4, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ rmsnorm.py:60:18 ]
	add.f32 	%r230, %r196, %r229;
	.loc	2 290 36                        // standard.py:290:36 @[ rmsnorm.py:60:18 ]
	shfl.sync.bfly.b32 	%r231, %r230, 2, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ rmsnorm.py:60:18 ]
	add.f32 	%r232, %r230, %r231;
	.loc	2 290 36                        // standard.py:290:36 @[ rmsnorm.py:60:18 ]
	shfl.sync.bfly.b32 	%r233, %r232, 1, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ rmsnorm.py:60:18 ]
	add.f32 	%r199, %r232, %r233;
	.loc	2 290 36                        // standard.py:290:36 @[ rmsnorm.py:60:18 ]
	setp.eq.s32 	%p14, %r2, 0;
	// begin inline asm
	@%p14 st.shared.b32 [ %r322 + 0 ], %r199;
	// end inline asm
	bar.sync 	0;
	ld.shared.b32 	%r234, [global_smem];
$L__tmp2:
	.loc	1 60 35                         // rmsnorm.py:60:35
	cvt.rn.f32.s32 	%r45, %r124;
	div.full.f32 	%r46, %r234, %r45;
	mov.b32 	%r509, %r508;
	mov.b32 	%r510, %r508;
	mov.b32 	%r511, %r508;
	mov.b32 	%r512, %r508;
	mov.b32 	%r513, %r508;
	mov.b32 	%r514, %r508;
	mov.b32 	%r515, %r508;
	mov.b32 	%r516, %r508;
	mov.b32 	%r517, %r508;
	mov.b32 	%r518, %r508;
	mov.b32 	%r519, %r508;
	mov.b32 	%r520, %r508;
	mov.b32 	%r521, %r508;
	mov.b32 	%r522, %r508;
	mov.b32 	%r523, %r508;
	.loc	1 63 27                         // rmsnorm.py:63:27
	@%p1 bra 	$L__BB0_7;
// %bb.5:                               // %.lr.ph6.preheader
	.loc	1 0 27                          // rmsnorm.py:0:27
	or.b32 	%r6, %r5, 2048;
	mov.b32 	%r508, 0f00000000;
	mov.b32 	%r256, 0;
	mov.b32 	%r491, %r256;
	mov.b32 	%r509, %r508;
	mov.b32 	%r510, %r508;
	mov.b32 	%r511, %r508;
	mov.b32 	%r512, %r508;
	mov.b32 	%r513, %r508;
	mov.b32 	%r514, %r508;
	mov.b32 	%r515, %r508;
	mov.b32 	%r516, %r508;
	mov.b32 	%r517, %r508;
	mov.b32 	%r518, %r508;
	mov.b32 	%r519, %r508;
	mov.b32 	%r520, %r508;
	mov.b32 	%r521, %r508;
	mov.b32 	%r522, %r508;
	mov.b32 	%r523, %r508;
$L__BB0_6:                              // %.lr.ph6
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 64 21                         // rmsnorm.py:64:21
	or.b32 	%r268, %r491, %r6;
	or.b32 	%r269, %r491, %r5;
	.loc	1 65 24                         // rmsnorm.py:65:24
	mul.wide.s32 	%rd19, %r269, 2;
	add.s64 	%rd17, %rd2, %rd19;
	mul.wide.s32 	%rd20, %r268, 2;
	add.s64 	%rd18, %rd2, %rd20;
	.loc	1 65 42                         // rmsnorm.py:65:42
	setp.lt.s32 	%p10, %r268, %r124;
	setp.lt.s32 	%p9, %r269, %r124;
	.loc	1 65 20                         // rmsnorm.py:65:20
	// begin inline asm
	mov.u32 %r252, %r256;
	mov.u32 %r253, %r256;
	mov.u32 %r254, %r256;
	mov.u32 %r255, %r256;
	@%p9 ld.global.v4.b32 { %r252, %r253, %r254, %r255 }, [ %rd17 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r260, %r256;
	mov.u32 %r261, %r256;
	mov.u32 %r262, %r256;
	mov.u32 %r263, %r256;
	@%p10 ld.global.v4.b32 { %r260, %r261, %r262, %r263 }, [ %rd18 + 0 ];
	// end inline asm
	.loc	1 65 58                         // rmsnorm.py:65:58
	mov.b32 	{%rs17, %rs18}, %r263;
	cvt.f32.f16 	%r270, %rs18;
	cvt.f32.f16 	%r271, %rs17;
	mov.b32 	{%rs19, %rs20}, %r262;
	cvt.f32.f16 	%r272, %rs20;
	cvt.f32.f16 	%r273, %rs19;
	mov.b32 	{%rs21, %rs22}, %r261;
	cvt.f32.f16 	%r274, %rs22;
	cvt.f32.f16 	%r275, %rs21;
	mov.b32 	{%rs23, %rs24}, %r260;
	cvt.f32.f16 	%r276, %rs24;
	cvt.f32.f16 	%r277, %rs23;
	mov.b32 	{%rs25, %rs26}, %r255;
	cvt.f32.f16 	%r278, %rs26;
	mov.b32 	{%rs27, %rs28}, %r252;
	cvt.f32.f16 	%r279, %rs27;
	cvt.f32.f16 	%r280, %rs28;
	mov.b32 	{%rs29, %rs30}, %r253;
	cvt.f32.f16 	%r281, %rs29;
	cvt.f32.f16 	%r282, %rs30;
	mov.b32 	{%rs31, %rs32}, %r254;
	cvt.f32.f16 	%r283, %rs31;
	cvt.f32.f16 	%r284, %rs32;
	cvt.f32.f16 	%r285, %rs25;
	.loc	1 66 35                         // rmsnorm.py:66:35
	sub.f32 	%r286, %r285, %r46;
	sub.f32 	%r287, %r284, %r46;
	sub.f32 	%r288, %r283, %r46;
	sub.f32 	%r289, %r282, %r46;
	sub.f32 	%r290, %r281, %r46;
	sub.f32 	%r291, %r280, %r46;
	sub.f32 	%r292, %r279, %r46;
	sub.f32 	%r293, %r278, %r46;
	sub.f32 	%r294, %r277, %r46;
	sub.f32 	%r295, %r276, %r46;
	sub.f32 	%r296, %r275, %r46;
	sub.f32 	%r297, %r274, %r46;
	sub.f32 	%r298, %r273, %r46;
	sub.f32 	%r299, %r272, %r46;
	sub.f32 	%r300, %r271, %r46;
	sub.f32 	%r301, %r270, %r46;
	.loc	1 66 41                         // rmsnorm.py:66:41
	selp.f32 	%r302, %r301, 0f00000000, %p10;
	selp.f32 	%r303, %r300, 0f00000000, %p10;
	selp.f32 	%r304, %r299, 0f00000000, %p10;
	selp.f32 	%r305, %r298, 0f00000000, %p10;
	selp.f32 	%r306, %r297, 0f00000000, %p10;
	selp.f32 	%r307, %r296, 0f00000000, %p10;
	selp.f32 	%r308, %r295, 0f00000000, %p10;
	selp.f32 	%r309, %r294, 0f00000000, %p10;
	selp.f32 	%r310, %r293, 0f00000000, %p9;
	selp.f32 	%r311, %r292, 0f00000000, %p9;
	selp.f32 	%r312, %r291, 0f00000000, %p9;
	selp.f32 	%r313, %r290, 0f00000000, %p9;
	selp.f32 	%r314, %r289, 0f00000000, %p9;
	selp.f32 	%r315, %r288, 0f00000000, %p9;
	selp.f32 	%r316, %r287, 0f00000000, %p9;
	selp.f32 	%r317, %r286, 0f00000000, %p9;
	.loc	1 67 16                         // rmsnorm.py:67:16
	fma.rn.f32 	%r514, %r317, %r317, %r514;
	fma.rn.f32 	%r513, %r316, %r316, %r513;
	fma.rn.f32 	%r512, %r315, %r315, %r512;
	fma.rn.f32 	%r511, %r314, %r314, %r511;
	fma.rn.f32 	%r510, %r313, %r313, %r510;
	fma.rn.f32 	%r509, %r312, %r312, %r509;
	fma.rn.f32 	%r508, %r311, %r311, %r508;
	fma.rn.f32 	%r515, %r310, %r310, %r515;
	fma.rn.f32 	%r516, %r309, %r309, %r516;
	fma.rn.f32 	%r517, %r308, %r308, %r517;
	fma.rn.f32 	%r518, %r307, %r307, %r518;
	fma.rn.f32 	%r519, %r306, %r306, %r519;
	fma.rn.f32 	%r520, %r305, %r305, %r520;
	fma.rn.f32 	%r521, %r304, %r304, %r521;
	fma.rn.f32 	%r522, %r303, %r303, %r522;
	fma.rn.f32 	%r523, %r302, %r302, %r523;
	.loc	1 63 27                         // rmsnorm.py:63:27
	add.s32 	%r491, %r491, 4096;
	setp.lt.s32 	%p11, %r491, %r124;
	@%p11 bra 	$L__BB0_6;
$L__BB0_7:                              // %._crit_edge7
$L__tmp3:
	.loc	2 290 36                        // standard.py:290:36 @[ rmsnorm.py:68:17 ]
	bar.sync 	0;
	.loc	2 260 15                        // standard.py:260:15 @[ rmsnorm.py:68:17 ]
	add.f32 	%r324, %r508, %r509;
	add.f32 	%r325, %r510, %r324;
	add.f32 	%r326, %r511, %r325;
	add.f32 	%r327, %r512, %r326;
	add.f32 	%r328, %r513, %r327;
	add.f32 	%r329, %r514, %r328;
	add.f32 	%r330, %r515, %r329;
	add.f32 	%r331, %r516, %r330;
	add.f32 	%r332, %r517, %r331;
	add.f32 	%r333, %r518, %r332;
	add.f32 	%r334, %r519, %r333;
	add.f32 	%r335, %r520, %r334;
	add.f32 	%r336, %r521, %r335;
	add.f32 	%r337, %r522, %r336;
	add.f32 	%r338, %r523, %r337;
	.loc	2 290 36                        // standard.py:290:36 @[ rmsnorm.py:68:17 ]
	shfl.sync.bfly.b32 	%r339, %r338, 16, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ rmsnorm.py:68:17 ]
	add.f32 	%r340, %r338, %r339;
	.loc	2 290 36                        // standard.py:290:36 @[ rmsnorm.py:68:17 ]
	shfl.sync.bfly.b32 	%r341, %r340, 8, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ rmsnorm.py:68:17 ]
	add.f32 	%r342, %r340, %r341;
	.loc	2 290 36                        // standard.py:290:36 @[ rmsnorm.py:68:17 ]
	shfl.sync.bfly.b32 	%r343, %r342, 4, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ rmsnorm.py:68:17 ]
	add.f32 	%r344, %r342, %r343;
	.loc	2 290 36                        // standard.py:290:36 @[ rmsnorm.py:68:17 ]
	shfl.sync.bfly.b32 	%r345, %r344, 2, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ rmsnorm.py:68:17 ]
	add.f32 	%r346, %r344, %r345;
	.loc	2 290 36                        // standard.py:290:36 @[ rmsnorm.py:68:17 ]
	shfl.sync.bfly.b32 	%r347, %r346, 1, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ rmsnorm.py:68:17 ]
	add.f32 	%r319, %r346, %r347;
	.loc	2 290 36                        // standard.py:290:36 @[ rmsnorm.py:68:17 ]
	// begin inline asm
	@%p5 st.shared.b32 [ %r318 + 0 ], %r319;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p6 ld.shared.b32 %r320, [ %r322 + 0 ];
	// end inline asm
	shfl.sync.bfly.b32 	%r348, %r320, 4, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ rmsnorm.py:68:17 ]
	add.f32 	%r349, %r320, %r348;
	.loc	2 290 36                        // standard.py:290:36 @[ rmsnorm.py:68:17 ]
	shfl.sync.bfly.b32 	%r350, %r349, 2, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ rmsnorm.py:68:17 ]
	add.f32 	%r351, %r349, %r350;
	.loc	2 290 36                        // standard.py:290:36 @[ rmsnorm.py:68:17 ]
	shfl.sync.bfly.b32 	%r352, %r351, 1, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ rmsnorm.py:68:17 ]
	add.f32 	%r323, %r351, %r352;
	.loc	2 290 36                        // standard.py:290:36 @[ rmsnorm.py:68:17 ]
	// begin inline asm
	@%p14 st.shared.b32 [ %r322 + 0 ], %r323;
	// end inline asm
	bar.sync 	0;
	ld.shared.b32 	%r353, [global_smem];
$L__tmp4:
	.loc	1 68 33                         // rmsnorm.py:68:33
	div.full.f32 	%r354, %r353, %r45;
	.loc	1 69 29                         // rmsnorm.py:69:29
	add.f32 	%r355, %r354, 0f3089705F;
	.loc	1 69 23                         // rmsnorm.py:69:23
	sqrt.approx.ftz.f32 	%r356, %r355;
	mov.b32 	%r357, 0f3F800000;
	.loc	1 69 15                         // rmsnorm.py:69:15
	div.full.f32 	%r117, %r357, %r356;
	.loc	1 71 20                         // rmsnorm.py:71:20
	mul.wide.u32 	%rd23, %r1, 2;
	add.s64 	%rd21, %rd4, %rd23;
	.loc	1 71 25                         // rmsnorm.py:71:25
	cvt.rn.f16.f32 	%rs33, %r46;
	// begin inline asm
	@%p14 st.global.b16 [ %rd21 + 0 ], { %rs33 };
	// end inline asm
	.loc	1 72 20                         // rmsnorm.py:72:20
	add.s64 	%rd22, %rd5, %rd23;
	.loc	1 72 25                         // rmsnorm.py:72:25
	cvt.rn.f16.f32 	%rs34, %r117;
	// begin inline asm
	@%p14 st.global.b16 [ %rd22 + 0 ], { %rs34 };
	// end inline asm
	.loc	1 74 27                         // rmsnorm.py:74:27
	@%p1 bra 	$L__BB0_10;
// %bb.8:                               // %.lr.ph9.preheader
	.loc	1 0 27                          // rmsnorm.py:0:27
	ld.param.b64 	%rd7, [_rms_norm_fwd_fused_param_1];
	ld.param.b64 	%rd3, [_rms_norm_fwd_fused_param_2];
	add.s64 	%rd1, %rd7, %rd8;
	mov.b32 	%r371, 0;
	mov.b32 	%r524, %r371;
$L__BB0_9:                              // %.lr.ph9
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 75 21                         // rmsnorm.py:75:21
	add.s32 	%r391, %r5, %r524;
	.loc	1 76 22                         // rmsnorm.py:76:22
	add.s32 	%r392, %r391, 2048;
	setp.lt.s32 	%p18, %r391, %r124;
	setp.lt.s32 	%p19, %r392, %r124;
	.loc	1 77 24                         // rmsnorm.py:77:24
	mul.wide.s32 	%rd30, %r391, 2;
	add.s64 	%rd24, %rd3, %rd30;
	cvt.s64.s32 	%rd31, %r524;
	add.s64 	%rd33, %rd31, %rd38;
	shl.b64 	%rd34, %rd33, 1;
	add.s64 	%rd35, %rd3, %rd34;
	add.s64 	%rd25, %rd35, 4096;
	.loc	1 77 20                         // rmsnorm.py:77:20
	// begin inline asm
	mov.u32 %r359, 0x0;
	mov.u32 %r360, 0x0;
	mov.u32 %r361, 0x0;
	mov.u32 %r362, 0x0;
	@%p18 ld.global.v4.b32 { %r359, %r360, %r361, %r362 }, [ %rd24 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r363, 0x0;
	mov.u32 %r364, 0x0;
	mov.u32 %r365, 0x0;
	mov.u32 %r366, 0x0;
	@%p19 ld.global.v4.b32 { %r363, %r364, %r365, %r366 }, [ %rd25 + 0 ];
	// end inline asm
	.loc	1 78 24                         // rmsnorm.py:78:24
	add.s64 	%rd26, %rd2, %rd30;
	add.s64 	%rd36, %rd2, %rd34;
	add.s64 	%rd27, %rd36, 4096;
	.loc	1 78 20                         // rmsnorm.py:78:20
	// begin inline asm
	mov.u32 %r367, %r371;
	mov.u32 %r368, %r371;
	mov.u32 %r369, %r371;
	mov.u32 %r370, %r371;
	@%p18 ld.global.v4.b32 { %r367, %r368, %r369, %r370 }, [ %rd26 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r375, %r371;
	mov.u32 %r376, %r371;
	mov.u32 %r377, %r371;
	mov.u32 %r378, %r371;
	@%p19 ld.global.v4.b32 { %r375, %r376, %r377, %r378 }, [ %rd27 + 0 ];
	// end inline asm
	.loc	1 82 21                         // rmsnorm.py:82:21
	add.s64 	%rd28, %rd1, %rd30;
	add.s64 	%rd37, %rd1, %rd34;
	add.s64 	%rd29, %rd37, 4096;
	.loc	1 78 54                         // rmsnorm.py:78:54
	mov.b32 	{%rs35, %rs36}, %r367;
	cvt.f32.f16 	%r393, %rs36;
	cvt.f32.f16 	%r394, %rs35;
	.loc	1 79 21                         // rmsnorm.py:79:21
	sub.f32 	%r395, %r394, %r46;
	sub.f32 	%r396, %r393, %r46;
	.loc	1 79 29                         // rmsnorm.py:79:29
	mul.f32 	%r397, %r117, %r396;
	mul.f32 	%r398, %r117, %r395;
	.loc	1 80 20                         // rmsnorm.py:80:20
	mov.b32 	{%rs37, %rs38}, %r359;
	cvt.f32.f16 	%r399, %rs38;
	cvt.f32.f16 	%r400, %rs37;
	mul.f32 	%r401, %r398, %r400;
	mul.f32 	%r402, %r397, %r399;
	.loc	1 82 27                         // rmsnorm.py:82:27
	cvt.rn.f16x2.f32 	%r383, %r402, %r401;
	.loc	1 78 54                         // rmsnorm.py:78:54
	mov.b32 	{%rs39, %rs40}, %r368;
	cvt.f32.f16 	%r403, %rs40;
	cvt.f32.f16 	%r404, %rs39;
	.loc	1 79 21                         // rmsnorm.py:79:21
	sub.f32 	%r405, %r404, %r46;
	sub.f32 	%r406, %r403, %r46;
	.loc	1 79 29                         // rmsnorm.py:79:29
	mul.f32 	%r407, %r117, %r406;
	mul.f32 	%r408, %r117, %r405;
	.loc	1 80 20                         // rmsnorm.py:80:20
	mov.b32 	{%rs41, %rs42}, %r360;
	cvt.f32.f16 	%r409, %rs42;
	cvt.f32.f16 	%r410, %rs41;
	mul.f32 	%r411, %r408, %r410;
	mul.f32 	%r412, %r407, %r409;
	.loc	1 82 27                         // rmsnorm.py:82:27
	cvt.rn.f16x2.f32 	%r384, %r412, %r411;
	.loc	1 78 54                         // rmsnorm.py:78:54
	mov.b32 	{%rs43, %rs44}, %r369;
	cvt.f32.f16 	%r413, %rs44;
	cvt.f32.f16 	%r414, %rs43;
	.loc	1 79 21                         // rmsnorm.py:79:21
	sub.f32 	%r415, %r414, %r46;
	sub.f32 	%r416, %r413, %r46;
	.loc	1 79 29                         // rmsnorm.py:79:29
	mul.f32 	%r417, %r117, %r416;
	mul.f32 	%r418, %r117, %r415;
	.loc	1 80 20                         // rmsnorm.py:80:20
	mov.b32 	{%rs45, %rs46}, %r361;
	cvt.f32.f16 	%r419, %rs46;
	cvt.f32.f16 	%r420, %rs45;
	mul.f32 	%r421, %r418, %r420;
	mul.f32 	%r422, %r417, %r419;
	.loc	1 82 27                         // rmsnorm.py:82:27
	cvt.rn.f16x2.f32 	%r385, %r422, %r421;
	.loc	1 78 54                         // rmsnorm.py:78:54
	mov.b32 	{%rs47, %rs48}, %r370;
	cvt.f32.f16 	%r423, %rs48;
	cvt.f32.f16 	%r424, %rs47;
	.loc	1 79 21                         // rmsnorm.py:79:21
	sub.f32 	%r425, %r424, %r46;
	sub.f32 	%r426, %r423, %r46;
	.loc	1 79 29                         // rmsnorm.py:79:29
	mul.f32 	%r427, %r117, %r426;
	mul.f32 	%r428, %r117, %r425;
	.loc	1 80 20                         // rmsnorm.py:80:20
	mov.b32 	{%rs49, %rs50}, %r362;
	cvt.f32.f16 	%r429, %rs50;
	cvt.f32.f16 	%r430, %rs49;
	mul.f32 	%r431, %r428, %r430;
	mul.f32 	%r432, %r427, %r429;
	.loc	1 82 27                         // rmsnorm.py:82:27
	cvt.rn.f16x2.f32 	%r386, %r432, %r431;
	.loc	1 78 54                         // rmsnorm.py:78:54
	mov.b32 	{%rs51, %rs52}, %r375;
	cvt.f32.f16 	%r433, %rs52;
	cvt.f32.f16 	%r434, %rs51;
	.loc	1 79 21                         // rmsnorm.py:79:21
	sub.f32 	%r435, %r434, %r46;
	sub.f32 	%r436, %r433, %r46;
	.loc	1 79 29                         // rmsnorm.py:79:29
	mul.f32 	%r437, %r117, %r436;
	mul.f32 	%r438, %r117, %r435;
	.loc	1 80 20                         // rmsnorm.py:80:20
	mov.b32 	{%rs53, %rs54}, %r363;
	cvt.f32.f16 	%r439, %rs54;
	cvt.f32.f16 	%r440, %rs53;
	mul.f32 	%r441, %r438, %r440;
	mul.f32 	%r442, %r437, %r439;
	.loc	1 82 27                         // rmsnorm.py:82:27
	cvt.rn.f16x2.f32 	%r387, %r442, %r441;
	.loc	1 78 54                         // rmsnorm.py:78:54
	mov.b32 	{%rs55, %rs56}, %r376;
	cvt.f32.f16 	%r443, %rs56;
	cvt.f32.f16 	%r444, %rs55;
	.loc	1 79 21                         // rmsnorm.py:79:21
	sub.f32 	%r445, %r444, %r46;
	sub.f32 	%r446, %r443, %r46;
	.loc	1 79 29                         // rmsnorm.py:79:29
	mul.f32 	%r447, %r117, %r446;
	mul.f32 	%r448, %r117, %r445;
	.loc	1 80 20                         // rmsnorm.py:80:20
	mov.b32 	{%rs57, %rs58}, %r364;
	cvt.f32.f16 	%r449, %rs58;
	cvt.f32.f16 	%r450, %rs57;
	mul.f32 	%r451, %r448, %r450;
	mul.f32 	%r452, %r447, %r449;
	.loc	1 82 27                         // rmsnorm.py:82:27
	cvt.rn.f16x2.f32 	%r388, %r452, %r451;
	.loc	1 78 54                         // rmsnorm.py:78:54
	mov.b32 	{%rs59, %rs60}, %r377;
	cvt.f32.f16 	%r453, %rs60;
	cvt.f32.f16 	%r454, %rs59;
	.loc	1 79 21                         // rmsnorm.py:79:21
	sub.f32 	%r455, %r454, %r46;
	sub.f32 	%r456, %r453, %r46;
	.loc	1 79 29                         // rmsnorm.py:79:29
	mul.f32 	%r457, %r117, %r456;
	mul.f32 	%r458, %r117, %r455;
	.loc	1 80 20                         // rmsnorm.py:80:20
	mov.b32 	{%rs61, %rs62}, %r365;
	cvt.f32.f16 	%r459, %rs62;
	cvt.f32.f16 	%r460, %rs61;
	mul.f32 	%r461, %r458, %r460;
	mul.f32 	%r462, %r457, %r459;
	.loc	1 82 27                         // rmsnorm.py:82:27
	cvt.rn.f16x2.f32 	%r389, %r462, %r461;
	.loc	1 78 54                         // rmsnorm.py:78:54
	mov.b32 	{%rs63, %rs64}, %r378;
	cvt.f32.f16 	%r463, %rs64;
	cvt.f32.f16 	%r464, %rs63;
	.loc	1 79 21                         // rmsnorm.py:79:21
	sub.f32 	%r465, %r464, %r46;
	sub.f32 	%r466, %r463, %r46;
	.loc	1 79 29                         // rmsnorm.py:79:29
	mul.f32 	%r467, %r117, %r466;
	mul.f32 	%r468, %r117, %r465;
	.loc	1 80 20                         // rmsnorm.py:80:20
	mov.b32 	{%rs65, %rs66}, %r366;
	cvt.f32.f16 	%r469, %rs66;
	cvt.f32.f16 	%r470, %rs65;
	mul.f32 	%r471, %r468, %r470;
	mul.f32 	%r472, %r467, %r469;
	.loc	1 82 27                         // rmsnorm.py:82:27
	cvt.rn.f16x2.f32 	%r390, %r472, %r471;
	// begin inline asm
	@%p18 st.global.v4.b32 [ %rd28 + 0 ], { %r383, %r384, %r385, %r386 };
	// end inline asm
	// begin inline asm
	@%p19 st.global.v4.b32 [ %rd29 + 0 ], { %r387, %r388, %r389, %r390 };
	// end inline asm
	.loc	1 74 27                         // rmsnorm.py:74:27
	add.s32 	%r524, %r524, 4096;
	setp.lt.s32 	%p24, %r524, %r124;
	@%p24 bra 	$L__BB0_9;
$L__BB0_10:                             // %._crit_edge10
	.loc	1 74 4                          // rmsnorm.py:74:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/ubuntu/anjiang/PTX_dataset/triton_ptx/rmsnorm.py"
	.file	2 "/mnt/efs/anjiang/miniconda3/envs/ptx/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 169                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa2 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 114                                 // DW_AT_name
.b8 109
.b8 115
.b8 110
.b8 111
.b8 114
.b8 109
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 117
.b8 98
.b8 117
.b8 110
.b8 116
.b8 117
.b8 47
.b8 97
.b8 110
.b8 106
.b8 105
.b8 97
.b8 110
.b8 103
.b8 47
.b8 80
.b8 84
.b8 88
.b8 95
.b8 100
.b8 97
.b8 116
.b8 97
.b8 115
.b8 101
.b8 116
.b8 47
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 116
.b8 120
.b8 0
.b8 2                                   // Abbrev [2] 0x50:0x16 DW_TAG_subprogram
.b8 95                                  // DW_AT_name
.b8 114
.b8 109
.b8 115
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 102
.b8 119
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x66:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 80                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x7b:0x18 DW_TAG_inlined_subroutine
.b32 80                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 60                                  // DW_AT_call_line
.b8 18                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x93:0x18 DW_TAG_inlined_subroutine
.b32 80                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 68                                  // DW_AT_call_line
.b8 17                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
