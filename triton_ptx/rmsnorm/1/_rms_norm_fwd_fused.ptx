//
// Generated by LLVM NVPTX Back-End
//

.version 8.7
.target sm_80
.address_size 64

	// .globl	_rms_norm_fwd_fused     // -- Begin function _rms_norm_fwd_fused
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @_rms_norm_fwd_fused
.visible .entry _rms_norm_fwd_fused(
	.param .u64 .ptr .global .align 1 _rms_norm_fwd_fused_param_0,
	.param .u64 .ptr .global .align 1 _rms_norm_fwd_fused_param_1,
	.param .u64 .ptr .global .align 1 _rms_norm_fwd_fused_param_2,
	.param .u64 .ptr .global .align 1 _rms_norm_fwd_fused_param_3,
	.param .u64 .ptr .global .align 1 _rms_norm_fwd_fused_param_4,
	.param .u32 _rms_norm_fwd_fused_param_5,
	.param .u32 _rms_norm_fwd_fused_param_6,
	.param .u64 .ptr .global .align 1 _rms_norm_fwd_fused_param_7
)
.reqntid 128
{
	.reg .pred 	%p<35>;
	.reg .b16 	%rs<131>;
	.reg .b32 	%r<965>;
	.reg .b64 	%rd<51>;
	.loc	1 39 0                          // rmsnorm.py:39:0
$L__func_begin0:
	.loc	1 39 0                          // rmsnorm.py:39:0

// %bb.0:
	ld.param.b32 	%r226, [_rms_norm_fwd_fused_param_6];
	ld.param.b64 	%rd6, [_rms_norm_fwd_fused_param_0];
$L__tmp0:
	.loc	1 50 24                         // rmsnorm.py:50:24
	mov.u32 	%r1, %ctaid.x;
	ld.param.b32 	%r228, [_rms_norm_fwd_fused_param_5];
	.loc	1 51 15                         // rmsnorm.py:51:15
	mul.lo.s32 	%r229, %r228, %r1;
	.loc	1 51 9                          // rmsnorm.py:51:9
	mul.wide.s32 	%rd8, %r229, 2;
	.loc	1 52 9                          // rmsnorm.py:52:9
	add.s64 	%rd2, %rd6, %rd8;
	.loc	1 57 34                         // rmsnorm.py:57:34
	mov.u32 	%r2, %tid.x;
	and.b32 	%r3, %r2, 31;
	shr.u32 	%r4, %r2, 5;
	shl.b32 	%r230, %r2, 3;
	and.b32 	%r5, %r230, 1016;
	.loc	1 56 27                         // rmsnorm.py:56:27
	setp.lt.s32 	%p1, %r226, 1;
	mov.b32 	%r932, 0f00000000;
	cvt.u64.u32 	%rd50, %r5;
	mov.b32 	%r898, %r932;
	@%p1 bra 	$L__BB0_4;
// %bb.1:                               // %.lr.ph.preheader
	.loc	1 0 27                          // rmsnorm.py:0:27
	mov.b32 	%r866, 0f00000000;
	mov.b32 	%r268, 0;
	mov.b32 	%r865, %r268;
	mov.b32 	%r867, %r866;
	mov.b32 	%r868, %r866;
	mov.b32 	%r869, %r866;
	mov.b32 	%r870, %r866;
	mov.b32 	%r871, %r866;
	mov.b32 	%r872, %r866;
	mov.b32 	%r873, %r866;
	mov.b32 	%r874, %r866;
	mov.b32 	%r875, %r866;
	mov.b32 	%r876, %r866;
	mov.b32 	%r877, %r866;
	mov.b32 	%r878, %r866;
	mov.b32 	%r879, %r866;
	mov.b32 	%r880, %r866;
	mov.b32 	%r881, %r866;
	mov.b32 	%r882, %r866;
	mov.b32 	%r883, %r866;
	mov.b32 	%r884, %r866;
	mov.b32 	%r885, %r866;
	mov.b32 	%r886, %r866;
	mov.b32 	%r887, %r866;
	mov.b32 	%r888, %r866;
	mov.b32 	%r889, %r866;
	mov.b32 	%r890, %r866;
	mov.b32 	%r891, %r866;
	mov.b32 	%r892, %r866;
	mov.b32 	%r893, %r866;
	mov.b32 	%r894, %r866;
	mov.b32 	%r895, %r866;
	mov.b32 	%r896, %r866;
	mov.b32 	%r897, %r866;
$L__BB0_2:                              // %.lr.ph
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 57 21                         // rmsnorm.py:57:21
	add.s32 	%r296, %r5, %r865;
	add.s32 	%r297, %r296, 1024;
	add.s32 	%r298, %r296, 2048;
	.loc	1 58 42                         // rmsnorm.py:58:42
	add.s32 	%r299, %r296, 3072;
	setp.lt.s32 	%p2, %r296, %r226;
	setp.lt.s32 	%p3, %r297, %r226;
	setp.lt.s32 	%p4, %r298, %r226;
	setp.lt.s32 	%p5, %r299, %r226;
	.loc	1 58 24                         // rmsnorm.py:58:24
	mul.wide.s32 	%rd13, %r296, 2;
	add.s64 	%rd9, %rd2, %rd13;
	cvt.s64.s32 	%rd14, %r865;
	add.s64 	%rd16, %rd14, %rd50;
	shl.b64 	%rd17, %rd16, 1;
	add.s64 	%rd18, %rd2, %rd17;
	add.s64 	%rd10, %rd18, 2048;
	add.s64 	%rd11, %rd18, 4096;
	add.s64 	%rd12, %rd18, 6144;
	.loc	1 58 20                         // rmsnorm.py:58:20
	// begin inline asm
	mov.u32 %r264, %r268;
	mov.u32 %r265, %r268;
	mov.u32 %r266, %r268;
	mov.u32 %r267, %r268;
	@%p2 ld.global.v4.b32 { %r264, %r265, %r266, %r267 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r272, %r268;
	mov.u32 %r273, %r268;
	mov.u32 %r274, %r268;
	mov.u32 %r275, %r268;
	@%p3 ld.global.v4.b32 { %r272, %r273, %r274, %r275 }, [ %rd10 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r280, %r268;
	mov.u32 %r281, %r268;
	mov.u32 %r282, %r268;
	mov.u32 %r283, %r268;
	@%p4 ld.global.v4.b32 { %r280, %r281, %r282, %r283 }, [ %rd11 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r288, %r268;
	mov.u32 %r289, %r268;
	mov.u32 %r290, %r268;
	mov.u32 %r291, %r268;
	@%p5 ld.global.v4.b32 { %r288, %r289, %r290, %r291 }, [ %rd12 + 0 ];
	// end inline asm
	.loc	1 58 58                         // rmsnorm.py:58:58
	mov.b32 	{%rs1, %rs2}, %r291;
	cvt.f32.f16 	%r300, %rs2;
	cvt.f32.f16 	%r301, %rs1;
	mov.b32 	{%rs3, %rs4}, %r290;
	cvt.f32.f16 	%r302, %rs4;
	cvt.f32.f16 	%r303, %rs3;
	mov.b32 	{%rs5, %rs6}, %r289;
	cvt.f32.f16 	%r304, %rs6;
	cvt.f32.f16 	%r305, %rs5;
	mov.b32 	{%rs7, %rs8}, %r288;
	cvt.f32.f16 	%r306, %rs8;
	cvt.f32.f16 	%r307, %rs7;
	mov.b32 	{%rs9, %rs10}, %r283;
	cvt.f32.f16 	%r308, %rs10;
	cvt.f32.f16 	%r309, %rs9;
	mov.b32 	{%rs11, %rs12}, %r282;
	cvt.f32.f16 	%r310, %rs12;
	cvt.f32.f16 	%r311, %rs11;
	mov.b32 	{%rs13, %rs14}, %r281;
	cvt.f32.f16 	%r312, %rs14;
	cvt.f32.f16 	%r313, %rs13;
	mov.b32 	{%rs15, %rs16}, %r280;
	cvt.f32.f16 	%r314, %rs16;
	cvt.f32.f16 	%r315, %rs15;
	mov.b32 	{%rs17, %rs18}, %r275;
	cvt.f32.f16 	%r316, %rs18;
	cvt.f32.f16 	%r317, %rs17;
	mov.b32 	{%rs19, %rs20}, %r274;
	cvt.f32.f16 	%r318, %rs20;
	cvt.f32.f16 	%r319, %rs19;
	mov.b32 	{%rs21, %rs22}, %r273;
	cvt.f32.f16 	%r320, %rs22;
	cvt.f32.f16 	%r321, %rs21;
	mov.b32 	{%rs23, %rs24}, %r272;
	cvt.f32.f16 	%r322, %rs24;
	cvt.f32.f16 	%r323, %rs23;
	mov.b32 	{%rs25, %rs26}, %r267;
	cvt.f32.f16 	%r324, %rs26;
	mov.b32 	{%rs27, %rs28}, %r264;
	cvt.f32.f16 	%r325, %rs27;
	cvt.f32.f16 	%r326, %rs28;
	mov.b32 	{%rs29, %rs30}, %r265;
	cvt.f32.f16 	%r327, %rs29;
	cvt.f32.f16 	%r328, %rs30;
	mov.b32 	{%rs31, %rs32}, %r266;
	cvt.f32.f16 	%r329, %rs31;
	cvt.f32.f16 	%r330, %rs32;
	cvt.f32.f16 	%r331, %rs25;
	.loc	1 59 17                         // rmsnorm.py:59:17
	add.f32 	%r872, %r872, %r331;
	add.f32 	%r871, %r871, %r330;
	add.f32 	%r870, %r870, %r329;
	add.f32 	%r869, %r869, %r328;
	add.f32 	%r868, %r868, %r327;
	add.f32 	%r867, %r867, %r326;
	add.f32 	%r866, %r866, %r325;
	add.f32 	%r873, %r873, %r324;
	add.f32 	%r874, %r874, %r323;
	add.f32 	%r875, %r875, %r322;
	add.f32 	%r876, %r876, %r321;
	add.f32 	%r877, %r877, %r320;
	add.f32 	%r878, %r878, %r319;
	add.f32 	%r879, %r879, %r318;
	add.f32 	%r880, %r880, %r317;
	add.f32 	%r881, %r881, %r316;
	add.f32 	%r882, %r882, %r315;
	add.f32 	%r883, %r883, %r314;
	add.f32 	%r884, %r884, %r313;
	add.f32 	%r885, %r885, %r312;
	add.f32 	%r886, %r886, %r311;
	add.f32 	%r887, %r887, %r310;
	add.f32 	%r888, %r888, %r309;
	add.f32 	%r889, %r889, %r308;
	add.f32 	%r890, %r890, %r307;
	add.f32 	%r891, %r891, %r306;
	add.f32 	%r892, %r892, %r305;
	add.f32 	%r893, %r893, %r304;
	add.f32 	%r894, %r894, %r303;
	add.f32 	%r895, %r895, %r302;
	add.f32 	%r896, %r896, %r301;
	add.f32 	%r897, %r897, %r300;
	.loc	1 56 27                         // rmsnorm.py:56:27
	add.s32 	%r865, %r865, 4096;
	setp.lt.s32 	%p6, %r865, %r226;
	@%p6 bra 	$L__BB0_2;
// %bb.3:                               // %._crit_edge.loopexit
$L__tmp1:
	.loc	2 260 15                        // standard.py:260:15 @[ rmsnorm.py:60:18 ]
	add.f32 	%r332, %r866, %r867;
	add.f32 	%r333, %r868, %r332;
	add.f32 	%r334, %r869, %r333;
	add.f32 	%r335, %r870, %r334;
	add.f32 	%r336, %r871, %r335;
	add.f32 	%r337, %r872, %r336;
	add.f32 	%r338, %r873, %r337;
	add.f32 	%r339, %r874, %r338;
	add.f32 	%r340, %r875, %r339;
	add.f32 	%r341, %r876, %r340;
	add.f32 	%r342, %r877, %r341;
	add.f32 	%r343, %r878, %r342;
	add.f32 	%r344, %r879, %r343;
	add.f32 	%r345, %r880, %r344;
	add.f32 	%r346, %r881, %r345;
	add.f32 	%r347, %r882, %r346;
	add.f32 	%r348, %r883, %r347;
	add.f32 	%r349, %r884, %r348;
	add.f32 	%r350, %r885, %r349;
	add.f32 	%r351, %r886, %r350;
	add.f32 	%r352, %r887, %r351;
	add.f32 	%r353, %r888, %r352;
	add.f32 	%r354, %r889, %r353;
	add.f32 	%r355, %r890, %r354;
	add.f32 	%r356, %r891, %r355;
	add.f32 	%r357, %r892, %r356;
	add.f32 	%r358, %r893, %r357;
	add.f32 	%r359, %r894, %r358;
	add.f32 	%r360, %r895, %r359;
	add.f32 	%r361, %r896, %r360;
	add.f32 	%r898, %r897, %r361;
$L__BB0_4:                              // %._crit_edge
	.loc	2 0 15                          // standard.py:0:15
	ld.param.b64 	%rd5, [_rms_norm_fwd_fused_param_4];
	ld.param.b64 	%rd4, [_rms_norm_fwd_fused_param_3];
	.loc	2 290 36                        // standard.py:290:36 @[ rmsnorm.py:60:18 ]
	shfl.sync.bfly.b32 	%r400, %r898, 16, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ rmsnorm.py:60:18 ]
	add.f32 	%r401, %r898, %r400;
	.loc	2 290 36                        // standard.py:290:36 @[ rmsnorm.py:60:18 ]
	shfl.sync.bfly.b32 	%r402, %r401, 8, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ rmsnorm.py:60:18 ]
	add.f32 	%r403, %r401, %r402;
	.loc	2 290 36                        // standard.py:290:36 @[ rmsnorm.py:60:18 ]
	shfl.sync.bfly.b32 	%r404, %r403, 4, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ rmsnorm.py:60:18 ]
	add.f32 	%r405, %r403, %r404;
	.loc	2 290 36                        // standard.py:290:36 @[ rmsnorm.py:60:18 ]
	shfl.sync.bfly.b32 	%r406, %r405, 2, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ rmsnorm.py:60:18 ]
	add.f32 	%r407, %r405, %r406;
	.loc	2 290 36                        // standard.py:290:36 @[ rmsnorm.py:60:18 ]
	shfl.sync.bfly.b32 	%r408, %r407, 1, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ rmsnorm.py:60:18 ]
	add.f32 	%r363, %r407, %r408;
	.loc	2 290 36                        // standard.py:290:36 @[ rmsnorm.py:60:18 ]
	and.b32 	%r409, %r4, 3;
	setp.eq.s32 	%p7, %r3, 0;
	shl.b32 	%r410, %r409, 2;
	mov.b32 	%r411, global_smem;
	add.s32 	%r582, %r411, %r410;
	// begin inline asm
	@%p7 st.shared.b32 [ %r582 + 0 ], %r363;
	// end inline asm
	bar.sync 	0;
	setp.lt.u32 	%p8, %r2, 4;
	shl.b32 	%r412, %r2, 2;
	add.s32 	%r586, %r411, %r412;
	// begin inline asm
	@%p8 ld.shared.b32 %r364, [ %r586 + 0 ];
	// end inline asm
	shfl.sync.bfly.b32 	%r413, %r364, 2, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ rmsnorm.py:60:18 ]
	add.f32 	%r414, %r364, %r413;
	.loc	2 290 36                        // standard.py:290:36 @[ rmsnorm.py:60:18 ]
	shfl.sync.bfly.b32 	%r415, %r414, 1, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ rmsnorm.py:60:18 ]
	add.f32 	%r367, %r414, %r415;
	.loc	2 290 36                        // standard.py:290:36 @[ rmsnorm.py:60:18 ]
	setp.eq.s32 	%p18, %r2, 0;
	// begin inline asm
	@%p18 st.shared.b32 [ %r586 + 0 ], %r367;
	// end inline asm
	bar.sync 	0;
	ld.shared.b32 	%r416, [global_smem];
$L__tmp2:
	.loc	1 60 35                         // rmsnorm.py:60:35
	cvt.rn.f32.s32 	%r79, %r226;
	div.full.f32 	%r80, %r416, %r79;
	mov.b32 	%r933, %r932;
	mov.b32 	%r934, %r932;
	mov.b32 	%r935, %r932;
	mov.b32 	%r936, %r932;
	mov.b32 	%r937, %r932;
	mov.b32 	%r938, %r932;
	mov.b32 	%r939, %r932;
	mov.b32 	%r940, %r932;
	mov.b32 	%r941, %r932;
	mov.b32 	%r942, %r932;
	mov.b32 	%r943, %r932;
	mov.b32 	%r944, %r932;
	mov.b32 	%r945, %r932;
	mov.b32 	%r946, %r932;
	mov.b32 	%r947, %r932;
	mov.b32 	%r948, %r932;
	mov.b32 	%r949, %r932;
	mov.b32 	%r950, %r932;
	mov.b32 	%r951, %r932;
	mov.b32 	%r952, %r932;
	mov.b32 	%r953, %r932;
	mov.b32 	%r954, %r932;
	mov.b32 	%r955, %r932;
	mov.b32 	%r956, %r932;
	mov.b32 	%r957, %r932;
	mov.b32 	%r958, %r932;
	mov.b32 	%r959, %r932;
	mov.b32 	%r960, %r932;
	mov.b32 	%r961, %r932;
	mov.b32 	%r962, %r932;
	mov.b32 	%r963, %r932;
	.loc	1 63 27                         // rmsnorm.py:63:27
	@%p1 bra 	$L__BB0_7;
// %bb.5:                               // %.lr.ph6.preheader
	.loc	1 0 27                          // rmsnorm.py:0:27
	or.b32 	%r6, %r5, 1024;
	or.b32 	%r7, %r5, 2048;
	or.b32 	%r8, %r5, 3072;
	mov.b32 	%r932, 0f00000000;
	mov.b32 	%r454, 0;
	mov.b32 	%r899, %r454;
	mov.b32 	%r933, %r932;
	mov.b32 	%r934, %r932;
	mov.b32 	%r935, %r932;
	mov.b32 	%r936, %r932;
	mov.b32 	%r937, %r932;
	mov.b32 	%r938, %r932;
	mov.b32 	%r939, %r932;
	mov.b32 	%r940, %r932;
	mov.b32 	%r941, %r932;
	mov.b32 	%r942, %r932;
	mov.b32 	%r943, %r932;
	mov.b32 	%r944, %r932;
	mov.b32 	%r945, %r932;
	mov.b32 	%r946, %r932;
	mov.b32 	%r947, %r932;
	mov.b32 	%r948, %r932;
	mov.b32 	%r949, %r932;
	mov.b32 	%r950, %r932;
	mov.b32 	%r951, %r932;
	mov.b32 	%r952, %r932;
	mov.b32 	%r953, %r932;
	mov.b32 	%r954, %r932;
	mov.b32 	%r955, %r932;
	mov.b32 	%r956, %r932;
	mov.b32 	%r957, %r932;
	mov.b32 	%r958, %r932;
	mov.b32 	%r959, %r932;
	mov.b32 	%r960, %r932;
	mov.b32 	%r961, %r932;
	mov.b32 	%r962, %r932;
	mov.b32 	%r963, %r932;
$L__BB0_6:                              // %.lr.ph6
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 64 21                         // rmsnorm.py:64:21
	or.b32 	%r482, %r899, %r8;
	or.b32 	%r483, %r899, %r7;
	or.b32 	%r484, %r899, %r6;
	or.b32 	%r485, %r899, %r5;
	.loc	1 65 24                         // rmsnorm.py:65:24
	mul.wide.s32 	%rd23, %r485, 2;
	add.s64 	%rd19, %rd2, %rd23;
	mul.wide.s32 	%rd24, %r484, 2;
	add.s64 	%rd20, %rd2, %rd24;
	mul.wide.s32 	%rd25, %r483, 2;
	add.s64 	%rd21, %rd2, %rd25;
	mul.wide.s32 	%rd26, %r482, 2;
	add.s64 	%rd22, %rd2, %rd26;
	.loc	1 65 42                         // rmsnorm.py:65:42
	setp.lt.s32 	%p14, %r482, %r226;
	setp.lt.s32 	%p13, %r483, %r226;
	setp.lt.s32 	%p12, %r484, %r226;
	setp.lt.s32 	%p11, %r485, %r226;
	.loc	1 65 20                         // rmsnorm.py:65:20
	// begin inline asm
	mov.u32 %r450, %r454;
	mov.u32 %r451, %r454;
	mov.u32 %r452, %r454;
	mov.u32 %r453, %r454;
	@%p11 ld.global.v4.b32 { %r450, %r451, %r452, %r453 }, [ %rd19 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r458, %r454;
	mov.u32 %r459, %r454;
	mov.u32 %r460, %r454;
	mov.u32 %r461, %r454;
	@%p12 ld.global.v4.b32 { %r458, %r459, %r460, %r461 }, [ %rd20 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r466, %r454;
	mov.u32 %r467, %r454;
	mov.u32 %r468, %r454;
	mov.u32 %r469, %r454;
	@%p13 ld.global.v4.b32 { %r466, %r467, %r468, %r469 }, [ %rd21 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r474, %r454;
	mov.u32 %r475, %r454;
	mov.u32 %r476, %r454;
	mov.u32 %r477, %r454;
	@%p14 ld.global.v4.b32 { %r474, %r475, %r476, %r477 }, [ %rd22 + 0 ];
	// end inline asm
	.loc	1 65 58                         // rmsnorm.py:65:58
	mov.b32 	{%rs33, %rs34}, %r477;
	cvt.f32.f16 	%r486, %rs34;
	cvt.f32.f16 	%r487, %rs33;
	mov.b32 	{%rs35, %rs36}, %r476;
	cvt.f32.f16 	%r488, %rs36;
	cvt.f32.f16 	%r489, %rs35;
	mov.b32 	{%rs37, %rs38}, %r475;
	cvt.f32.f16 	%r490, %rs38;
	cvt.f32.f16 	%r491, %rs37;
	mov.b32 	{%rs39, %rs40}, %r474;
	cvt.f32.f16 	%r492, %rs40;
	cvt.f32.f16 	%r493, %rs39;
	mov.b32 	{%rs41, %rs42}, %r469;
	cvt.f32.f16 	%r494, %rs42;
	cvt.f32.f16 	%r495, %rs41;
	mov.b32 	{%rs43, %rs44}, %r468;
	cvt.f32.f16 	%r496, %rs44;
	cvt.f32.f16 	%r497, %rs43;
	mov.b32 	{%rs45, %rs46}, %r467;
	cvt.f32.f16 	%r498, %rs46;
	cvt.f32.f16 	%r499, %rs45;
	mov.b32 	{%rs47, %rs48}, %r466;
	cvt.f32.f16 	%r500, %rs48;
	cvt.f32.f16 	%r501, %rs47;
	mov.b32 	{%rs49, %rs50}, %r461;
	cvt.f32.f16 	%r502, %rs50;
	cvt.f32.f16 	%r503, %rs49;
	mov.b32 	{%rs51, %rs52}, %r460;
	cvt.f32.f16 	%r504, %rs52;
	cvt.f32.f16 	%r505, %rs51;
	mov.b32 	{%rs53, %rs54}, %r459;
	cvt.f32.f16 	%r506, %rs54;
	cvt.f32.f16 	%r507, %rs53;
	mov.b32 	{%rs55, %rs56}, %r458;
	cvt.f32.f16 	%r508, %rs56;
	cvt.f32.f16 	%r509, %rs55;
	mov.b32 	{%rs57, %rs58}, %r453;
	cvt.f32.f16 	%r510, %rs58;
	mov.b32 	{%rs59, %rs60}, %r450;
	cvt.f32.f16 	%r511, %rs59;
	cvt.f32.f16 	%r512, %rs60;
	mov.b32 	{%rs61, %rs62}, %r451;
	cvt.f32.f16 	%r513, %rs61;
	cvt.f32.f16 	%r514, %rs62;
	mov.b32 	{%rs63, %rs64}, %r452;
	cvt.f32.f16 	%r515, %rs63;
	cvt.f32.f16 	%r516, %rs64;
	cvt.f32.f16 	%r517, %rs57;
	.loc	1 66 35                         // rmsnorm.py:66:35
	sub.f32 	%r518, %r517, %r80;
	sub.f32 	%r519, %r516, %r80;
	sub.f32 	%r520, %r515, %r80;
	sub.f32 	%r521, %r514, %r80;
	sub.f32 	%r522, %r513, %r80;
	sub.f32 	%r523, %r512, %r80;
	sub.f32 	%r524, %r511, %r80;
	sub.f32 	%r525, %r510, %r80;
	sub.f32 	%r526, %r509, %r80;
	sub.f32 	%r527, %r508, %r80;
	sub.f32 	%r528, %r507, %r80;
	sub.f32 	%r529, %r506, %r80;
	sub.f32 	%r530, %r505, %r80;
	sub.f32 	%r531, %r504, %r80;
	sub.f32 	%r532, %r503, %r80;
	sub.f32 	%r533, %r502, %r80;
	sub.f32 	%r534, %r501, %r80;
	sub.f32 	%r535, %r500, %r80;
	sub.f32 	%r536, %r499, %r80;
	sub.f32 	%r537, %r498, %r80;
	sub.f32 	%r538, %r497, %r80;
	sub.f32 	%r539, %r496, %r80;
	sub.f32 	%r540, %r495, %r80;
	sub.f32 	%r541, %r494, %r80;
	sub.f32 	%r542, %r493, %r80;
	sub.f32 	%r543, %r492, %r80;
	sub.f32 	%r544, %r491, %r80;
	sub.f32 	%r545, %r490, %r80;
	sub.f32 	%r546, %r489, %r80;
	sub.f32 	%r547, %r488, %r80;
	sub.f32 	%r548, %r487, %r80;
	sub.f32 	%r549, %r486, %r80;
	.loc	1 66 41                         // rmsnorm.py:66:41
	selp.f32 	%r550, %r549, 0f00000000, %p14;
	selp.f32 	%r551, %r548, 0f00000000, %p14;
	selp.f32 	%r552, %r547, 0f00000000, %p14;
	selp.f32 	%r553, %r546, 0f00000000, %p14;
	selp.f32 	%r554, %r545, 0f00000000, %p14;
	selp.f32 	%r555, %r544, 0f00000000, %p14;
	selp.f32 	%r556, %r543, 0f00000000, %p14;
	selp.f32 	%r557, %r542, 0f00000000, %p14;
	selp.f32 	%r558, %r541, 0f00000000, %p13;
	selp.f32 	%r559, %r540, 0f00000000, %p13;
	selp.f32 	%r560, %r539, 0f00000000, %p13;
	selp.f32 	%r561, %r538, 0f00000000, %p13;
	selp.f32 	%r562, %r537, 0f00000000, %p13;
	selp.f32 	%r563, %r536, 0f00000000, %p13;
	selp.f32 	%r564, %r535, 0f00000000, %p13;
	selp.f32 	%r565, %r534, 0f00000000, %p13;
	selp.f32 	%r566, %r533, 0f00000000, %p12;
	selp.f32 	%r567, %r532, 0f00000000, %p12;
	selp.f32 	%r568, %r531, 0f00000000, %p12;
	selp.f32 	%r569, %r530, 0f00000000, %p12;
	selp.f32 	%r570, %r529, 0f00000000, %p12;
	selp.f32 	%r571, %r528, 0f00000000, %p12;
	selp.f32 	%r572, %r527, 0f00000000, %p12;
	selp.f32 	%r573, %r526, 0f00000000, %p12;
	selp.f32 	%r574, %r525, 0f00000000, %p11;
	selp.f32 	%r575, %r524, 0f00000000, %p11;
	selp.f32 	%r576, %r523, 0f00000000, %p11;
	selp.f32 	%r577, %r522, 0f00000000, %p11;
	selp.f32 	%r578, %r521, 0f00000000, %p11;
	selp.f32 	%r579, %r520, 0f00000000, %p11;
	selp.f32 	%r580, %r519, 0f00000000, %p11;
	selp.f32 	%r581, %r518, 0f00000000, %p11;
	.loc	1 67 16                         // rmsnorm.py:67:16
	fma.rn.f32 	%r938, %r581, %r581, %r938;
	fma.rn.f32 	%r937, %r580, %r580, %r937;
	fma.rn.f32 	%r936, %r579, %r579, %r936;
	fma.rn.f32 	%r935, %r578, %r578, %r935;
	fma.rn.f32 	%r934, %r577, %r577, %r934;
	fma.rn.f32 	%r933, %r576, %r576, %r933;
	fma.rn.f32 	%r932, %r575, %r575, %r932;
	fma.rn.f32 	%r939, %r574, %r574, %r939;
	fma.rn.f32 	%r940, %r573, %r573, %r940;
	fma.rn.f32 	%r941, %r572, %r572, %r941;
	fma.rn.f32 	%r942, %r571, %r571, %r942;
	fma.rn.f32 	%r943, %r570, %r570, %r943;
	fma.rn.f32 	%r944, %r569, %r569, %r944;
	fma.rn.f32 	%r945, %r568, %r568, %r945;
	fma.rn.f32 	%r946, %r567, %r567, %r946;
	fma.rn.f32 	%r947, %r566, %r566, %r947;
	fma.rn.f32 	%r948, %r565, %r565, %r948;
	fma.rn.f32 	%r949, %r564, %r564, %r949;
	fma.rn.f32 	%r950, %r563, %r563, %r950;
	fma.rn.f32 	%r951, %r562, %r562, %r951;
	fma.rn.f32 	%r952, %r561, %r561, %r952;
	fma.rn.f32 	%r953, %r560, %r560, %r953;
	fma.rn.f32 	%r954, %r559, %r559, %r954;
	fma.rn.f32 	%r955, %r558, %r558, %r955;
	fma.rn.f32 	%r956, %r557, %r557, %r956;
	fma.rn.f32 	%r957, %r556, %r556, %r957;
	fma.rn.f32 	%r958, %r555, %r555, %r958;
	fma.rn.f32 	%r959, %r554, %r554, %r959;
	fma.rn.f32 	%r960, %r553, %r553, %r960;
	fma.rn.f32 	%r961, %r552, %r552, %r961;
	fma.rn.f32 	%r962, %r551, %r551, %r962;
	fma.rn.f32 	%r963, %r550, %r550, %r963;
	.loc	1 63 27                         // rmsnorm.py:63:27
	add.s32 	%r899, %r899, 4096;
	setp.lt.s32 	%p15, %r899, %r226;
	@%p15 bra 	$L__BB0_6;
$L__BB0_7:                              // %._crit_edge7
$L__tmp3:
	.loc	2 290 36                        // standard.py:290:36 @[ rmsnorm.py:68:17 ]
	bar.sync 	0;
	.loc	2 260 15                        // standard.py:260:15 @[ rmsnorm.py:68:17 ]
	add.f32 	%r588, %r932, %r933;
	add.f32 	%r589, %r934, %r588;
	add.f32 	%r590, %r935, %r589;
	add.f32 	%r591, %r936, %r590;
	add.f32 	%r592, %r937, %r591;
	add.f32 	%r593, %r938, %r592;
	add.f32 	%r594, %r939, %r593;
	add.f32 	%r595, %r940, %r594;
	add.f32 	%r596, %r941, %r595;
	add.f32 	%r597, %r942, %r596;
	add.f32 	%r598, %r943, %r597;
	add.f32 	%r599, %r944, %r598;
	add.f32 	%r600, %r945, %r599;
	add.f32 	%r601, %r946, %r600;
	add.f32 	%r602, %r947, %r601;
	add.f32 	%r603, %r948, %r602;
	add.f32 	%r604, %r949, %r603;
	add.f32 	%r605, %r950, %r604;
	add.f32 	%r606, %r951, %r605;
	add.f32 	%r607, %r952, %r606;
	add.f32 	%r608, %r953, %r607;
	add.f32 	%r609, %r954, %r608;
	add.f32 	%r610, %r955, %r609;
	add.f32 	%r611, %r956, %r610;
	add.f32 	%r612, %r957, %r611;
	add.f32 	%r613, %r958, %r612;
	add.f32 	%r614, %r959, %r613;
	add.f32 	%r615, %r960, %r614;
	add.f32 	%r616, %r961, %r615;
	add.f32 	%r617, %r962, %r616;
	add.f32 	%r618, %r963, %r617;
	.loc	2 290 36                        // standard.py:290:36 @[ rmsnorm.py:68:17 ]
	shfl.sync.bfly.b32 	%r619, %r618, 16, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ rmsnorm.py:68:17 ]
	add.f32 	%r620, %r618, %r619;
	.loc	2 290 36                        // standard.py:290:36 @[ rmsnorm.py:68:17 ]
	shfl.sync.bfly.b32 	%r621, %r620, 8, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ rmsnorm.py:68:17 ]
	add.f32 	%r622, %r620, %r621;
	.loc	2 290 36                        // standard.py:290:36 @[ rmsnorm.py:68:17 ]
	shfl.sync.bfly.b32 	%r623, %r622, 4, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ rmsnorm.py:68:17 ]
	add.f32 	%r624, %r622, %r623;
	.loc	2 290 36                        // standard.py:290:36 @[ rmsnorm.py:68:17 ]
	shfl.sync.bfly.b32 	%r625, %r624, 2, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ rmsnorm.py:68:17 ]
	add.f32 	%r626, %r624, %r625;
	.loc	2 290 36                        // standard.py:290:36 @[ rmsnorm.py:68:17 ]
	shfl.sync.bfly.b32 	%r627, %r626, 1, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ rmsnorm.py:68:17 ]
	add.f32 	%r583, %r626, %r627;
	.loc	2 290 36                        // standard.py:290:36 @[ rmsnorm.py:68:17 ]
	// begin inline asm
	@%p7 st.shared.b32 [ %r582 + 0 ], %r583;
	// end inline asm
	bar.sync 	0;
	// begin inline asm
	@%p8 ld.shared.b32 %r584, [ %r586 + 0 ];
	// end inline asm
	shfl.sync.bfly.b32 	%r628, %r584, 2, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ rmsnorm.py:68:17 ]
	add.f32 	%r629, %r584, %r628;
	.loc	2 290 36                        // standard.py:290:36 @[ rmsnorm.py:68:17 ]
	shfl.sync.bfly.b32 	%r630, %r629, 1, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ rmsnorm.py:68:17 ]
	add.f32 	%r587, %r629, %r630;
	.loc	2 290 36                        // standard.py:290:36 @[ rmsnorm.py:68:17 ]
	// begin inline asm
	@%p18 st.shared.b32 [ %r586 + 0 ], %r587;
	// end inline asm
	bar.sync 	0;
	ld.shared.b32 	%r631, [global_smem];
$L__tmp4:
	.loc	1 68 33                         // rmsnorm.py:68:33
	div.full.f32 	%r632, %r631, %r79;
	.loc	1 69 29                         // rmsnorm.py:69:29
	add.f32 	%r633, %r632, 0f3089705F;
	.loc	1 69 23                         // rmsnorm.py:69:23
	sqrt.approx.ftz.f32 	%r634, %r633;
	mov.b32 	%r635, 0f3F800000;
	.loc	1 69 15                         // rmsnorm.py:69:15
	div.full.f32 	%r219, %r635, %r634;
	.loc	1 71 20                         // rmsnorm.py:71:20
	mul.wide.u32 	%rd29, %r1, 2;
	add.s64 	%rd27, %rd4, %rd29;
	.loc	1 71 25                         // rmsnorm.py:71:25
	cvt.rn.f16.f32 	%rs65, %r80;
	// begin inline asm
	@%p18 st.global.b16 [ %rd27 + 0 ], { %rs65 };
	// end inline asm
	.loc	1 72 20                         // rmsnorm.py:72:20
	add.s64 	%rd28, %rd5, %rd29;
	.loc	1 72 25                         // rmsnorm.py:72:25
	cvt.rn.f16.f32 	%rs66, %r219;
	// begin inline asm
	@%p18 st.global.b16 [ %rd28 + 0 ], { %rs66 };
	// end inline asm
	.loc	1 74 27                         // rmsnorm.py:74:27
	@%p1 bra 	$L__BB0_10;
// %bb.8:                               // %.lr.ph9.preheader
	.loc	1 0 27                          // rmsnorm.py:0:27
	ld.param.b64 	%rd7, [_rms_norm_fwd_fused_param_1];
	ld.param.b64 	%rd3, [_rms_norm_fwd_fused_param_2];
	add.s64 	%rd1, %rd7, %rd8;
	mov.b32 	%r657, 0;
	mov.b32 	%r964, %r657;
$L__BB0_9:                              // %.lr.ph9
                                        // =>This Inner Loop Header: Depth=1
	.loc	1 75 21                         // rmsnorm.py:75:21
	add.s32 	%r701, %r5, %r964;
	add.s32 	%r702, %r701, 1024;
	add.s32 	%r703, %r701, 2048;
	.loc	1 76 22                         // rmsnorm.py:76:22
	add.s32 	%r704, %r701, 3072;
	setp.lt.s32 	%p22, %r701, %r226;
	setp.lt.s32 	%p23, %r702, %r226;
	setp.lt.s32 	%p24, %r703, %r226;
	setp.lt.s32 	%p25, %r704, %r226;
	.loc	1 77 24                         // rmsnorm.py:77:24
	mul.wide.s32 	%rd42, %r701, 2;
	add.s64 	%rd30, %rd3, %rd42;
	cvt.s64.s32 	%rd43, %r964;
	add.s64 	%rd45, %rd43, %rd50;
	shl.b64 	%rd46, %rd45, 1;
	add.s64 	%rd47, %rd3, %rd46;
	add.s64 	%rd31, %rd47, 2048;
	add.s64 	%rd32, %rd47, 4096;
	add.s64 	%rd33, %rd47, 6144;
	.loc	1 77 20                         // rmsnorm.py:77:20
	// begin inline asm
	mov.u32 %r637, 0x0;
	mov.u32 %r638, 0x0;
	mov.u32 %r639, 0x0;
	mov.u32 %r640, 0x0;
	@%p22 ld.global.v4.b32 { %r637, %r638, %r639, %r640 }, [ %rd30 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r641, 0x0;
	mov.u32 %r642, 0x0;
	mov.u32 %r643, 0x0;
	mov.u32 %r644, 0x0;
	@%p23 ld.global.v4.b32 { %r641, %r642, %r643, %r644 }, [ %rd31 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r645, 0x0;
	mov.u32 %r646, 0x0;
	mov.u32 %r647, 0x0;
	mov.u32 %r648, 0x0;
	@%p24 ld.global.v4.b32 { %r645, %r646, %r647, %r648 }, [ %rd32 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r649, 0x0;
	mov.u32 %r650, 0x0;
	mov.u32 %r651, 0x0;
	mov.u32 %r652, 0x0;
	@%p25 ld.global.v4.b32 { %r649, %r650, %r651, %r652 }, [ %rd33 + 0 ];
	// end inline asm
	.loc	1 78 24                         // rmsnorm.py:78:24
	add.s64 	%rd34, %rd2, %rd42;
	add.s64 	%rd48, %rd2, %rd46;
	add.s64 	%rd35, %rd48, 2048;
	add.s64 	%rd36, %rd48, 4096;
	add.s64 	%rd37, %rd48, 6144;
	.loc	1 78 20                         // rmsnorm.py:78:20
	// begin inline asm
	mov.u32 %r653, %r657;
	mov.u32 %r654, %r657;
	mov.u32 %r655, %r657;
	mov.u32 %r656, %r657;
	@%p22 ld.global.v4.b32 { %r653, %r654, %r655, %r656 }, [ %rd34 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r661, %r657;
	mov.u32 %r662, %r657;
	mov.u32 %r663, %r657;
	mov.u32 %r664, %r657;
	@%p23 ld.global.v4.b32 { %r661, %r662, %r663, %r664 }, [ %rd35 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r669, %r657;
	mov.u32 %r670, %r657;
	mov.u32 %r671, %r657;
	mov.u32 %r672, %r657;
	@%p24 ld.global.v4.b32 { %r669, %r670, %r671, %r672 }, [ %rd36 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r677, %r657;
	mov.u32 %r678, %r657;
	mov.u32 %r679, %r657;
	mov.u32 %r680, %r657;
	@%p25 ld.global.v4.b32 { %r677, %r678, %r679, %r680 }, [ %rd37 + 0 ];
	// end inline asm
	.loc	1 82 21                         // rmsnorm.py:82:21
	add.s64 	%rd38, %rd1, %rd42;
	add.s64 	%rd49, %rd1, %rd46;
	add.s64 	%rd39, %rd49, 2048;
	add.s64 	%rd40, %rd49, 4096;
	add.s64 	%rd41, %rd49, 6144;
	.loc	1 78 54                         // rmsnorm.py:78:54
	mov.b32 	{%rs67, %rs68}, %r653;
	cvt.f32.f16 	%r705, %rs68;
	cvt.f32.f16 	%r706, %rs67;
	.loc	1 79 21                         // rmsnorm.py:79:21
	sub.f32 	%r707, %r706, %r80;
	sub.f32 	%r708, %r705, %r80;
	.loc	1 79 29                         // rmsnorm.py:79:29
	mul.f32 	%r709, %r219, %r708;
	mul.f32 	%r710, %r219, %r707;
	.loc	1 80 20                         // rmsnorm.py:80:20
	mov.b32 	{%rs69, %rs70}, %r637;
	cvt.f32.f16 	%r711, %rs70;
	cvt.f32.f16 	%r712, %rs69;
	mul.f32 	%r713, %r710, %r712;
	mul.f32 	%r714, %r709, %r711;
	.loc	1 82 27                         // rmsnorm.py:82:27
	cvt.rn.f16x2.f32 	%r685, %r714, %r713;
	.loc	1 78 54                         // rmsnorm.py:78:54
	mov.b32 	{%rs71, %rs72}, %r654;
	cvt.f32.f16 	%r715, %rs72;
	cvt.f32.f16 	%r716, %rs71;
	.loc	1 79 21                         // rmsnorm.py:79:21
	sub.f32 	%r717, %r716, %r80;
	sub.f32 	%r718, %r715, %r80;
	.loc	1 79 29                         // rmsnorm.py:79:29
	mul.f32 	%r719, %r219, %r718;
	mul.f32 	%r720, %r219, %r717;
	.loc	1 80 20                         // rmsnorm.py:80:20
	mov.b32 	{%rs73, %rs74}, %r638;
	cvt.f32.f16 	%r721, %rs74;
	cvt.f32.f16 	%r722, %rs73;
	mul.f32 	%r723, %r720, %r722;
	mul.f32 	%r724, %r719, %r721;
	.loc	1 82 27                         // rmsnorm.py:82:27
	cvt.rn.f16x2.f32 	%r686, %r724, %r723;
	.loc	1 78 54                         // rmsnorm.py:78:54
	mov.b32 	{%rs75, %rs76}, %r655;
	cvt.f32.f16 	%r725, %rs76;
	cvt.f32.f16 	%r726, %rs75;
	.loc	1 79 21                         // rmsnorm.py:79:21
	sub.f32 	%r727, %r726, %r80;
	sub.f32 	%r728, %r725, %r80;
	.loc	1 79 29                         // rmsnorm.py:79:29
	mul.f32 	%r729, %r219, %r728;
	mul.f32 	%r730, %r219, %r727;
	.loc	1 80 20                         // rmsnorm.py:80:20
	mov.b32 	{%rs77, %rs78}, %r639;
	cvt.f32.f16 	%r731, %rs78;
	cvt.f32.f16 	%r732, %rs77;
	mul.f32 	%r733, %r730, %r732;
	mul.f32 	%r734, %r729, %r731;
	.loc	1 82 27                         // rmsnorm.py:82:27
	cvt.rn.f16x2.f32 	%r687, %r734, %r733;
	.loc	1 78 54                         // rmsnorm.py:78:54
	mov.b32 	{%rs79, %rs80}, %r656;
	cvt.f32.f16 	%r735, %rs80;
	cvt.f32.f16 	%r736, %rs79;
	.loc	1 79 21                         // rmsnorm.py:79:21
	sub.f32 	%r737, %r736, %r80;
	sub.f32 	%r738, %r735, %r80;
	.loc	1 79 29                         // rmsnorm.py:79:29
	mul.f32 	%r739, %r219, %r738;
	mul.f32 	%r740, %r219, %r737;
	.loc	1 80 20                         // rmsnorm.py:80:20
	mov.b32 	{%rs81, %rs82}, %r640;
	cvt.f32.f16 	%r741, %rs82;
	cvt.f32.f16 	%r742, %rs81;
	mul.f32 	%r743, %r740, %r742;
	mul.f32 	%r744, %r739, %r741;
	.loc	1 82 27                         // rmsnorm.py:82:27
	cvt.rn.f16x2.f32 	%r688, %r744, %r743;
	.loc	1 78 54                         // rmsnorm.py:78:54
	mov.b32 	{%rs83, %rs84}, %r661;
	cvt.f32.f16 	%r745, %rs84;
	cvt.f32.f16 	%r746, %rs83;
	.loc	1 79 21                         // rmsnorm.py:79:21
	sub.f32 	%r747, %r746, %r80;
	sub.f32 	%r748, %r745, %r80;
	.loc	1 79 29                         // rmsnorm.py:79:29
	mul.f32 	%r749, %r219, %r748;
	mul.f32 	%r750, %r219, %r747;
	.loc	1 80 20                         // rmsnorm.py:80:20
	mov.b32 	{%rs85, %rs86}, %r641;
	cvt.f32.f16 	%r751, %rs86;
	cvt.f32.f16 	%r752, %rs85;
	mul.f32 	%r753, %r750, %r752;
	mul.f32 	%r754, %r749, %r751;
	.loc	1 82 27                         // rmsnorm.py:82:27
	cvt.rn.f16x2.f32 	%r689, %r754, %r753;
	.loc	1 78 54                         // rmsnorm.py:78:54
	mov.b32 	{%rs87, %rs88}, %r662;
	cvt.f32.f16 	%r755, %rs88;
	cvt.f32.f16 	%r756, %rs87;
	.loc	1 79 21                         // rmsnorm.py:79:21
	sub.f32 	%r757, %r756, %r80;
	sub.f32 	%r758, %r755, %r80;
	.loc	1 79 29                         // rmsnorm.py:79:29
	mul.f32 	%r759, %r219, %r758;
	mul.f32 	%r760, %r219, %r757;
	.loc	1 80 20                         // rmsnorm.py:80:20
	mov.b32 	{%rs89, %rs90}, %r642;
	cvt.f32.f16 	%r761, %rs90;
	cvt.f32.f16 	%r762, %rs89;
	mul.f32 	%r763, %r760, %r762;
	mul.f32 	%r764, %r759, %r761;
	.loc	1 82 27                         // rmsnorm.py:82:27
	cvt.rn.f16x2.f32 	%r690, %r764, %r763;
	.loc	1 78 54                         // rmsnorm.py:78:54
	mov.b32 	{%rs91, %rs92}, %r663;
	cvt.f32.f16 	%r765, %rs92;
	cvt.f32.f16 	%r766, %rs91;
	.loc	1 79 21                         // rmsnorm.py:79:21
	sub.f32 	%r767, %r766, %r80;
	sub.f32 	%r768, %r765, %r80;
	.loc	1 79 29                         // rmsnorm.py:79:29
	mul.f32 	%r769, %r219, %r768;
	mul.f32 	%r770, %r219, %r767;
	.loc	1 80 20                         // rmsnorm.py:80:20
	mov.b32 	{%rs93, %rs94}, %r643;
	cvt.f32.f16 	%r771, %rs94;
	cvt.f32.f16 	%r772, %rs93;
	mul.f32 	%r773, %r770, %r772;
	mul.f32 	%r774, %r769, %r771;
	.loc	1 82 27                         // rmsnorm.py:82:27
	cvt.rn.f16x2.f32 	%r691, %r774, %r773;
	.loc	1 78 54                         // rmsnorm.py:78:54
	mov.b32 	{%rs95, %rs96}, %r664;
	cvt.f32.f16 	%r775, %rs96;
	cvt.f32.f16 	%r776, %rs95;
	.loc	1 79 21                         // rmsnorm.py:79:21
	sub.f32 	%r777, %r776, %r80;
	sub.f32 	%r778, %r775, %r80;
	.loc	1 79 29                         // rmsnorm.py:79:29
	mul.f32 	%r779, %r219, %r778;
	mul.f32 	%r780, %r219, %r777;
	.loc	1 80 20                         // rmsnorm.py:80:20
	mov.b32 	{%rs97, %rs98}, %r644;
	cvt.f32.f16 	%r781, %rs98;
	cvt.f32.f16 	%r782, %rs97;
	mul.f32 	%r783, %r780, %r782;
	mul.f32 	%r784, %r779, %r781;
	.loc	1 82 27                         // rmsnorm.py:82:27
	cvt.rn.f16x2.f32 	%r692, %r784, %r783;
	.loc	1 78 54                         // rmsnorm.py:78:54
	mov.b32 	{%rs99, %rs100}, %r669;
	cvt.f32.f16 	%r785, %rs100;
	cvt.f32.f16 	%r786, %rs99;
	.loc	1 79 21                         // rmsnorm.py:79:21
	sub.f32 	%r787, %r786, %r80;
	sub.f32 	%r788, %r785, %r80;
	.loc	1 79 29                         // rmsnorm.py:79:29
	mul.f32 	%r789, %r219, %r788;
	mul.f32 	%r790, %r219, %r787;
	.loc	1 80 20                         // rmsnorm.py:80:20
	mov.b32 	{%rs101, %rs102}, %r645;
	cvt.f32.f16 	%r791, %rs102;
	cvt.f32.f16 	%r792, %rs101;
	mul.f32 	%r793, %r790, %r792;
	mul.f32 	%r794, %r789, %r791;
	.loc	1 82 27                         // rmsnorm.py:82:27
	cvt.rn.f16x2.f32 	%r693, %r794, %r793;
	.loc	1 78 54                         // rmsnorm.py:78:54
	mov.b32 	{%rs103, %rs104}, %r670;
	cvt.f32.f16 	%r795, %rs104;
	cvt.f32.f16 	%r796, %rs103;
	.loc	1 79 21                         // rmsnorm.py:79:21
	sub.f32 	%r797, %r796, %r80;
	sub.f32 	%r798, %r795, %r80;
	.loc	1 79 29                         // rmsnorm.py:79:29
	mul.f32 	%r799, %r219, %r798;
	mul.f32 	%r800, %r219, %r797;
	.loc	1 80 20                         // rmsnorm.py:80:20
	mov.b32 	{%rs105, %rs106}, %r646;
	cvt.f32.f16 	%r801, %rs106;
	cvt.f32.f16 	%r802, %rs105;
	mul.f32 	%r803, %r800, %r802;
	mul.f32 	%r804, %r799, %r801;
	.loc	1 82 27                         // rmsnorm.py:82:27
	cvt.rn.f16x2.f32 	%r694, %r804, %r803;
	.loc	1 78 54                         // rmsnorm.py:78:54
	mov.b32 	{%rs107, %rs108}, %r671;
	cvt.f32.f16 	%r805, %rs108;
	cvt.f32.f16 	%r806, %rs107;
	.loc	1 79 21                         // rmsnorm.py:79:21
	sub.f32 	%r807, %r806, %r80;
	sub.f32 	%r808, %r805, %r80;
	.loc	1 79 29                         // rmsnorm.py:79:29
	mul.f32 	%r809, %r219, %r808;
	mul.f32 	%r810, %r219, %r807;
	.loc	1 80 20                         // rmsnorm.py:80:20
	mov.b32 	{%rs109, %rs110}, %r647;
	cvt.f32.f16 	%r811, %rs110;
	cvt.f32.f16 	%r812, %rs109;
	mul.f32 	%r813, %r810, %r812;
	mul.f32 	%r814, %r809, %r811;
	.loc	1 82 27                         // rmsnorm.py:82:27
	cvt.rn.f16x2.f32 	%r695, %r814, %r813;
	.loc	1 78 54                         // rmsnorm.py:78:54
	mov.b32 	{%rs111, %rs112}, %r672;
	cvt.f32.f16 	%r815, %rs112;
	cvt.f32.f16 	%r816, %rs111;
	.loc	1 79 21                         // rmsnorm.py:79:21
	sub.f32 	%r817, %r816, %r80;
	sub.f32 	%r818, %r815, %r80;
	.loc	1 79 29                         // rmsnorm.py:79:29
	mul.f32 	%r819, %r219, %r818;
	mul.f32 	%r820, %r219, %r817;
	.loc	1 80 20                         // rmsnorm.py:80:20
	mov.b32 	{%rs113, %rs114}, %r648;
	cvt.f32.f16 	%r821, %rs114;
	cvt.f32.f16 	%r822, %rs113;
	mul.f32 	%r823, %r820, %r822;
	mul.f32 	%r824, %r819, %r821;
	.loc	1 82 27                         // rmsnorm.py:82:27
	cvt.rn.f16x2.f32 	%r696, %r824, %r823;
	.loc	1 78 54                         // rmsnorm.py:78:54
	mov.b32 	{%rs115, %rs116}, %r677;
	cvt.f32.f16 	%r825, %rs116;
	cvt.f32.f16 	%r826, %rs115;
	.loc	1 79 21                         // rmsnorm.py:79:21
	sub.f32 	%r827, %r826, %r80;
	sub.f32 	%r828, %r825, %r80;
	.loc	1 79 29                         // rmsnorm.py:79:29
	mul.f32 	%r829, %r219, %r828;
	mul.f32 	%r830, %r219, %r827;
	.loc	1 80 20                         // rmsnorm.py:80:20
	mov.b32 	{%rs117, %rs118}, %r649;
	cvt.f32.f16 	%r831, %rs118;
	cvt.f32.f16 	%r832, %rs117;
	mul.f32 	%r833, %r830, %r832;
	mul.f32 	%r834, %r829, %r831;
	.loc	1 82 27                         // rmsnorm.py:82:27
	cvt.rn.f16x2.f32 	%r697, %r834, %r833;
	.loc	1 78 54                         // rmsnorm.py:78:54
	mov.b32 	{%rs119, %rs120}, %r678;
	cvt.f32.f16 	%r835, %rs120;
	cvt.f32.f16 	%r836, %rs119;
	.loc	1 79 21                         // rmsnorm.py:79:21
	sub.f32 	%r837, %r836, %r80;
	sub.f32 	%r838, %r835, %r80;
	.loc	1 79 29                         // rmsnorm.py:79:29
	mul.f32 	%r839, %r219, %r838;
	mul.f32 	%r840, %r219, %r837;
	.loc	1 80 20                         // rmsnorm.py:80:20
	mov.b32 	{%rs121, %rs122}, %r650;
	cvt.f32.f16 	%r841, %rs122;
	cvt.f32.f16 	%r842, %rs121;
	mul.f32 	%r843, %r840, %r842;
	mul.f32 	%r844, %r839, %r841;
	.loc	1 82 27                         // rmsnorm.py:82:27
	cvt.rn.f16x2.f32 	%r698, %r844, %r843;
	.loc	1 78 54                         // rmsnorm.py:78:54
	mov.b32 	{%rs123, %rs124}, %r679;
	cvt.f32.f16 	%r845, %rs124;
	cvt.f32.f16 	%r846, %rs123;
	.loc	1 79 21                         // rmsnorm.py:79:21
	sub.f32 	%r847, %r846, %r80;
	sub.f32 	%r848, %r845, %r80;
	.loc	1 79 29                         // rmsnorm.py:79:29
	mul.f32 	%r849, %r219, %r848;
	mul.f32 	%r850, %r219, %r847;
	.loc	1 80 20                         // rmsnorm.py:80:20
	mov.b32 	{%rs125, %rs126}, %r651;
	cvt.f32.f16 	%r851, %rs126;
	cvt.f32.f16 	%r852, %rs125;
	mul.f32 	%r853, %r850, %r852;
	mul.f32 	%r854, %r849, %r851;
	.loc	1 82 27                         // rmsnorm.py:82:27
	cvt.rn.f16x2.f32 	%r699, %r854, %r853;
	.loc	1 78 54                         // rmsnorm.py:78:54
	mov.b32 	{%rs127, %rs128}, %r680;
	cvt.f32.f16 	%r855, %rs128;
	cvt.f32.f16 	%r856, %rs127;
	.loc	1 79 21                         // rmsnorm.py:79:21
	sub.f32 	%r857, %r856, %r80;
	sub.f32 	%r858, %r855, %r80;
	.loc	1 79 29                         // rmsnorm.py:79:29
	mul.f32 	%r859, %r219, %r858;
	mul.f32 	%r860, %r219, %r857;
	.loc	1 80 20                         // rmsnorm.py:80:20
	mov.b32 	{%rs129, %rs130}, %r652;
	cvt.f32.f16 	%r861, %rs130;
	cvt.f32.f16 	%r862, %rs129;
	mul.f32 	%r863, %r860, %r862;
	mul.f32 	%r864, %r859, %r861;
	.loc	1 82 27                         // rmsnorm.py:82:27
	cvt.rn.f16x2.f32 	%r700, %r864, %r863;
	// begin inline asm
	@%p22 st.global.v4.b32 [ %rd38 + 0 ], { %r685, %r686, %r687, %r688 };
	// end inline asm
	// begin inline asm
	@%p23 st.global.v4.b32 [ %rd39 + 0 ], { %r689, %r690, %r691, %r692 };
	// end inline asm
	// begin inline asm
	@%p24 st.global.v4.b32 [ %rd40 + 0 ], { %r693, %r694, %r695, %r696 };
	// end inline asm
	// begin inline asm
	@%p25 st.global.v4.b32 [ %rd41 + 0 ], { %r697, %r698, %r699, %r700 };
	// end inline asm
	.loc	1 74 27                         // rmsnorm.py:74:27
	add.s32 	%r964, %r964, 4096;
	setp.lt.s32 	%p34, %r964, %r226;
	@%p34 bra 	$L__BB0_9;
$L__BB0_10:                             // %._crit_edge10
	.loc	1 74 4                          // rmsnorm.py:74:4
	ret;
$L__tmp5:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/ubuntu/anjiang/PTX_dataset/triton_ptx/rmsnorm.py"
	.file	2 "/mnt/efs/anjiang/miniconda3/envs/ptx/lib/python3.10/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 169                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xa2 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 114                                 // DW_AT_name
.b8 109
.b8 115
.b8 110
.b8 111
.b8 114
.b8 109
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 117
.b8 98
.b8 117
.b8 110
.b8 116
.b8 117
.b8 47
.b8 97
.b8 110
.b8 106
.b8 105
.b8 97
.b8 110
.b8 103
.b8 47
.b8 80
.b8 84
.b8 88
.b8 95
.b8 100
.b8 97
.b8 116
.b8 97
.b8 115
.b8 101
.b8 116
.b8 47
.b8 116
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 95
.b8 112
.b8 116
.b8 120
.b8 0
.b8 2                                   // Abbrev [2] 0x50:0x16 DW_TAG_subprogram
.b8 95                                  // DW_AT_name
.b8 114
.b8 109
.b8 115
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 102
.b8 119
.b8 100
.b8 95
.b8 102
.b8 117
.b8 115
.b8 101
.b8 100
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x66:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 80                                 // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0x7b:0x18 DW_TAG_inlined_subroutine
.b32 80                                 // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 60                                  // DW_AT_call_line
.b8 18                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0x93:0x18 DW_TAG_inlined_subroutine
.b32 80                                 // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp4                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 68                                  // DW_AT_call_line
.b8 17                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
